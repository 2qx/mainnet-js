(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["mainnet"] = factory();
	else
		root["mainnet"] = factory();
})(window, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@bitauth/libauth/build/module/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/index.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] -> ./node_modules/@bitauth/libauth/build/module/lib/lib.js */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/lib */ "./node_modules/@bitauth/libauth/build/module/lib/lib.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _lib_lib__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _lib_lib__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/address.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/address.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export AddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .AddressType */
/*! export Base58AddressError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressError */
/*! export Base58AddressFormatVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressFormatVersion */
/*! export Bech32DecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .Bech32DecodingError */
/*! export BitRegroupingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .BitRegroupingError */
/*! export CashAddressCorrectionError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressCorrectionError */
/*! export CashAddressDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressDecodingError */
/*! export CashAddressEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressEncodingError */
/*! export CashAddressNetworkPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressNetworkPrefix */
/*! export CashAddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressType */
/*! export CashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByte */
/*! export CashAddressVersionByteDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByteDecodingError */
/*! export LockingBytecodeEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .LockingBytecodeEncodingError */
/*! export addressContentsToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .addressContentsToLockingBytecode */
/*! export attemptCashAddressFormatErrorCorrection [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .attemptCashAddressFormatErrorCorrection */
/*! export base58AddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .base58AddressToLockingBytecode */
/*! export bech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSet */
/*! export bech32CharacterSetIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSetIndex */
/*! export bech32PaddedToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32PaddedToBin */
/*! export binToBech32Padded [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .binToBech32Padded */
/*! export cashAddressBitToSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressBitToSize */
/*! export cashAddressChecksumToUint5Array [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressChecksumToUint5Array */
/*! export cashAddressPolynomialModulo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialModulo */
/*! export cashAddressPolynomialToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialToCashAddress */
/*! export cashAddressSizeToBit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressSizeToBit */
/*! export cashAddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .cashAddressToLockingBytecode */
/*! export decodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58Address */
/*! export decodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58AddressFormat */
/*! export decodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .decodeBech32 */
/*! export decodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddress */
/*! export decodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormat */
/*! export decodeCashAddressFormatWithoutPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormatWithoutPrefix */
/*! export decodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressVersionByte */
/*! export encodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58Address */
/*! export encodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58AddressFormat */
/*! export encodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .encodeBech32 */
/*! export encodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddress */
/*! export encodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressFormat */
/*! export encodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressVersionByte */
/*! export isBech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .isBech32CharacterSet */
/*! export lockingBytecodeToAddressContents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToAddressContents */
/*! export lockingBytecodeToBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToBase58Address */
/*! export lockingBytecodeToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToCashAddress */
/*! export maskCashAddressPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .maskCashAddressPrefix */
/*! export regroupBits [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .regroupBits */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base58AddressError": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressError,
/* harmony export */   "Base58AddressFormatVersion": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion,
/* harmony export */   "decodeBase58Address": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58Address,
/* harmony export */   "decodeBase58AddressFormat": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58AddressFormat,
/* harmony export */   "encodeBase58Address": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58Address,
/* harmony export */   "encodeBase58AddressFormat": () => /* reexport safe */ _base58_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58AddressFormat,
/* harmony export */   "Bech32DecodingError": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.Bech32DecodingError,
/* harmony export */   "BitRegroupingError": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.BitRegroupingError,
/* harmony export */   "bech32CharacterSet": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.bech32CharacterSet,
/* harmony export */   "bech32CharacterSetIndex": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.bech32CharacterSetIndex,
/* harmony export */   "bech32PaddedToBin": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.bech32PaddedToBin,
/* harmony export */   "binToBech32Padded": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.binToBech32Padded,
/* harmony export */   "decodeBech32": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.decodeBech32,
/* harmony export */   "encodeBech32": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.encodeBech32,
/* harmony export */   "isBech32CharacterSet": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.isBech32CharacterSet,
/* harmony export */   "regroupBits": () => /* reexport safe */ _bech32__WEBPACK_IMPORTED_MODULE_1__.regroupBits,
/* harmony export */   "CashAddressCorrectionError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressCorrectionError,
/* harmony export */   "CashAddressDecodingError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressDecodingError,
/* harmony export */   "CashAddressEncodingError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressEncodingError,
/* harmony export */   "CashAddressNetworkPrefix": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressNetworkPrefix,
/* harmony export */   "CashAddressType": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType,
/* harmony export */   "CashAddressVersionByte": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressVersionByte,
/* harmony export */   "CashAddressVersionByteDecodingError": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressVersionByteDecodingError,
/* harmony export */   "attemptCashAddressFormatErrorCorrection": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.attemptCashAddressFormatErrorCorrection,
/* harmony export */   "cashAddressBitToSize": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressBitToSize,
/* harmony export */   "cashAddressChecksumToUint5Array": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressChecksumToUint5Array,
/* harmony export */   "cashAddressPolynomialModulo": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressPolynomialModulo,
/* harmony export */   "cashAddressPolynomialToCashAddress": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressPolynomialToCashAddress,
/* harmony export */   "cashAddressSizeToBit": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.cashAddressSizeToBit,
/* harmony export */   "decodeCashAddress": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddress,
/* harmony export */   "decodeCashAddressFormat": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormat,
/* harmony export */   "decodeCashAddressFormatWithoutPrefix": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressFormatWithoutPrefix,
/* harmony export */   "decodeCashAddressVersionByte": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddressVersionByte,
/* harmony export */   "encodeCashAddress": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress,
/* harmony export */   "encodeCashAddressFormat": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddressFormat,
/* harmony export */   "encodeCashAddressVersionByte": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddressVersionByte,
/* harmony export */   "maskCashAddressPrefix": () => /* reexport safe */ _cash_address__WEBPACK_IMPORTED_MODULE_2__.maskCashAddressPrefix,
/* harmony export */   "AddressType": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.AddressType,
/* harmony export */   "LockingBytecodeEncodingError": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.LockingBytecodeEncodingError,
/* harmony export */   "addressContentsToLockingBytecode": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.addressContentsToLockingBytecode,
/* harmony export */   "base58AddressToLockingBytecode": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.base58AddressToLockingBytecode,
/* harmony export */   "cashAddressToLockingBytecode": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.cashAddressToLockingBytecode,
/* harmony export */   "lockingBytecodeToAddressContents": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.lockingBytecodeToAddressContents,
/* harmony export */   "lockingBytecodeToBase58Address": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.lockingBytecodeToBase58Address,
/* harmony export */   "lockingBytecodeToCashAddress": () => /* reexport safe */ _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__.lockingBytecodeToCashAddress
/* harmony export */ });
/* harmony import */ var _base58_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base58-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js");
/* harmony import */ var _bech32__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bech32 */ "./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js");
/* harmony import */ var _cash_address__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cash-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js");
/* harmony import */ var _locking_bytecode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./locking-bytecode */ "./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js");




//# sourceMappingURL=address.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export Base58AddressError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Base58AddressFormatVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base58AddressFormatVersion": () => /* binding */ Base58AddressFormatVersion,
/* harmony export */   "encodeBase58AddressFormat": () => /* binding */ encodeBase58AddressFormat,
/* harmony export */   "encodeBase58Address": () => /* binding */ encodeBase58Address,
/* harmony export */   "Base58AddressError": () => /* binding */ Base58AddressError,
/* harmony export */   "decodeBase58AddressFormat": () => /* binding */ decodeBase58AddressFormat,
/* harmony export */   "decodeBase58Address": () => /* binding */ decodeBase58Address
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * Base58 version byte values for common Base58Address format versions.
 */
var Base58AddressFormatVersion;
(function (Base58AddressFormatVersion) {
    /**
     * A Pay to Public Key Hash (P2PKH) address – base58 encodes to a leading `1`.
     *
     * Hex: `0x00`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2pkh"] = 0] = "p2pkh";
    /**
     * A Pay to Script Hash (P2SH) address – base58 encodes to a leading `3`.
     *
     * Hex: `0x05`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2sh"] = 5] = "p2sh";
    /**
     * A private key in Wallet Import Format. For private keys used with
     * uncompressed public keys, the payload is 32 bytes and causes the version
     * to be encoded as a `5`. For private keys used with compressed public keys,
     * a final `0x01` byte is appended to the private key, increasing the payload
     * to 33 bytes, and causing the version to be encoded as a `K` or `L`.
     *
     * Hex: `0x80`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["wif"] = 128] = "wif";
    /**
     * A testnet Pay to Public Key Hash (P2PKH) address – base58 encodes to a
     * leading `m` or `n`.
     *
     * Hex: `0x6f`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2pkhTestnet"] = 111] = "p2pkhTestnet";
    /**
     * A testnet Pay to Script Hash (P2SH) address – base58 encodes to a leading
     * `2`.
     *
     * Hex: `0xc4`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2shTestnet"] = 196] = "p2shTestnet";
    /**
     * A private key in Wallet Import Format intended for testnet use. For private
     * keys used with uncompressed public keys, the payload is 32 bytes and causes
     * the version to be encoded as a `9`. For private keys used with compressed
     * public keys, a final `0x01` byte is appended to the private key, increasing
     * the payload to 33 bytes, and causing the version to be encoded as a `c`.
     *
     * Hex: `0xef`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["wifTestnet"] = 239] = "wifTestnet";
    /**
     * A Pay to Public Key Hash (P2PKH) address intended for use on the Bitcoin
     * Cash network – base58 encodes to a leading `C`. This version was
     * temporarily used by the Copay project before the CashAddress format was
     * standardized.
     *
     * Hex: `0x1c`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2pkhCopayBCH"] = 28] = "p2pkhCopayBCH";
    /**
     * A Pay to Script Hash (P2SH) address intended for use on the Bitcoin
     * Cash network – base58 encodes to a leading `H`. This version was
     * temporarily used by the Copay project before the CashAddress format was
     * standardized.
     *
     * Hex: `0x28`
     */
    Base58AddressFormatVersion[Base58AddressFormatVersion["p2shCopayBCH"] = 40] = "p2shCopayBCH";
})(Base58AddressFormatVersion || (Base58AddressFormatVersion = {}));
/**
 * Encode a payload using the Base58Address format, the original address format
 * used by the Satoshi implementation.
 *
 * Note, this method does not enforce error handling via the type system. The
 * returned string will not be a valid Base58Address if `hash` is not exactly 20
 * bytes. If needed, validate the length of `hash` before calling this method.
 *
 * @remarks
 * A Base58Address includes a 1-byte prefix to indicate the address version, a
 * variable-length payload, and a 4-byte checksum:
 *
 * `[version: 1 byte] [payload: variable length] [checksum: 4 bytes]`
 *
 * The checksum is the first 4 bytes of the double-SHA256 hash of the version
 * byte followed by the payload.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param version - the address version byte (see `Base58Version`)
 * @param payload - the Uint8Array payload to encode
 */
const encodeBase58AddressFormat = (sha256, version, payload) => {
    const checksumBytes = 4;
    const content = Uint8Array.from([version, ...payload]);
    const checksum = sha256.hash(sha256.hash(content)).slice(0, checksumBytes);
    const bin = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([content, checksum]);
    return (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToBase58)(bin);
};
/**
 * Encode a hash as a Base58Address.
 *
 * Note, this method does not enforce error handling via the type system. The
 * returned string will not be a valid Base58Address if `hash` is not exactly 20
 * bytes. If needed, validate the length of `hash` before calling this method.
 *
 * For other standards which use the Base58Address format but have other version
 * or length requirements, use `encodeCashAddressFormat`.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param type - the type of address to encode: `p2pkh`, `p2sh`,
 * `p2pkh-testnet`, or `p2sh-testnet`
 * @param hash - the 20-byte hash to encode
 * (`RIPEMD160(SHA256(public key or bytecode))`)
 */
const encodeBase58Address = (sha256, type, payload) => encodeBase58AddressFormat(sha256, {
    p2pkh: Base58AddressFormatVersion.p2pkh,
    'p2pkh-copay-bch': Base58AddressFormatVersion.p2pkhCopayBCH,
    'p2pkh-testnet': Base58AddressFormatVersion.p2pkhTestnet,
    p2sh: Base58AddressFormatVersion.p2sh,
    'p2sh-copay-bch': Base58AddressFormatVersion.p2shCopayBCH,
    'p2sh-testnet': Base58AddressFormatVersion.p2shTestnet,
}[type], payload);
var Base58AddressError;
(function (Base58AddressError) {
    Base58AddressError["unknownCharacter"] = "Base58Address error: address may only contain valid base58 characters.";
    Base58AddressError["tooShort"] = "Base58Address error: address is too short to be valid.";
    Base58AddressError["invalidChecksum"] = "Base58Address error: address has an invalid checksum.";
    Base58AddressError["unknownAddressVersion"] = "Base58Address error: address uses an unknown address version.";
    Base58AddressError["incorrectLength"] = "Base58Address error: the encoded payload is not the correct length (20 bytes).";
})(Base58AddressError || (Base58AddressError = {}));
/**
 * Attempt to decode a Base58Address-formatted string. This is more lenient than
 * `decodeCashAddress`, which also validates the address version.
 *
 * Returns the contents of the address or an error message as a string.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param address - the string to decode as a base58 address
 */
const decodeBase58AddressFormat = (sha256, address) => {
    const checksumBytes = 4;
    const bin = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.base58ToBin)(address);
    if (bin === _format_format__WEBPACK_IMPORTED_MODULE_0__.BaseConversionError.unknownCharacter) {
        return Base58AddressError.unknownCharacter;
    }
    const minimumBase58AddressLength = 5;
    if (bin.length < minimumBase58AddressLength) {
        return Base58AddressError.tooShort;
    }
    const content = bin.slice(0, -checksumBytes);
    const checksum = bin.slice(-checksumBytes);
    const expectedChecksum = sha256
        .hash(sha256.hash(content))
        .slice(0, checksumBytes);
    if (!checksum.every((value, i) => value === expectedChecksum[i])) {
        return Base58AddressError.invalidChecksum;
    }
    return {
        payload: content.slice(1),
        version: content[0],
    };
};
/**
 * Decode and validate a Base58Address, strictly checking the version and
 * payload length.
 *
 * For other address-like standards which closely follow the Base58Address
 * format (but have alternative version byte requirements), use
 * `decodeBase58AddressFormat`.
 *
 * @remarks
 * Because the Wallet Import Format (WIF) private key serialization format uses
 * the Base58Address format, some libraries allow WIF key decoding via the same
 * method as base58 address decoding. This method strictly accepts only
 * Base58Address types, but WIF keys can be decoded with `decodePrivateKeyWif`.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param address - the string to decode as a base58 address
 */
const decodeBase58Address = (sha256, address) => {
    const decoded = decodeBase58AddressFormat(sha256, address);
    if (typeof decoded === 'string')
        return decoded;
    if (![
        Base58AddressFormatVersion.p2pkh,
        Base58AddressFormatVersion.p2sh,
        Base58AddressFormatVersion.p2pkhTestnet,
        Base58AddressFormatVersion.p2shTestnet,
        Base58AddressFormatVersion.p2pkhCopayBCH,
        Base58AddressFormatVersion.p2shCopayBCH,
    ].includes(decoded.version)) {
        return Base58AddressError.unknownAddressVersion;
    }
    const hash160Length = 20;
    if (decoded.payload.length !== hash160Length) {
        return Base58AddressError.incorrectLength;
    }
    return decoded;
};
//# sourceMappingURL=base58-address.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export Bech32DecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BitRegroupingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bech32CharacterSetIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bech32PaddedToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBech32Padded [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBech32 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeBech32 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export regroupBits [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bech32CharacterSet": () => /* binding */ bech32CharacterSet,
/* harmony export */   "bech32CharacterSetIndex": () => /* binding */ bech32CharacterSetIndex,
/* harmony export */   "BitRegroupingError": () => /* binding */ BitRegroupingError,
/* harmony export */   "regroupBits": () => /* binding */ regroupBits,
/* harmony export */   "encodeBech32": () => /* binding */ encodeBech32,
/* harmony export */   "decodeBech32": () => /* binding */ decodeBech32,
/* harmony export */   "isBech32CharacterSet": () => /* binding */ isBech32CharacterSet,
/* harmony export */   "Bech32DecodingError": () => /* binding */ Bech32DecodingError,
/* harmony export */   "bech32PaddedToBin": () => /* binding */ bech32PaddedToBin,
/* harmony export */   "binToBech32Padded": () => /* binding */ binToBech32Padded
/* harmony export */ });
/**
 * The list of 32 symbols used in Bech32 encoding.
 */
// cspell: disable-next-line
const bech32CharacterSet = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';
/**
 * An object mapping each of the 32 symbols used in Bech32 encoding to their respective index in the character set.
 */
// prettier-ignore
const bech32CharacterSetIndex = { q: 0, p: 1, z: 2, r: 3, y: 4, '9': 5, x: 6, '8': 7, g: 8, f: 9, '2': 10, t: 11, v: 12, d: 13, w: 14, '0': 15, s: 16, '3': 17, j: 18, n: 19, '5': 20, '4': 21, k: 22, h: 23, c: 24, e: 25, '6': 26, m: 27, u: 28, a: 29, '7': 30, l: 31 }; // eslint-disable-line sort-keys
var BitRegroupingError;
(function (BitRegroupingError) {
    BitRegroupingError["integerOutOfRange"] = "An integer provided in the source array is out of the range of the specified source word length.";
    BitRegroupingError["hasDisallowedPadding"] = "Encountered padding when padding was disallowed.";
    BitRegroupingError["requiresDisallowedPadding"] = "Encoding requires padding while padding is disallowed.";
})(BitRegroupingError || (BitRegroupingError = {}));
/* eslint-disable functional/no-let, no-bitwise, functional/no-expression-statement, functional/no-conditional-statement, complexity */
/**
 * Given an array of integers, regroup bits from `sourceWordLength` to
 * `resultWordLength`, returning a new array of integers between 0 and
 * toWordLength^2.
 *
 * Note, if `bin` is within the range of `sourceWordLength` and `padding` is
 * `true`, this method will never error.
 *
 * A.K.A. `convertbits`
 *
 * @param bin - an array of numbers representing the bits to regroup. Each item
 * must be a number within the range of `sourceWordLength`
 * @param sourceWordLength - the bit-length of each number in `bin`, e.g. to
 * regroup bits from a `Uint8Array`, use `8` (must be a positive integer)
 * @param resultWordLength - the bit-length of each number in the desired result
 * array, e.g. to regroup bits into 4-bit numbers, use `4` (must be a positive
 * integer)
 * @param allowPadding - whether to allow the use of padding for `bin` values
 * where the provided number of bits cannot be directly mapped to an equivalent
 * result array (remaining bits are filled with `0`), defaults to `true`
 * @privateRemarks
 * Derived from: https://github.com/sipa/bech32
 */
const regroupBits = ({ bin, sourceWordLength, resultWordLength, allowPadding = true, }) => {
    let accumulator = 0;
    let bits = 0;
    const result = [];
    const maxResultInt = (1 << resultWordLength) - 1;
    // eslint-disable-next-line functional/no-loop-statement, @typescript-eslint/prefer-for-of, no-plusplus
    for (let p = 0; p < bin.length; ++p) {
        const value = bin[p];
        if (value < 0 || value >> sourceWordLength !== 0) {
            return BitRegroupingError.integerOutOfRange;
        }
        accumulator = (accumulator << sourceWordLength) | value;
        bits += sourceWordLength;
        // eslint-disable-next-line functional/no-loop-statement
        while (bits >= resultWordLength) {
            bits -= resultWordLength;
            // eslint-disable-next-line functional/immutable-data
            result.push((accumulator >> bits) & maxResultInt);
        }
    }
    if (allowPadding) {
        if (bits > 0) {
            // eslint-disable-next-line functional/immutable-data
            result.push((accumulator << (resultWordLength - bits)) & maxResultInt);
        }
    }
    else if (bits >= sourceWordLength) {
        return BitRegroupingError.hasDisallowedPadding;
    }
    else if (((accumulator << (resultWordLength - bits)) & maxResultInt) > 0) {
        return BitRegroupingError.requiresDisallowedPadding;
    }
    return result;
};
/* eslint-enable functional/no-let, no-bitwise, functional/no-expression-statement, functional/no-conditional-statement, complexity */
/**
 * Encode an array of numbers as a base32 string using the Bech32 character set.
 *
 * Note, this method always completes. For a valid result, all items in
 * `base32IntegerArray` must be between `0` and `32`.
 *
 * @param base32IntegerArray - the array of 5-bit integers to encode
 */
const encodeBech32 = (base32IntegerArray) => {
    // eslint-disable-next-line functional/no-let
    let result = '';
    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < base32IntegerArray.length; i++) {
        // eslint-disable-next-line functional/no-expression-statement
        result += bech32CharacterSet[base32IntegerArray[i]];
    }
    return result;
};
/**
 * Decode a Bech32-encoded string into an array of 5-bit integers.
 *
 * Note, this method always completes. If `validBech32` is not valid bech32,
 * an incorrect result will be returned. If `validBech32` is potentially
 * malformed, check it with `isBech32` before calling this method.
 *
 * @param validBech32 - the bech32-encoded string to decode
 */
const decodeBech32 = (validBech32) => {
    const result = [];
    // eslint-disable-next-line @typescript-eslint/prefer-for-of, functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < validBech32.length; i++) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(bech32CharacterSetIndex[validBech32[i]]);
    }
    return result;
};
const nonBech32Characters = new RegExp(`[^${bech32CharacterSet}]`, 'u');
const base32WordLength = 5;
const base256WordLength = 8;
/**
 * Validate that a string uses only characters from the bech32 character set.
 *
 * @param maybeBech32 - a string to test for valid Bech32 encoding
 */
const isBech32CharacterSet = (maybeBech32) => !nonBech32Characters.test(maybeBech32);
var Bech32DecodingError;
(function (Bech32DecodingError) {
    Bech32DecodingError["notBech32CharacterSet"] = "Bech32 decoding error: input contains characters outside of the Bech32 character set.";
})(Bech32DecodingError || (Bech32DecodingError = {}));
/**
 * Convert a padded bech32-encoded string (without checksum) to a Uint8Array,
 * removing the padding. If the string is not valid Bech32, or if the array of
 * 5-bit integers would require padding to be regrouped into 8-bit bytes, this
 * method returns an error message.
 *
 * This method is the reverse of `binToBech32Padded`.
 *
 * @param bech32Padded - the padded bech32-encoded string to decode
 */
const bech32PaddedToBin = (bech32Padded) => {
    const result = isBech32CharacterSet(bech32Padded)
        ? regroupBits({
            allowPadding: false,
            bin: decodeBech32(bech32Padded),
            resultWordLength: base256WordLength,
            sourceWordLength: base32WordLength,
        })
        : Bech32DecodingError.notBech32CharacterSet;
    return typeof result === 'string' ? result : Uint8Array.from(result);
};
/**
 * Convert a Uint8Array to a padded bech32-encoded string (without a checksum),
 * adding padding bits as necessary to convert all bytes to 5-bit integers.
 *
 * This method is the reverse of `bech32PaddedToBin`.
 *
 * @param bytes - the Uint8Array to bech32 encode
 */
const binToBech32Padded = (bytes) => encodeBech32(regroupBits({
    bin: bytes,
    resultWordLength: base32WordLength,
    sourceWordLength: base256WordLength,
}));
//# sourceMappingURL=bech32.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export CashAddressCorrectionError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressEncodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressNetworkPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CashAddressVersionByteDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export attemptCashAddressFormatErrorCorrection [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressBitToSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressChecksumToUint5Array [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressPolynomialModulo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressPolynomialToCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressSizeToBit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddressFormatWithoutPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maskCashAddressPrefix [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CashAddressNetworkPrefix": () => /* binding */ CashAddressNetworkPrefix,
/* harmony export */   "cashAddressBitToSize": () => /* binding */ cashAddressBitToSize,
/* harmony export */   "cashAddressSizeToBit": () => /* binding */ cashAddressSizeToBit,
/* harmony export */   "CashAddressVersionByte": () => /* binding */ CashAddressVersionByte,
/* harmony export */   "CashAddressType": () => /* binding */ CashAddressType,
/* harmony export */   "encodeCashAddressVersionByte": () => /* binding */ encodeCashAddressVersionByte,
/* harmony export */   "CashAddressVersionByteDecodingError": () => /* binding */ CashAddressVersionByteDecodingError,
/* harmony export */   "decodeCashAddressVersionByte": () => /* binding */ decodeCashAddressVersionByte,
/* harmony export */   "maskCashAddressPrefix": () => /* binding */ maskCashAddressPrefix,
/* harmony export */   "cashAddressPolynomialModulo": () => /* binding */ cashAddressPolynomialModulo,
/* harmony export */   "cashAddressChecksumToUint5Array": () => /* binding */ cashAddressChecksumToUint5Array,
/* harmony export */   "encodeCashAddressFormat": () => /* binding */ encodeCashAddressFormat,
/* harmony export */   "CashAddressEncodingError": () => /* binding */ CashAddressEncodingError,
/* harmony export */   "encodeCashAddress": () => /* binding */ encodeCashAddress,
/* harmony export */   "CashAddressDecodingError": () => /* binding */ CashAddressDecodingError,
/* harmony export */   "decodeCashAddressFormat": () => /* binding */ decodeCashAddressFormat,
/* harmony export */   "decodeCashAddress": () => /* binding */ decodeCashAddress,
/* harmony export */   "decodeCashAddressFormatWithoutPrefix": () => /* binding */ decodeCashAddressFormatWithoutPrefix,
/* harmony export */   "cashAddressPolynomialToCashAddress": () => /* binding */ cashAddressPolynomialToCashAddress,
/* harmony export */   "CashAddressCorrectionError": () => /* binding */ CashAddressCorrectionError,
/* harmony export */   "attemptCashAddressFormatErrorCorrection": () => /* binding */ attemptCashAddressFormatErrorCorrection
/* harmony export */ });
/* harmony import */ var _bech32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bech32 */ "./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js");

var CashAddressNetworkPrefix;
(function (CashAddressNetworkPrefix) {
    CashAddressNetworkPrefix["mainnet"] = "bitcoincash";
    CashAddressNetworkPrefix["testnet"] = "bchtest";
    CashAddressNetworkPrefix["regtest"] = "bchreg";
})(CashAddressNetworkPrefix || (CashAddressNetworkPrefix = {}));
const cashAddressBitToSize = {
    0: 160,
    1: 192,
    2: 224,
    3: 256,
    4: 320,
    5: 384,
    6: 448,
    7: 512,
};
const cashAddressSizeToBit = {
    160: 0,
    192: 1,
    224: 2,
    256: 3,
    320: 4,
    384: 5,
    448: 6,
    512: 7,
};
/**
 * The CashAddress specification standardizes the format of the version byte:
 * - Most significant bit: reserved, must be `0`
 * - next 4 bits: Address Type
 * - 3 least significant bits: Hash Size
 *
 * Only two Address Type values are currently standardized:
 * - 0 (`0b0000`): P2PKH
 * - 1 (`0b0001`): P2SH
 *
 * While both P2PKH and P2SH addresses always use 160 bit hashes, the
 * CashAddress specification standardizes other sizes for future use (or use by
 * other systems), see `CashAddressSizeBit`.
 *
 * With these constraints, only two version byte values are currently standard.
 */
var CashAddressVersionByte;
(function (CashAddressVersionByte) {
    /**
     * Pay to Public Key Hash (P2PKH): `0b00000000`
     *
     * - Most significant bit: `0` (reserved)
     * - Address Type bits: `0000` (P2PKH)
     * - Size bits: `000` (160 bits)
     */
    CashAddressVersionByte[CashAddressVersionByte["P2PKH"] = 0] = "P2PKH";
    /**
     * Pay to Script Hash (P2SH): `0b00001000`
     *
     * - Most significant bit: `0` (reserved)
     * - Address Type bits: `0001` (P2SH)
     * - Size bits: `000` (160 bits)
     */
    CashAddressVersionByte[CashAddressVersionByte["P2SH"] = 8] = "P2SH";
})(CashAddressVersionByte || (CashAddressVersionByte = {}));
/**
 * The address types currently defined in the CashAddress specification. See
 * also: `CashAddressVersionByte`.
 */
var CashAddressType;
(function (CashAddressType) {
    /**
     * Pay to Public Key Hash (P2PKH)
     */
    CashAddressType[CashAddressType["P2PKH"] = 0] = "P2PKH";
    /**
     * Pay to Script Hash (P2SH)
     */
    CashAddressType[CashAddressType["P2SH"] = 1] = "P2SH";
})(CashAddressType || (CashAddressType = {}));
const cashAddressTypeBitShift = 3;
/**
 * Encode a CashAddress version byte for the given address type and hash length.
 * See `CashAddressVersionByte` for more information.
 *
 * The `type` parameter must be a number between `0` and `15`, and `bitLength`
 * must be one of the standardized lengths. To use the contents of a variable,
 * cast it to `CashAddressType` or `CashAddressSize` respectively, e.g.:
 * ```ts
 * const type = 3 as CashAddressType;
 * const size = 160 as CashAddressSize;
 * getCashAddressVersionByte(type, size);
 * ```
 * @param type - the address type of the hash being encoded
 * @param bitLength - the bit length of the hash being encoded
 */
const encodeCashAddressVersionByte = (type, bitLength
// eslint-disable-next-line no-bitwise
) => (type << cashAddressTypeBitShift) | cashAddressSizeToBit[bitLength];
const cashAddressReservedBitMask = 0b10000000;
const cashAddressTypeBits = 0b1111;
const cashAddressSizeBits = 0b111;
const empty = 0;
var CashAddressVersionByteDecodingError;
(function (CashAddressVersionByteDecodingError) {
    CashAddressVersionByteDecodingError["reservedBitSet"] = "Reserved bit is set.";
})(CashAddressVersionByteDecodingError || (CashAddressVersionByteDecodingError = {}));
/**
 * Decode a CashAddress version byte.
 * @param version - the version byte to decode
 */
const decodeCashAddressVersionByte = (version) => 
// eslint-disable-next-line no-negated-condition, no-bitwise
(version & cashAddressReservedBitMask) !== empty
    ? CashAddressVersionByteDecodingError.reservedBitSet
    : {
        bitLength: cashAddressBitToSize[
        // eslint-disable-next-line no-bitwise
        (version & cashAddressSizeBits)],
        // eslint-disable-next-line no-bitwise
        type: (version >>> cashAddressTypeBitShift) & cashAddressTypeBits,
    };
/**
 * In ASCII, each pair of upper and lower case characters share the same 5 least
 * significant bits.
 */
const asciiCaseInsensitiveBits = 0b11111;
/**
 * Convert a string into an array of 5-bit numbers, representing the
 * characters in a case-insensitive way.
 * @param prefix - the prefix to mask
 */
const maskCashAddressPrefix = (prefix) => {
    const result = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < prefix.length; i++) {
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
        result.push(prefix.charCodeAt(i) & asciiCaseInsensitiveBits);
    }
    return result;
};
// prettier-ignore
const bech32GeneratorMostSignificantByte = [0x98, 0x79, 0xf3, 0xae, 0x1e]; // eslint-disable-line @typescript-eslint/no-magic-numbers
// prettier-ignore
const bech32GeneratorRemainingBytes = [0xf2bc8e61, 0xb76d99e2, 0x3e5fb3c4, 0x2eabe2a8, 0x4f43e470]; // eslint-disable-line @typescript-eslint/no-magic-numbers
/**
 * Perform the CashAddress polynomial modulo operation, which is based on the
 * Bech32 polynomial modulo operation, but the returned checksum is 40 bits,
 * rather than 30.
 *
 * A.K.A. `PolyMod`
 *
 * @remarks
 * Notes from Bitcoin ABC:
 * This function will compute what 8 5-bit values to XOR into the last 8 input
 * values, in order to make the checksum 0. These 8 values are packed together
 * in a single 40-bit integer. The higher bits correspond to earlier values.
 *
 * The input is interpreted as a list of coefficients of a polynomial over F
 * = GF(32), with an implicit 1 in front. If the input is [v0,v1,v2,v3,v4],
 * that polynomial is v(x) = 1*x^5 + v0*x^4 + v1*x^3 + v2*x^2 + v3*x + v4.
 * The implicit 1 guarantees that [v0,v1,v2,...] has a distinct checksum
 * from [0,v0,v1,v2,...].
 *
 * The output is a 40-bit integer whose 5-bit groups are the coefficients of
 * the remainder of v(x) mod g(x), where g(x) is the cashaddr generator, x^8
 * + [19]*x^7 + [3]*x^6 + [25]*x^5 + [11]*x^4 + [25]*x^3 + [3]*x^2 + [19]*x
 * + [1]. g(x) is chosen in such a way that the resulting code is a BCH
 * code, guaranteeing detection of up to 4 errors within a window of 1025
 * characters. Among the various possible BCH codes, one was selected to in
 * fact guarantee detection of up to 5 errors within a window of 160
 * characters and 6 errors within a window of 126 characters. In addition,
 * the code guarantee the detection of a burst of up to 8 errors.
 *
 * Note that the coefficients are elements of GF(32), here represented as
 * decimal numbers between []. In this finite field, addition is just XOR of
 * the corresponding numbers. For example, [27] + [13] = [27 ^ 13] = [22].
 * Multiplication is more complicated, and requires treating the bits of
 * values themselves as coefficients of a polynomial over a smaller field,
 * GF(2), and multiplying those polynomials mod a^5 + a^3 + 1. For example,
 * [5] * [26] = (a^2 + 1) * (a^4 + a^3 + a) = (a^4 + a^3 + a) * a^2 + (a^4 +
 * a^3 + a) = a^6 + a^5 + a^4 + a = a^3 + 1 (mod a^5 + a^3 + 1) = [9].
 *
 * During the course of the loop below, `c` contains the bit-packed
 * coefficients of the polynomial constructed from just the values of v that
 * were processed so far, mod g(x). In the above example, `c` initially
 * corresponds to 1 mod (x), and after processing 2 inputs of v, it
 * corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the
 * starting value for `c`.
 *
 * @privateRemarks
 * Derived from the `bitcore-lib-cash` implementation, which does not require
 * BigInt: https://github.com/bitpay/bitcore
 *
 * @param v - Array of 5-bit integers over which the checksum is to be computed
 */
const cashAddressPolynomialModulo = (v) => {
    /* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers */
    let mostSignificantByte = 0;
    let lowerBytes = 1;
    let c = 0;
    // eslint-disable-next-line @typescript-eslint/prefer-for-of, no-plusplus
    for (let j = 0; j < v.length; j++) {
        c = mostSignificantByte >>> 3;
        mostSignificantByte &= 0x07;
        mostSignificantByte <<= 5;
        mostSignificantByte |= lowerBytes >>> 27;
        lowerBytes &= 0x07ffffff;
        lowerBytes <<= 5;
        lowerBytes ^= v[j];
        // eslint-disable-next-line no-plusplus
        for (let i = 0; i < bech32GeneratorMostSignificantByte.length; ++i) {
            // eslint-disable-next-line functional/no-conditional-statement
            if (c & (1 << i)) {
                mostSignificantByte ^= bech32GeneratorMostSignificantByte[i];
                lowerBytes ^= bech32GeneratorRemainingBytes[i];
            }
        }
    }
    lowerBytes ^= 1;
    // eslint-disable-next-line functional/no-conditional-statement
    if (lowerBytes < 0) {
        lowerBytes ^= 1 << 31;
        lowerBytes += (1 << 30) * 2;
    }
    return mostSignificantByte * (1 << 30) * 4 + lowerBytes;
    /* eslint-enable functional/no-let, functional/no-loop-statement, functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers */
};
const base32WordLength = 5;
const base256WordLength = 8;
/**
 * Convert the checksum returned by `cashAddressPolynomialModulo` to an array of
 * 5-bit positive integers which can be Base32 encoded.
 * @param checksum - a 40 bit checksum returned by `cashAddressPolynomialModulo`
 */
const cashAddressChecksumToUint5Array = (checksum) => {
    const result = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < base256WordLength; ++i) {
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, @typescript-eslint/no-magic-numbers, functional/immutable-data
        result.push(checksum & 31);
        // eslint-disable-next-line functional/no-expression-statement, @typescript-eslint/no-magic-numbers, no-param-reassign
        checksum /= 32;
    }
    // eslint-disable-next-line functional/immutable-data
    return result.reverse();
};
const payloadSeparator = 0;
/**
 * Encode a hash as a CashAddress-like string using the CashAddress format.
 *
 * To encode a standard CashAddress, use `encodeCashAddress`.
 *
 * @param prefix - a valid prefix indicating the network for which to encode the
 * address – must be only lowercase letters
 * @param version - a single byte indicating the version of this address
 * @param hash - the hash to encode
 */
const encodeCashAddressFormat = (prefix, version, hash) => {
    const checksum40BitPlaceholder = [0, 0, 0, 0, 0, 0, 0, 0];
    const payloadContents = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.regroupBits)({
        bin: Uint8Array.from([version, ...hash]),
        resultWordLength: base32WordLength,
        sourceWordLength: base256WordLength,
    });
    const checksumContents = [
        ...maskCashAddressPrefix(prefix),
        payloadSeparator,
        ...payloadContents,
        ...checksum40BitPlaceholder,
    ];
    const checksum = cashAddressPolynomialModulo(checksumContents);
    const payload = [
        ...payloadContents,
        ...cashAddressChecksumToUint5Array(checksum),
    ];
    return `${prefix}:${(0,_bech32__WEBPACK_IMPORTED_MODULE_0__.encodeBech32)(payload)}`;
};
var CashAddressEncodingError;
(function (CashAddressEncodingError) {
    CashAddressEncodingError["unsupportedHashLength"] = "CashAddress encoding error: a hash of this length can not be encoded as a valid CashAddress.";
})(CashAddressEncodingError || (CashAddressEncodingError = {}));
const isValidBitLength = (bitLength) => cashAddressSizeToBit[bitLength] !== undefined;
/**
 * Encode a hash as a CashAddress.
 *
 * Note, this method does not enforce error handling via the type system. The
 * returned string may be a `CashAddressEncodingError.unsupportedHashLength`
 * if `hash` is not a valid length. Check the result if the input is potentially
 * malformed.
 *
 * For other address standards which closely follow the CashAddress
 * specification (but have alternative version byte requirements), use
 * `encodeCashAddressFormat`.
 *
 * @param prefix - a valid prefix indicating the network for which to encode the
 * address (usually a `CashAddressNetworkPrefix`) – must be only lowercase
 * letters
 * @param type - the `CashAddressType` to encode in the version byte – usually a
 * `CashAddressType`
 * @param hash - the hash to encode (for P2PKH, the public key hash; for P2SH,
 * the redeeming bytecode hash)
 */
const encodeCashAddress = (prefix, type, hash) => {
    const bitLength = hash.length * base256WordLength;
    if (!isValidBitLength(bitLength)) {
        return CashAddressEncodingError.unsupportedHashLength;
    }
    return encodeCashAddressFormat(prefix, encodeCashAddressVersionByte(type, bitLength), hash);
};
var CashAddressDecodingError;
(function (CashAddressDecodingError) {
    CashAddressDecodingError["improperPadding"] = "CashAddress decoding error: the payload is improperly padded.";
    CashAddressDecodingError["invalidCharacters"] = "CashAddress decoding error: the payload contains non-bech32 characters.";
    CashAddressDecodingError["invalidChecksum"] = "CashAddress decoding error: please review the address for errors.";
    CashAddressDecodingError["invalidFormat"] = "CashAddress decoding error: CashAddresses should be of the form \"prefix:payload\".";
    CashAddressDecodingError["mismatchedHashLength"] = "CashAddress decoding error: mismatched hash length for specified address version.";
    CashAddressDecodingError["reservedByte"] = "CashAddress decoding error: unknown CashAddress version, reserved byte set.";
})(CashAddressDecodingError || (CashAddressDecodingError = {}));
/**
 * Decode and validate a string using the CashAddress format. This is more
 * lenient than `decodeCashAddress`, which also validates the contents of the
 * version byte.
 *
 * Note, this method requires `address` to include a network prefix. To
 * decode a string with an unknown prefix, try
 * `decodeCashAddressFormatWithoutPrefix`.
 *
 * @param address - the CashAddress-like string to decode
 */
// eslint-disable-next-line complexity
const decodeCashAddressFormat = (address) => {
    const parts = address.toLowerCase().split(':');
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {
        return CashAddressDecodingError.invalidFormat;
    }
    const [prefix, payload] = parts;
    if (!(0,_bech32__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet)(payload)) {
        return CashAddressDecodingError.invalidCharacters;
    }
    const decodedPayload = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.decodeBech32)(payload);
    const polynomial = [
        ...maskCashAddressPrefix(prefix),
        payloadSeparator,
        ...decodedPayload,
    ];
    if (cashAddressPolynomialModulo(polynomial) !== 0) {
        return CashAddressDecodingError.invalidChecksum;
    }
    const checksum40BitPlaceholderLength = 8;
    const payloadContents = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.regroupBits)({
        allowPadding: false,
        bin: decodedPayload.slice(0, -checksum40BitPlaceholderLength),
        resultWordLength: base256WordLength,
        sourceWordLength: base32WordLength,
    });
    if (typeof payloadContents === 'string') {
        return CashAddressDecodingError.improperPadding;
    }
    const [version, ...hashContents] = payloadContents;
    const hash = Uint8Array.from(hashContents);
    return { hash, prefix, version };
};
/**
 * Decode and validate a CashAddress, strictly checking the version byte
 * according to the CashAddress specification. This is important for error
 * detection in CashAddresses.
 *
 * For other address-like standards which closely follow the CashAddress
 * specification (but have alternative version byte requirements), use
 * `decodeCashAddressFormat`.
 *
 * Note, this method requires that CashAddresses include a network prefix. To
 * decode an address with an unknown prefix, try
 * `decodeCashAddressFormatWithoutPrefix`.
 *
 * @param address - the CashAddress to decode
 */
const decodeCashAddress = (address) => {
    const decoded = decodeCashAddressFormat(address);
    if (typeof decoded === 'string') {
        return decoded;
    }
    const info = decodeCashAddressVersionByte(decoded.version);
    if (info === CashAddressVersionByteDecodingError.reservedBitSet) {
        return CashAddressDecodingError.reservedByte;
    }
    if (decoded.hash.length * base256WordLength !== info.bitLength) {
        return CashAddressDecodingError.mismatchedHashLength;
    }
    return {
        hash: decoded.hash,
        prefix: decoded.prefix,
        type: info.type,
    };
};
/**
 * Attempt to decode and validate a CashAddress against a list of possible
 * prefixes. If the correct prefix is known, use `decodeCashAddress`.
 *
 * @param address - the CashAddress to decode
 * @param possiblePrefixes - the network prefixes to try
 */
// decodeCashAddressWithoutPrefix
const decodeCashAddressFormatWithoutPrefix = (address, possiblePrefixes = [
    CashAddressNetworkPrefix.mainnet,
    CashAddressNetworkPrefix.testnet,
    CashAddressNetworkPrefix.regtest,
]) => {
    // eslint-disable-next-line functional/no-loop-statement
    for (const prefix of possiblePrefixes) {
        const attempt = decodeCashAddressFormat(`${prefix}:${address}`);
        if (attempt !== CashAddressDecodingError.invalidChecksum) {
            return attempt;
        }
    }
    return CashAddressDecodingError.invalidChecksum;
};
const asciiLowerCaseStart = 96;
/**
 * Convert a CashAddress polynomial to CashAddress string format.
 *
 * @remarks
 * CashAddress polynomials take the form:
 *
 * `[lowest 5 bits of each prefix character] 0 [payload + checksum]`
 *
 * This method remaps the 5-bit integers in the prefix location to the matching
 * ASCII lowercase characters, replaces the separator with `:`, and then Bech32
 * encodes the remaining payload and checksum.
 *
 * @param polynomial - an array of 5-bit integers representing the terms of a
 * CashAddress polynomial
 */
const cashAddressPolynomialToCashAddress = (polynomial) => {
    const separatorPosition = polynomial.indexOf(0);
    const prefix = polynomial
        .slice(0, separatorPosition)
        .map((integer) => String.fromCharCode(asciiLowerCaseStart + integer))
        .join('');
    const contents = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.encodeBech32)(polynomial.slice(separatorPosition + 1));
    return `${prefix}:${contents}`;
};
var CashAddressCorrectionError;
(function (CashAddressCorrectionError) {
    CashAddressCorrectionError["tooManyErrors"] = "This address has more than 2 errors and cannot be corrected.";
})(CashAddressCorrectionError || (CashAddressCorrectionError = {}));
const finiteFieldOrder = 32;
/**
 * Attempt to correct up to 2 errors in a CashAddress. The CashAddress must be
 * properly formed (include a prefix and only contain Bech32 characters).
 *
 * ## **Improper use of this method carries the risk of lost funds.**
 *
 * It is strongly advised that this method only be used under explicit user
 * control. With enough errors, this method is likely to find a plausible
 * correction for any address (but for which no private key exists). This is
 * effectively equivalent to burning the funds.
 *
 * Only 2 substitution errors can be corrected (or a single swap) – deletions
 * and insertions (errors which shift many other characters and change the
 * length of the payload) can never be safely corrected and will produce an
 * error.
 *
 * Errors can be corrected in both the prefix and the payload, but attempting to
 * correct errors in the prefix prior to this method can improve results, e.g.
 * for `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfde0x`, the string
 * `bchtest:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can be corrected, while
 * `typo:qq2azmyyv6dtgczexyalqar70q036yund53jvfdecc` can not.
 *
 * @privateRemarks
 * Derived from: https://github.com/deadalnix/cashaddressed
 *
 * @param address - the CashAddress on which to attempt error correction
 */
// eslint-disable-next-line complexity
const attemptCashAddressFormatErrorCorrection = (address) => {
    const parts = address.toLowerCase().split(':');
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    if (parts.length !== 2 || parts[0] === '' || parts[1] === '') {
        return CashAddressDecodingError.invalidFormat;
    }
    const [prefix, payload] = parts;
    if (!(0,_bech32__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet)(payload)) {
        return CashAddressDecodingError.invalidCharacters;
    }
    const decodedPayload = (0,_bech32__WEBPACK_IMPORTED_MODULE_0__.decodeBech32)(payload);
    const polynomial = [...maskCashAddressPrefix(prefix), 0, ...decodedPayload];
    const originalChecksum = cashAddressPolynomialModulo(polynomial);
    if (originalChecksum === 0) {
        return {
            address: cashAddressPolynomialToCashAddress(polynomial),
            corrections: [],
        };
    }
    const syndromes = {};
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let term = 0; term < polynomial.length; term++) {
        // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
        for (let errorVector = 1; errorVector < finiteFieldOrder; errorVector++) {
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[term] ^= errorVector;
            const correct = cashAddressPolynomialModulo(polynomial);
            if (correct === 0) {
                return {
                    address: cashAddressPolynomialToCashAddress(polynomial),
                    corrections: [term],
                };
            }
            // eslint-disable-next-line no-bitwise
            const s0 = (BigInt(correct) ^ BigInt(originalChecksum)).toString();
            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
            syndromes[s0] = term * finiteFieldOrder + errorVector;
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[term] ^= errorVector;
        }
    }
    // eslint-disable-next-line functional/no-loop-statement
    for (const [s0, pe] of Object.entries(syndromes)) {
        // eslint-disable-next-line no-bitwise
        const s1Location = (BigInt(s0) ^ BigInt(originalChecksum)).toString();
        const s1 = syndromes[s1Location];
        if (s1 !== undefined) {
            const correctionIndex1 = Math.trunc(pe / finiteFieldOrder);
            const correctionIndex2 = Math.trunc(s1 / finiteFieldOrder);
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[correctionIndex1] ^= pe % finiteFieldOrder;
            // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
            polynomial[correctionIndex2] ^= s1 % finiteFieldOrder;
            return {
                address: cashAddressPolynomialToCashAddress(polynomial),
                corrections: [correctionIndex1, correctionIndex2].sort((a, b) => a - b),
            };
        }
    }
    return CashAddressCorrectionError.tooManyErrors;
};
//# sourceMappingURL=cash-address.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export AddressType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LockingBytecodeEncodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addressContentsToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base58AddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cashAddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockingBytecodeToAddressContents [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockingBytecodeToBase58Address [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lockingBytecodeToCashAddress [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressType": () => /* binding */ AddressType,
/* harmony export */   "lockingBytecodeToAddressContents": () => /* binding */ lockingBytecodeToAddressContents,
/* harmony export */   "addressContentsToLockingBytecode": () => /* binding */ addressContentsToLockingBytecode,
/* harmony export */   "lockingBytecodeToCashAddress": () => /* binding */ lockingBytecodeToCashAddress,
/* harmony export */   "LockingBytecodeEncodingError": () => /* binding */ LockingBytecodeEncodingError,
/* harmony export */   "cashAddressToLockingBytecode": () => /* binding */ cashAddressToLockingBytecode,
/* harmony export */   "lockingBytecodeToBase58Address": () => /* binding */ lockingBytecodeToBase58Address,
/* harmony export */   "base58AddressToLockingBytecode": () => /* binding */ base58AddressToLockingBytecode
/* harmony export */ });
/* harmony import */ var _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vm/instruction-sets/common/opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _base58_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base58-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js");
/* harmony import */ var _cash_address__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cash-address */ "./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js");



/**
 * The most common address types used on bitcoin and bitcoin-like networks. Each
 * address type represents a commonly used locking bytecode pattern.
 *
 * @remarks
 * Addresses are strings which encode information about the network and
 * `lockingBytecode` to which a transaction output can pay.
 *
 * Several address formats exist – `Base58Address` was the format used by the
 * original satoshi client, and is still in use on several active chains (see
 * `encodeBase58Address`). On Bitcoin Cash, the `CashAddress` standard is most
 * common (See `encodeCashAddress`).
 */
var AddressType;
(function (AddressType) {
    /**
     * Pay to Public Key (P2PK). This address type is uncommon, and primarily
     * occurs in early blocks because the original satoshi implementation mined
     * rewards to P2PK addresses.
     *
     * There are no standardized address formats for representing a P2PK address.
     * Instead, most applications use the `AddressType.p2pkh` format.
     */
    AddressType["p2pk"] = "P2PK";
    /**
     * Pay to Public Key Hash (P2PKH). The most common address type. P2PKH
     * addresses lock funds using a single private key.
     */
    AddressType["p2pkh"] = "P2PKH";
    /**
     * Pay to Script Hash (P2SH). An address type which locks funds to the hash of
     * a script provided in the spending transaction. See BIP13 for details.
     */
    AddressType["p2sh"] = "P2SH";
    /**
     * This `AddressType` represents an address using an unknown or uncommon
     * locking bytecode pattern for which no standardized address formats exist.
     */
    AddressType["unknown"] = "unknown";
})(AddressType || (AddressType = {}));
/**
 * Attempt to match a lockingBytecode to a standard address type for use in
 * address encoding. (See `AddressType` for details.)
 *
 * For a locking bytecode matching the Pay to Public Key Hash (P2PKH) pattern,
 * the returned `type` is `AddressType.p2pkh` and `payload` is the `HASH160` of
 * the public key.
 *
 * For a locking bytecode matching the Pay to Script Hash (P2SH) pattern, the
 * returned `type` is `AddressType.p2sh` and `payload` is the `HASH160` of the
 * redeeming bytecode, A.K.A. "redeem script hash".
 *
 * For a locking bytecode matching the Pay to Public Key (P2PK) pattern, the
 * returned `type` is `AddressType.p2pk` and `payload` is the full public key.
 *
 * Any other locking bytecode will return a `type` of `AddressType.unknown` and
 * a payload of the unmodified `bytecode`.
 *
 * @param bytecode - the locking bytecode to match
 */
// eslint-disable-next-line complexity
const lockingBytecodeToAddressContents = (bytecode) => {
    const p2pkhLength = 25;
    if (bytecode.length === p2pkhLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_DUP &&
        bytecode[1] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160 &&
        bytecode[2] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20 &&
        bytecode[23] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUALVERIFY &&
        bytecode[24] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG) {
        const start = 3;
        const end = 23;
        return { payload: bytecode.slice(start, end), type: AddressType.p2pkh };
    }
    const p2shLength = 23;
    if (bytecode.length === p2shLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160 &&
        bytecode[1] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20 &&
        bytecode[22] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUAL) {
        const start = 2;
        const end = 22;
        return { payload: bytecode.slice(start, end), type: AddressType.p2sh };
    }
    const p2pkUncompressedLength = 67;
    if (bytecode.length === p2pkUncompressedLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_65 &&
        bytecode[66] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG) {
        const start = 1;
        const end = 66;
        return { payload: bytecode.slice(start, end), type: AddressType.p2pk };
    }
    const p2pkCompressedLength = 35;
    if (bytecode.length === p2pkCompressedLength &&
        bytecode[0] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_33 &&
        bytecode[34] === _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG) {
        const start = 1;
        const end = 34;
        return { payload: bytecode.slice(start, end), type: AddressType.p2pk };
    }
    return {
        payload: bytecode.slice(),
        type: AddressType.unknown,
    };
};
/**
 * Get the locking bytecode for a valid `AddressContents` object. See
 * `lockingBytecodeToAddressContents` for details.
 *
 * For `AddressContents` of `type` `AddressType.unknown`, this method returns
 * the `payload` without modification.
 *
 * @param addressContents - the `AddressContents` to encode
 */
const addressContentsToLockingBytecode = (addressContents) => {
    if (addressContents.type === AddressType.p2pkh) {
        return Uint8Array.from([
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_DUP,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20,
            ...addressContents.payload,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUALVERIFY,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG,
        ]);
    }
    if (addressContents.type === AddressType.p2sh) {
        return Uint8Array.from([
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_HASH160,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_20,
            ...addressContents.payload,
            _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_EQUAL,
        ]);
    }
    if (addressContents.type === AddressType.p2pk) {
        const compressedPublicKeyLength = 33;
        return addressContents.payload.length === compressedPublicKeyLength
            ? Uint8Array.from([
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_33,
                ...addressContents.payload,
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG,
            ])
            : Uint8Array.from([
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_PUSHBYTES_65,
                ...addressContents.payload,
                _vm_instruction_sets_common_opcodes__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon.OP_CHECKSIG,
            ]);
    }
    return addressContents.payload;
};
/**
 * Encode a locking bytecode as a CashAddress given a network prefix.
 *
 * If `bytecode` matches either the P2PKH or P2SH pattern, it is encoded using
 * the proper address type and returned as a valid CashAddress (string).
 *
 * If `bytecode` cannot be encoded as an address (i.e. because the pattern is
 * not standard), the resulting `AddressContents` is returned.
 *
 * @param bytecode - the locking bytecode to encode
 * @param prefix - the network prefix to use, e.g. `bitcoincash`, `bchtest`, or
 * `bchreg`
 */
const lockingBytecodeToCashAddress = (bytecode, prefix) => {
    const contents = lockingBytecodeToAddressContents(bytecode);
    if (contents.type === AddressType.p2pkh) {
        return (0,_cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(prefix, _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2PKH, contents.payload);
    }
    if (contents.type === AddressType.p2sh) {
        return (0,_cash_address__WEBPACK_IMPORTED_MODULE_2__.encodeCashAddress)(prefix, _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2SH, contents.payload);
    }
    return contents;
};
var LockingBytecodeEncodingError;
(function (LockingBytecodeEncodingError) {
    LockingBytecodeEncodingError["unknownCashAddressType"] = "This CashAddress uses an unknown address type.";
})(LockingBytecodeEncodingError || (LockingBytecodeEncodingError = {}));
/**
 * Convert a CashAddress to its respective locking bytecode.
 *
 * This method returns the locking bytecode and network prefix. If an error
 * occurs, an error message is returned as a string.
 *
 * @param address - the CashAddress to convert
 */
const cashAddressToLockingBytecode = (address) => {
    const decoded = (0,_cash_address__WEBPACK_IMPORTED_MODULE_2__.decodeCashAddress)(address);
    if (typeof decoded === 'string')
        return decoded;
    if (decoded.type === _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2PKH) {
        return {
            bytecode: addressContentsToLockingBytecode({
                payload: decoded.hash,
                type: AddressType.p2pkh,
            }),
            prefix: decoded.prefix,
        };
    }
    if (decoded.type === _cash_address__WEBPACK_IMPORTED_MODULE_2__.CashAddressType.P2SH) {
        return {
            bytecode: addressContentsToLockingBytecode({
                payload: decoded.hash,
                type: AddressType.p2sh,
            }),
            prefix: decoded.prefix,
        };
    }
    return LockingBytecodeEncodingError.unknownCashAddressType;
};
/**
 * Encode a locking bytecode as a Base58Address for a given network.
 *
 * If `bytecode` matches either the P2PKH or P2SH pattern, it is encoded using
 * the proper address type and returned as a valid Base58Address (string).
 *
 * If `bytecode` cannot be encoded as an address (i.e. because the pattern is
 * not standard), the resulting `AddressContents` is returned.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param bytecode - the locking bytecode to encode
 * @param network - the network for which to encode the address (`mainnet` or
 * `testnet`)
 */
const lockingBytecodeToBase58Address = (sha256, bytecode, network) => {
    const contents = lockingBytecodeToAddressContents(bytecode);
    if (contents.type === AddressType.p2pkh) {
        return (0,_base58_address__WEBPACK_IMPORTED_MODULE_1__.encodeBase58AddressFormat)(sha256, {
            'copay-bch': _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhCopayBCH,
            mainnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkh,
            testnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhTestnet,
        }[network], contents.payload);
    }
    if (contents.type === AddressType.p2sh) {
        return (0,_base58_address__WEBPACK_IMPORTED_MODULE_1__.encodeBase58AddressFormat)(sha256, {
            'copay-bch': _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2shCopayBCH,
            mainnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2sh,
            testnet: _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2shTestnet,
        }[network], contents.payload);
    }
    return contents;
};
/**
 * Convert a Base58Address to its respective locking bytecode.
 *
 * This method returns the locking bytecode and network version. If an error
 * occurs, an error message is returned as a string.
 *
 * @param address - the CashAddress to convert
 */
const base58AddressToLockingBytecode = (sha256, address) => {
    const decoded = (0,_base58_address__WEBPACK_IMPORTED_MODULE_1__.decodeBase58Address)(sha256, address);
    if (typeof decoded === 'string')
        return decoded;
    return {
        bytecode: addressContentsToLockingBytecode({
            payload: decoded.payload,
            type: [
                _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkh,
                _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhCopayBCH,
                _base58_address__WEBPACK_IMPORTED_MODULE_1__.Base58AddressFormatVersion.p2pkhTestnet,
            ].includes(decoded.version)
                ? AddressType.p2pkh
                : AddressType.p2sh,
        }),
        version: decoded.version,
    };
};
//# sourceMappingURL=locking-bytecode.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export CompressionFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .CompressionFlag */
/*! export ContextFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .ContextFlag */
/*! export getEmbeddedSecp256k1Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js .getEmbeddedSecp256k1Binary */
/*! export instantiateRustWasm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js .instantiateRustWasm */
/*! export instantiateSecp256k1Wasm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js .instantiateSecp256k1Wasm */
/*! export instantiateSecp256k1WasmBytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js .instantiateSecp256k1WasmBytes */
/*! export ripemd160Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js .ripemd160Base64Bytes */
/*! export sha1Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js .sha1Base64Bytes */
/*! export sha256Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js .sha256Base64Bytes */
/*! export sha512Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js .sha512Base64Bytes */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateRustWasm": () => /* reexport safe */ _hashes__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm,
/* harmony export */   "ripemd160Base64Bytes": () => /* reexport safe */ _ripemd160_ripemd160_base64__WEBPACK_IMPORTED_MODULE_1__.ripemd160Base64Bytes,
/* harmony export */   "CompressionFlag": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.CompressionFlag,
/* harmony export */   "ContextFlag": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.ContextFlag,
/* harmony export */   "getEmbeddedSecp256k1Binary": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.getEmbeddedSecp256k1Binary,
/* harmony export */   "instantiateSecp256k1Wasm": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1Wasm,
/* harmony export */   "instantiateSecp256k1WasmBytes": () => /* reexport safe */ _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1WasmBytes,
/* harmony export */   "sha1Base64Bytes": () => /* reexport safe */ _sha1_sha1_base64__WEBPACK_IMPORTED_MODULE_3__.sha1Base64Bytes,
/* harmony export */   "sha256Base64Bytes": () => /* reexport safe */ _sha256_sha256_base64__WEBPACK_IMPORTED_MODULE_4__.sha256Base64Bytes,
/* harmony export */   "sha512Base64Bytes": () => /* reexport safe */ _sha512_sha512_base64__WEBPACK_IMPORTED_MODULE_5__.sha512Base64Bytes
/* harmony export */ });
/* harmony import */ var _hashes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hashes */ "./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js");
/* harmony import */ var _ripemd160_ripemd160_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ripemd160/ripemd160.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js");
/* harmony import */ var _secp256k1_secp256k1_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./secp256k1/secp256k1-wasm */ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js");
/* harmony import */ var _sha1_sha1_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sha1/sha1.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js");
/* harmony import */ var _sha256_sha256_base64__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sha256/sha256.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js");
/* harmony import */ var _sha512_sha512_base64__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sha512/sha512.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js");






//# sourceMappingURL=bin.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/hashes.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export instantiateRustWasm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateRustWasm": () => /* binding */ instantiateRustWasm
/* harmony export */ });
/* eslint-disable functional/no-conditional-statement, functional/no-let, functional/no-expression-statement, no-underscore-dangle, functional/no-try-statement, @typescript-eslint/no-magic-numbers, max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
/**
 * Note, most of this method is translated and boiled-down from the wasm-pack
 * workflow. Significant changes to wasm-bindgen or wasm-pack build will likely
 * require modifications to this method.
 */
const instantiateRustWasm = async (webassemblyBytes, expectedImportModuleName, hashExportName, initExportName, updateExportName, finalExportName) => {
    const wasm = (await WebAssembly.instantiate(webassemblyBytes, {
        [expectedImportModuleName]: {
            /**
             * This would only be called in cases where a `__wbindgen_malloc` failed.
             * Since `__wbindgen_malloc` isn't exposed to consumers, this error
             * can only be encountered if the code below is broken.
             */
            // eslint-disable-next-line camelcase, @typescript-eslint/naming-convention
            __wbindgen_throw: /* istanbul ignore next */ (ptr, len) => {
                // eslint-disable-next-line functional/no-throw-statement
                throw new Error(
                // eslint-disable-next-line @typescript-eslint/no-use-before-define
                Array.from(getUint8Memory().subarray(ptr, ptr + len))
                    .map((num) => String.fromCharCode(num))
                    .join(''));
            },
        },
    })).instance.exports; // eslint-disable-line @typescript-eslint/no-explicit-any
    let cachedUint8Memory; // eslint-disable-line @typescript-eslint/init-declarations
    let cachedUint32Memory; // eslint-disable-line @typescript-eslint/init-declarations
    let cachedGlobalArgumentPtr; // eslint-disable-line @typescript-eslint/init-declarations
    const globalArgumentPtr = () => {
        if (cachedGlobalArgumentPtr === undefined) {
            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();
        }
        return cachedGlobalArgumentPtr;
    };
    /**
     * Must be hoisted for `__wbindgen_throw`.
     */
    // eslint-disable-next-line func-style
    function getUint8Memory() {
        if (cachedUint8Memory === undefined ||
            cachedUint8Memory.buffer !== wasm.memory.buffer) {
            cachedUint8Memory = new Uint8Array(wasm.memory.buffer);
        }
        return cachedUint8Memory;
    }
    const getUint32Memory = () => {
        if (cachedUint32Memory === undefined ||
            cachedUint32Memory.buffer !== wasm.memory.buffer) {
            cachedUint32Memory = new Uint32Array(wasm.memory.buffer);
        }
        return cachedUint32Memory;
    };
    const passArray8ToWasm = (array) => {
        const ptr = wasm.__wbindgen_malloc(array.length);
        getUint8Memory().set(array, ptr);
        return [ptr, array.length];
    };
    const getArrayU8FromWasm = (ptr, len) => getUint8Memory().subarray(ptr, ptr + len);
    const hash = (input) => {
        const [ptr0, len0] = passArray8ToWasm(input);
        const retPtr = globalArgumentPtr();
        try {
            wasm[hashExportName](retPtr, ptr0, len0);
            const mem = getUint32Memory();
            const ptr = mem[retPtr / 4];
            const len = mem[retPtr / 4 + 1];
            const realRet = getArrayU8FromWasm(ptr, len).slice();
            wasm.__wbindgen_free(ptr, len);
            return realRet;
        }
        finally {
            wasm.__wbindgen_free(ptr0, len0);
        }
    };
    const init = () => {
        const retPtr = globalArgumentPtr();
        wasm[initExportName](retPtr);
        const mem = getUint32Memory();
        const ptr = mem[retPtr / 4];
        const len = mem[retPtr / 4 + 1];
        const realRet = getArrayU8FromWasm(ptr, len).slice();
        wasm.__wbindgen_free(ptr, len);
        return realRet;
    };
    const update = (rawState, input) => {
        const [ptr0, len0] = passArray8ToWasm(rawState);
        const [ptr1, len1] = passArray8ToWasm(input);
        const retPtr = globalArgumentPtr();
        try {
            wasm[updateExportName](retPtr, ptr0, len0, ptr1, len1);
            const mem = getUint32Memory();
            const ptr = mem[retPtr / 4];
            const len = mem[retPtr / 4 + 1];
            const realRet = getArrayU8FromWasm(ptr, len).slice();
            wasm.__wbindgen_free(ptr, len);
            return realRet;
        }
        finally {
            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));
            wasm.__wbindgen_free(ptr0, len0);
            wasm.__wbindgen_free(ptr1, len1);
        }
    };
    const final = (rawState) => {
        const [ptr0, len0] = passArray8ToWasm(rawState);
        const retPtr = globalArgumentPtr();
        try {
            wasm[finalExportName](retPtr, ptr0, len0);
            const mem = getUint32Memory();
            const ptr = mem[retPtr / 4];
            const len = mem[retPtr / 4 + 1];
            const realRet = getArrayU8FromWasm(ptr, len).slice();
            wasm.__wbindgen_free(ptr, len);
            return realRet;
        }
        finally {
            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));
            wasm.__wbindgen_free(ptr0, len0);
        }
    };
    return {
        final,
        hash,
        init,
        update,
    };
};
/* eslint-enable functional/no-conditional-statement, functional/no-let, functional/no-expression-statement, no-underscore-dangle, functional/no-try-statement, @typescript-eslint/no-magic-numbers, max-params, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
//# sourceMappingURL=hashes.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/ripemd160/ripemd160.base64.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export ripemd160Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ripemd160Base64Bytes": () => /* binding */ ripemd160Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const ripemd160Base64Bytes = '';
//# sourceMappingURL=ripemd160.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export CompressionFlag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ContextFlag [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextFlag": () => /* binding */ ContextFlag,
/* harmony export */   "CompressionFlag": () => /* binding */ CompressionFlag
/* harmony export */ });
// cSpell:ignore noncefp, ndata, outputlen
/**
 * bitflags used in secp256k1's public API (translated from secp256k1.h)
 */
/* eslint-disable no-bitwise, @typescript-eslint/no-magic-numbers */
/** All flags' lower 8 bits indicate what they're for. Do not use directly. */
// const SECP256K1_FLAGS_TYPE_MASK = (1 << 8) - 1;
const SECP256K1_FLAGS_TYPE_CONTEXT = 1 << 0;
const SECP256K1_FLAGS_TYPE_COMPRESSION = 1 << 1;
/** The higher bits contain the actual data. Do not use directly. */
const SECP256K1_FLAGS_BIT_CONTEXT_VERIFY = 1 << 8;
const SECP256K1_FLAGS_BIT_CONTEXT_SIGN = 1 << 9;
const SECP256K1_FLAGS_BIT_COMPRESSION = 1 << 8;
/** Flags to pass to secp256k1_context_create. */
const SECP256K1_CONTEXT_VERIFY = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY;
const SECP256K1_CONTEXT_SIGN = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN;
const SECP256K1_CONTEXT_NONE = SECP256K1_FLAGS_TYPE_CONTEXT;
/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */
const SECP256K1_EC_COMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION;
const SECP256K1_EC_UNCOMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION;
/**
 * Flag to pass to a Secp256k1.contextCreate method.
 *
 * The purpose of context structures is to cache large precomputed data tables
 * that are expensive to construct, and also to maintain the randomization data
 * for blinding.
 *
 * You can create a context with only VERIFY or only SIGN capabilities, or you
 * can use BOTH. (NONE can be used for conversion/serialization.)
 */
var ContextFlag;
(function (ContextFlag) {
    ContextFlag[ContextFlag["NONE"] = SECP256K1_CONTEXT_NONE] = "NONE";
    ContextFlag[ContextFlag["VERIFY"] = SECP256K1_CONTEXT_VERIFY] = "VERIFY";
    ContextFlag[ContextFlag["SIGN"] = SECP256K1_CONTEXT_SIGN] = "SIGN";
    ContextFlag[ContextFlag["BOTH"] = SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY] = "BOTH";
})(ContextFlag || (ContextFlag = {}));
/**
 * Flag to pass a Secp256k1 public key serialization method.
 *
 * You can indicate COMPRESSED (33 bytes, header byte 0x02 or 0x03) or
 * UNCOMPRESSED (65 bytes, header byte 0x04) format.
 */
var CompressionFlag;
(function (CompressionFlag) {
    CompressionFlag[CompressionFlag["COMPRESSED"] = SECP256K1_EC_COMPRESSED] = "COMPRESSED";
    CompressionFlag[CompressionFlag["UNCOMPRESSED"] = SECP256K1_EC_UNCOMPRESSED] = "UNCOMPRESSED";
})(CompressionFlag || (CompressionFlag = {}));
//# sourceMappingURL=secp256k1-wasm-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export CompressionFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .CompressionFlag */
/*! export ContextFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js .ContextFlag */
/*! export getEmbeddedSecp256k1Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSecp256k1Wasm [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSecp256k1WasmBytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextFlag": () => /* reexport safe */ _secp256k1_wasm_types__WEBPACK_IMPORTED_MODULE_1__.ContextFlag,
/* harmony export */   "CompressionFlag": () => /* reexport safe */ _secp256k1_wasm_types__WEBPACK_IMPORTED_MODULE_1__.CompressionFlag,
/* harmony export */   "instantiateSecp256k1WasmBytes": () => /* binding */ instantiateSecp256k1WasmBytes,
/* harmony export */   "getEmbeddedSecp256k1Binary": () => /* binding */ getEmbeddedSecp256k1Binary,
/* harmony export */   "instantiateSecp256k1Wasm": () => /* binding */ instantiateSecp256k1Wasm
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _secp256k1_wasm_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./secp256k1-wasm-types */ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js");
/* harmony import */ var _secp256k1_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./secp256k1.base64 */ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1.base64.js");
/* eslint-disable no-underscore-dangle, max-params, @typescript-eslint/naming-convention */
// cSpell:ignore memcpy, anyfunc




/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
const wrapSecp256k1Wasm = (instance, heapU8, heapU32) => ({
    contextCreate: (context) => instance.exports._secp256k1_context_create(context),
    contextRandomize: (contextPtr, seedPtr) => instance.exports._secp256k1_context_randomize(contextPtr, seedPtr),
    free: (pointer) => instance.exports._free(pointer),
    heapU32,
    heapU8,
    instance,
    malloc: (bytes) => instance.exports._malloc(bytes),
    mallocSizeT: (num) => {
        // eslint-disable-next-line @typescript-eslint/no-magic-numbers
        const pointer = instance.exports._malloc(4);
        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
        const pointerView32 = pointer >> 2;
        // eslint-disable-next-line functional/no-expression-statement
        heapU32.set([num], pointerView32);
        return pointer;
    },
    mallocUint8Array: (array) => {
        const pointer = instance.exports._malloc(array.length);
        // eslint-disable-next-line functional/no-expression-statement
        heapU8.set(array, pointer);
        return pointer;
    },
    privkeyTweakAdd: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_add(contextPtr, secretKeyPtr, tweakNum256Ptr),
    privkeyTweakMul: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_mul(contextPtr, secretKeyPtr, tweakNum256Ptr),
    pubkeyCreate: (contextPtr, publicKeyPtr, secretKeyPtr) => instance.exports._secp256k1_ec_pubkey_create(contextPtr, publicKeyPtr, secretKeyPtr),
    pubkeyParse: (contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength) => instance.exports._secp256k1_ec_pubkey_parse(contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength),
    pubkeySerialize: (contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression) => instance.exports._secp256k1_ec_pubkey_serialize(contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression),
    pubkeyTweakAdd: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_add(contextPtr, publicKeyPtr, tweakNum256Ptr),
    pubkeyTweakMul: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_mul(contextPtr, publicKeyPtr, tweakNum256Ptr),
    readHeapU8: (pointer, bytes) => new Uint8Array(heapU8.buffer, pointer, bytes),
    readSizeT: (pointer) => {
        // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
        const pointerView32 = pointer >> 2;
        return heapU32[pointerView32];
    },
    recover: (contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr) => instance.exports._secp256k1_ecdsa_recover(contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr),
    recoverableSignatureParse: (contextPtr, outputRSigPtr, inputSigPtr, rid) => instance.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(contextPtr, outputRSigPtr, inputSigPtr, rid),
    recoverableSignatureSerialize: (contextPtr, sigOutPtr, recIDOutPtr, rSigPtr) => instance.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(contextPtr, sigOutPtr, recIDOutPtr, rSigPtr),
    schnorrSign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_schnorr_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),
    schnorrVerify: (contextPtr, sigPtr, msg32Ptr, publicKeyPtr) => instance.exports._secp256k1_schnorr_verify(contextPtr, sigPtr, msg32Ptr, publicKeyPtr),
    seckeyVerify: (contextPtr, secretKeyPtr) => instance.exports._secp256k1_ec_seckey_verify(contextPtr, secretKeyPtr),
    sign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),
    signRecoverable: (contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign_recoverable(contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr),
    signatureMalleate: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_malleate(contextPtr, outputSigPtr, inputSigPtr),
    signatureNormalize: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_normalize(contextPtr, outputSigPtr, inputSigPtr),
    signatureParseCompact: (contextPtr, sigOutPtr, compactSigInPtr) => instance.exports._secp256k1_ecdsa_signature_parse_compact(contextPtr, sigOutPtr, compactSigInPtr),
    signatureParseDER: (contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength) => instance.exports._secp256k1_ecdsa_signature_parse_der(contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength),
    signatureSerializeCompact: (contextPtr, outputCompactSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_compact(contextPtr, outputCompactSigPtr, inputSigPtr),
    signatureSerializeDER: (contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_der(contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr),
    verify: (contextPtr, sigPtr, msg32Ptr, pubkeyPtr) => instance.exports._secp256k1_ecdsa_verify(contextPtr, sigPtr, msg32Ptr, pubkeyPtr),
});
/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */
/* eslint-disable functional/immutable-data, functional/no-expression-statement, @typescript-eslint/no-magic-numbers, functional/no-conditional-statement, no-bitwise, functional/no-throw-statement */
/**
 * Method extracted from Emscripten's preamble.js
 */
const isLittleEndian = (buffer) => {
    const littleEndian = true;
    const notLittleEndian = false;
    const heap16 = new Int16Array(buffer);
    const heap32 = new Int32Array(buffer);
    const heapU8 = new Uint8Array(buffer);
    heap32[0] = 1668509029;
    heap16[1] = 25459;
    return heapU8[2] !== 115 || heapU8[3] !== 99
        ? /* istanbul ignore next */ notLittleEndian
        : littleEndian;
};
/**
 * Method derived from Emscripten's preamble.js
 */
const alignMemory = (factor, size) => Math.ceil(size / factor) * factor;
/**
 * The most performant way to instantiate secp256k1 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSecp256k1`.
 *
 * Note, most of this method is translated and boiled-down from Emscripten's
 * preamble.js. Significant changes to the WASM build or breaking updates to
 * Emscripten will likely require modifications to this method.
 *
 * @param webassemblyBytes - A buffer containing the secp256k1 binary.
 */
const instantiateSecp256k1WasmBytes = async (webassemblyBytes) => {
    const STACK_ALIGN = 16;
    const GLOBAL_BASE = 1024;
    const WASM_PAGE_SIZE = 65536;
    const TOTAL_STACK = 5242880;
    const TOTAL_MEMORY = 16777216;
    const wasmMemory = new WebAssembly.Memory({
        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,
        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,
    });
    /* istanbul ignore if  */
    if (!isLittleEndian(wasmMemory.buffer)) {
        /*
         * note: this block is excluded from test coverage. It's A) hard to test
         * (must be either tested on big-endian hardware or a big-endian buffer
         * mock) and B) extracted from Emscripten's preamble.js, where it should
         * be tested properly.
         */
        throw new Error('Runtime error: expected the system to be little-endian.');
    }
    const STATIC_BASE = GLOBAL_BASE;
    const STATICTOP_INITIAL = STATIC_BASE + 67696 + 16;
    const DYNAMICTOP_PTR = STATICTOP_INITIAL;
    const DYNAMICTOP_PTR_SIZE = 4;
    const STATICTOP = (STATICTOP_INITIAL + DYNAMICTOP_PTR_SIZE + 15) & -16;
    const STACKTOP = alignMemory(STACK_ALIGN, STATICTOP);
    const STACK_BASE = STACKTOP;
    const STACK_MAX = STACK_BASE + TOTAL_STACK;
    const DYNAMIC_BASE = alignMemory(STACK_ALIGN, STACK_MAX);
    const heapU8 = new Uint8Array(wasmMemory.buffer);
    const heap32 = new Int32Array(wasmMemory.buffer);
    const heapU32 = new Uint32Array(wasmMemory.buffer);
    heap32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
    const TABLE_SIZE = 6;
    const MAX_TABLE_SIZE = 6;
    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations
    let getErrNoLocation;
    /*
     * note: A number of methods below are excluded from test coverage. They are
     * a) not part of the regular usage of this library (should only be evaluated
     * if the consumer mis-implements the library and exist only to make
     * debugging easier) and B) already tested adequately in Emscripten, from
     * which this section is extracted.
     */
    const env = {
        DYNAMICTOP_PTR,
        STACKTOP,
        ___setErrNo: /* istanbul ignore next */ (value) => {
            if (getErrNoLocation !== undefined) {
                heap32[getErrNoLocation() >> 2] = value;
            }
            return value;
        },
        _abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {
            throw new Error(err);
        },
        // eslint-disable-next-line camelcase
        _emscripten_memcpy_big: /* istanbul ignore next */ (dest, src, num) => {
            heapU8.set(heapU8.subarray(src, src + num), dest);
            return dest;
        },
        abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {
            throw new Error(err);
        },
        abortOnCannotGrowMemory: /* istanbul ignore next */ () => {
            throw new Error('Secp256k1 Error: abortOnCannotGrowMemory was called.');
        },
        enlargeMemory: /* istanbul ignore next */ () => {
            throw new Error('Secp256k1 Error: enlargeMemory was called.');
        },
        getTotalMemory: () => TOTAL_MEMORY,
    };
    const info = {
        env: {
            ...env,
            memory: wasmMemory,
            memoryBase: STATIC_BASE,
            table: new WebAssembly.Table({
                element: 'anyfunc',
                initial: TABLE_SIZE,
                maximum: MAX_TABLE_SIZE,
            }),
            tableBase: 0,
        },
        global: { Infinity, NaN },
    };
    return WebAssembly.instantiate(webassemblyBytes, info).then((result) => {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment
        getErrNoLocation = result.instance.exports.___errno_location;
        return wrapSecp256k1Wasm(result.instance, heapU8, heapU32);
    });
};
/* eslint-enable functional/immutable-data, functional/no-expression-statement, @typescript-eslint/no-magic-numbers, functional/no-conditional-statement, no-bitwise, functional/no-throw-statement */
const getEmbeddedSecp256k1Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.base64ToBin)(_secp256k1_base64__WEBPACK_IMPORTED_MODULE_2__.secp256k1Base64Bytes).buffer;
/**
 * An ultimately-portable (but slower) version of `instantiateSecp256k1Bytes`
 * which does not require the consumer to provide the secp256k1 binary buffer.
 */
const instantiateSecp256k1Wasm = async () => instantiateSecp256k1WasmBytes(getEmbeddedSecp256k1Binary());
//# sourceMappingURL=secp256k1-wasm.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1.base64.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/secp256k1/secp256k1.base64.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export secp256k1Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Base64Bytes": () => /* binding */ secp256k1Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const secp256k1Base64Bytes = '';
//# sourceMappingURL=secp256k1.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/sha1/sha1.base64.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export sha1Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha1Base64Bytes": () => /* binding */ sha1Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const sha1Base64Bytes = '';
//# sourceMappingURL=sha1.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/sha256/sha256.base64.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export sha256Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha256Base64Bytes": () => /* binding */ sha256Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const sha256Base64Bytes = '';
//# sourceMappingURL=sha256.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/bin/sha512/sha512.base64.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export sha512Base64Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha512Base64Bytes": () => /* binding */ sha512Base64Bytes
/* harmony export */ });
/* eslint-disable tsdoc/syntax */
/**
 * @hidden
 */
// prettier-ignore
const sha512Base64Bytes = '';
//# sourceMappingURL=sha512.base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export getEmbeddedRipemd160Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js .getEmbeddedRipemd160Binary */
/*! export getEmbeddedSha1Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js .getEmbeddedSha1Binary */
/*! export getEmbeddedSha256Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js .getEmbeddedSha256Binary */
/*! export getEmbeddedSha512Binary [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js .getEmbeddedSha512Binary */
/*! export hmacSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js .hmacSha256 */
/*! export hmacSha512 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js .hmacSha512 */
/*! export instantiateHmacFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js .instantiateHmacFunction */
/*! export instantiateRipemd160 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js .instantiateRipemd160 */
/*! export instantiateRipemd160Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js .instantiateRipemd160Bytes */
/*! export instantiateSecp256k1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js .instantiateSecp256k1 */
/*! export instantiateSecp256k1Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js .instantiateSecp256k1Bytes */
/*! export instantiateSha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js .instantiateSha1 */
/*! export instantiateSha1Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js .instantiateSha1Bytes */
/*! export instantiateSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js .instantiateSha256 */
/*! export instantiateSha256Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js .instantiateSha256Bytes */
/*! export instantiateSha512 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js .instantiateSha512 */
/*! export instantiateSha512Bytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js .instantiateSha512Bytes */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hmacSha256": () => /* reexport safe */ _hmac__WEBPACK_IMPORTED_MODULE_0__.hmacSha256,
/* harmony export */   "hmacSha512": () => /* reexport safe */ _hmac__WEBPACK_IMPORTED_MODULE_0__.hmacSha512,
/* harmony export */   "instantiateHmacFunction": () => /* reexport safe */ _hmac__WEBPACK_IMPORTED_MODULE_0__.instantiateHmacFunction,
/* harmony export */   "getEmbeddedRipemd160Binary": () => /* reexport safe */ _ripemd160__WEBPACK_IMPORTED_MODULE_1__.getEmbeddedRipemd160Binary,
/* harmony export */   "instantiateRipemd160": () => /* reexport safe */ _ripemd160__WEBPACK_IMPORTED_MODULE_1__.instantiateRipemd160,
/* harmony export */   "instantiateRipemd160Bytes": () => /* reexport safe */ _ripemd160__WEBPACK_IMPORTED_MODULE_1__.instantiateRipemd160Bytes,
/* harmony export */   "instantiateSecp256k1": () => /* reexport safe */ _secp256k1__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1,
/* harmony export */   "instantiateSecp256k1Bytes": () => /* reexport safe */ _secp256k1__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1Bytes,
/* harmony export */   "getEmbeddedSha1Binary": () => /* reexport safe */ _sha1__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha1Binary,
/* harmony export */   "instantiateSha1": () => /* reexport safe */ _sha1__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1,
/* harmony export */   "instantiateSha1Bytes": () => /* reexport safe */ _sha1__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1Bytes,
/* harmony export */   "getEmbeddedSha256Binary": () => /* reexport safe */ _sha256__WEBPACK_IMPORTED_MODULE_4__.getEmbeddedSha256Binary,
/* harmony export */   "instantiateSha256": () => /* reexport safe */ _sha256__WEBPACK_IMPORTED_MODULE_4__.instantiateSha256,
/* harmony export */   "instantiateSha256Bytes": () => /* reexport safe */ _sha256__WEBPACK_IMPORTED_MODULE_4__.instantiateSha256Bytes,
/* harmony export */   "getEmbeddedSha512Binary": () => /* reexport safe */ _sha512__WEBPACK_IMPORTED_MODULE_5__.getEmbeddedSha512Binary,
/* harmony export */   "instantiateSha512": () => /* reexport safe */ _sha512__WEBPACK_IMPORTED_MODULE_5__.instantiateSha512,
/* harmony export */   "instantiateSha512Bytes": () => /* reexport safe */ _sha512__WEBPACK_IMPORTED_MODULE_5__.instantiateSha512Bytes
/* harmony export */ });
/* harmony import */ var _hmac__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hmac */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js");
/* harmony import */ var _ripemd160__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ripemd160 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js");
/* harmony import */ var _secp256k1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./secp256k1 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js");
/* harmony import */ var _sha1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sha1 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js");
/* harmony import */ var _sha256__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sha256 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js");
/* harmony import */ var _sha512__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sha512 */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js");






//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export hmacSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hmacSha512 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateHmacFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateHmacFunction": () => /* binding */ instantiateHmacFunction,
/* harmony export */   "hmacSha256": () => /* binding */ hmacSha256,
/* harmony export */   "hmacSha512": () => /* binding */ hmacSha512
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");

/**
 * Instantiate a hash-based message authentication code (HMAC) function as
 * specified by RFC 2104.
 *
 * @param hashFunction - a cryptographic hash function which iterates a basic
 * compression function on blocks of data
 * @param blockByteLength - the byte-length of blocks used in `hashFunction`
 */
const instantiateHmacFunction = (hashFunction, blockByteLength) => (secret, message) => {
    const key = new Uint8Array(blockByteLength).fill(0);
    // eslint-disable-next-line functional/no-expression-statement
    key.set(secret.length > blockByteLength ? hashFunction(secret) : secret, 0);
    const innerPaddingFill = 0x36;
    const innerPadding = new Uint8Array(blockByteLength).fill(innerPaddingFill);
    // eslint-disable-next-line no-bitwise
    const innerPrefix = innerPadding.map((pad, index) => pad ^ key[index]);
    const innerContent = (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([innerPrefix, message]);
    const innerResult = hashFunction(innerContent);
    const outerPaddingFill = 0x5c;
    const outerPadding = new Uint8Array(blockByteLength).fill(outerPaddingFill);
    // eslint-disable-next-line no-bitwise
    const outerPrefix = outerPadding.map((pad, index) => pad ^ key[index]);
    return hashFunction((0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([outerPrefix, innerResult]));
};
const sha256BlockByteLength = 64;
/**
 * Create a hash-based message authentication code using HMAC-SHA256 as
 * specified in `RFC 4231`. Returns a 32-byte Uint8Array.
 *
 * Secrets longer than the block byte-length (64 bytes) are hashed before
 * use, shortening their length to the minimum recommended length (32 bytes).
 * See `RFC 2104` for details.
 *
 * @param sha256 - an implementation of Sha256
 * @param secret - the secret key (recommended length: 32-64 bytes)
 * @param message - the message to authenticate
 */
const hmacSha256 = (sha256, secret, message) => instantiateHmacFunction(sha256.hash, sha256BlockByteLength)(secret, message);
const sha512BlockByteLength = 128;
/**
 * Create a hash-based message authentication code using HMAC-SHA512 as
 * specified in `RFC 4231`. Returns a 64-byte Uint8Array.
 *
 * Secrets longer than the block byte-length (128 bytes) are hashed before
 * use, shortening their length to the minimum recommended length (64 bytes).
 * See `RFC 2104` for details.
 *
 * @param sha512 - an implementation of Sha512
 * @param secret - the secret key (recommended length: 64-128 bytes)
 * @param message - the message to authenticate
 */
const hmacSha512 = (sha512, secret, message) => instantiateHmacFunction(sha512.hash, sha512BlockByteLength)(secret, message);
//# sourceMappingURL=hmac.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/ripemd160.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export getEmbeddedRipemd160Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateRipemd160 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateRipemd160Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateRipemd160Bytes": () => /* binding */ instantiateRipemd160Bytes,
/* harmony export */   "getEmbeddedRipemd160Binary": () => /* binding */ getEmbeddedRipemd160Binary,
/* harmony export */   "instantiateRipemd160": () => /* binding */ instantiateRipemd160
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate ripemd160 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateRipemd160`.
 *
 * @param webassemblyBytes - A buffer containing the ripemd160 binary.
 */
const instantiateRipemd160Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './ripemd160', 'ripemd160', 'ripemd160_init', 'ripemd160_update', 'ripemd160_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedRipemd160Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.ripemd160Base64Bytes).buffer;
const cachedRipemd160 = {};
/**
 * An ultimately-portable (but slower) version of `instantiateRipemd160Bytes`
 * which does not require the consumer to provide the ripemd160 binary buffer.
 */
const instantiateRipemd160 = async () => {
    if (cachedRipemd160.cache !== undefined) {
        return cachedRipemd160.cache;
    }
    const result = instantiateRipemd160Bytes(getEmbeddedRipemd160Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedRipemd160.cache = result;
    return result;
};
//# sourceMappingURL=ripemd160.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/secp256k1.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export instantiateSecp256k1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSecp256k1Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSecp256k1Bytes": () => /* binding */ instantiateSecp256k1Bytes,
/* harmony export */   "instantiateSecp256k1": () => /* binding */ instantiateSecp256k1
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* eslint-disable functional/no-conditional-statement, functional/no-expression-statement, functional/no-throw-statement */

/**
 * @param secp256k1Wasm - a Secp256k1Wasm object
 * @param randomSeed - a 32-byte random seed used to randomize the context after
 * creation
 */
const wrapSecp256k1Wasm = (secp256k1Wasm, randomSeed) => {
    /**
     * Currently, this wrapper creates a context with both SIGN and VERIFY
     * capabilities. For better initialization performance, consumers could
     * re-implement a wrapper with only the capabilities they require.
     */
    const contextPtr = secp256k1Wasm.contextCreate(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.ContextFlag.BOTH);
    /**
     * Since all of these methods are single-threaded and synchronous, we can
     * reuse allocated WebAssembly memory for each method without worrying about
     * calls interfering with each other. Likewise, these spaces never need to be
     * `free`d, since we will continue using them until this entire object (and
     * with it, the entire WebAssembly instance) is garbage collected.
     *
     * If malicious javascript gained access to this object, it should be
     * considered a critical vulnerability in the consumer. However, as a best
     * practice, we zero out private keys below when we're finished with them.
     */
    const sigScratch = secp256k1Wasm.malloc(72 /* maxECDSASig */);
    const publicKeyScratch = secp256k1Wasm.malloc(65 /* maxPublicKey */);
    const messageHashScratch = secp256k1Wasm.malloc(32 /* messageHash */);
    const internalPublicKeyPtr = secp256k1Wasm.malloc(64 /* internalPublicKey */);
    const internalSigPtr = secp256k1Wasm.malloc(64 /* internalSig */);
    const schnorrSigPtr = secp256k1Wasm.malloc(64 /* schnorrSig */);
    const privateKeyPtr = secp256k1Wasm.malloc(32 /* privateKey */);
    const internalRSigPtr = secp256k1Wasm.malloc(65 /* recoverableSig */);
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    const recoveryNumPtr = secp256k1Wasm.malloc(4);
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const recoveryNumPtrView32 = recoveryNumPtr >> 2;
    const getRecoveryNumPtr = () => secp256k1Wasm.heapU32[recoveryNumPtrView32];
    // eslint-disable-next-line @typescript-eslint/no-magic-numbers
    const lengthPtr = secp256k1Wasm.malloc(4);
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const lengthPtrView32 = lengthPtr >> 2;
    const parsePublicKey = (publicKey) => {
        secp256k1Wasm.heapU8.set(publicKey, publicKeyScratch);
        return (secp256k1Wasm.pubkeyParse(contextPtr, internalPublicKeyPtr, publicKeyScratch, 
        // eslint-disable-next-line @typescript-eslint/no-magic-numbers
        publicKey.length) === 1);
    };
    const setLengthPtr = (value) => {
        secp256k1Wasm.heapU32.set([value], lengthPtrView32);
    };
    const getLengthPtr = () => secp256k1Wasm.heapU32[lengthPtrView32];
    const serializePublicKey = (length, flag) => {
        setLengthPtr(length);
        secp256k1Wasm.pubkeySerialize(contextPtr, publicKeyScratch, lengthPtr, internalPublicKeyPtr, flag);
        return secp256k1Wasm.readHeapU8(publicKeyScratch, getLengthPtr()).slice();
    };
    const getSerializedPublicKey = (compressed) => compressed
        ? serializePublicKey(33 /* compressedPublicKey */, _bin_bin__WEBPACK_IMPORTED_MODULE_0__.CompressionFlag.COMPRESSED)
        : serializePublicKey(65 /* uncompressedPublicKey */, _bin_bin__WEBPACK_IMPORTED_MODULE_0__.CompressionFlag.UNCOMPRESSED);
    const convertPublicKey = (compressed) => (publicKey) => {
        if (!parsePublicKey(publicKey)) {
            throw new Error('Failed to parse public key.');
        }
        return getSerializedPublicKey(compressed);
    };
    const parseSignature = (signature, isDer) => {
        secp256k1Wasm.heapU8.set(signature, sigScratch);
        return isDer
            ? secp256k1Wasm.signatureParseDER(contextPtr, internalSigPtr, sigScratch, signature.length) === 1
            : secp256k1Wasm.signatureParseCompact(contextPtr, internalSigPtr, sigScratch) === 1;
    };
    const parseOrThrow = (signature, isDer) => {
        if (!parseSignature(signature, isDer)) {
            throw new Error('Failed to parse signature.');
        }
    };
    const getCompactSig = () => {
        secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);
        return secp256k1Wasm.readHeapU8(sigScratch, 64 /* compactSig */).slice();
    };
    const getDERSig = () => {
        setLengthPtr(72 /* maxECDSASig */);
        secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);
        return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();
    };
    const convertSignature = (wasDER) => (signature) => {
        parseOrThrow(signature, wasDER);
        return wasDER ? getCompactSig() : getDERSig();
    };
    const fillPrivateKeyPtr = (privateKey) => {
        secp256k1Wasm.heapU8.set(privateKey, privateKeyPtr);
    };
    const zeroOutPtr = (pointer, bytes) => {
        secp256k1Wasm.heapU8.fill(0, pointer, pointer + bytes);
    };
    const zeroOutPrivateKeyPtr = () => {
        zeroOutPtr(privateKeyPtr, 32 /* privateKey */);
    };
    const withPrivateKey = (privateKey, instructions) => {
        fillPrivateKeyPtr(privateKey);
        const ret = instructions();
        zeroOutPrivateKeyPtr();
        return ret;
    };
    const derivePublicKey = (compressed) => (privateKey) => {
        const invalid = withPrivateKey(privateKey, () => secp256k1Wasm.pubkeyCreate(contextPtr, internalPublicKeyPtr, privateKeyPtr) !== 1);
        if (invalid) {
            throw new Error('Cannot derive public key from invalid private key.');
        }
        return getSerializedPublicKey(compressed);
    };
    const fillMessageHashScratch = (messageHash) => {
        secp256k1Wasm.heapU8.set(messageHash, messageHashScratch);
    };
    const normalizeSignature = () => {
        secp256k1Wasm.signatureNormalize(contextPtr, internalSigPtr, internalSigPtr);
    };
    const modifySignature = (isDer, normalize) => (signature) => {
        parseOrThrow(signature, isDer);
        if (normalize) {
            normalizeSignature();
        }
        else {
            secp256k1Wasm.signatureMalleate(contextPtr, internalSigPtr, internalSigPtr);
        }
        return isDer ? getDERSig() : getCompactSig();
    };
    const parseAndNormalizeSignature = (signature, isDer, normalize) => {
        const ret = parseSignature(signature, isDer);
        if (normalize) {
            normalizeSignature();
        }
        return ret;
    };
    const signMessageHash = (isDer) => (privateKey, messageHash) => {
        fillMessageHashScratch(messageHash);
        return withPrivateKey(privateKey, () => {
            const failed = secp256k1Wasm.sign(contextPtr, internalSigPtr, messageHashScratch, privateKeyPtr) !== 1;
            if (failed) {
                throw new Error('Failed to sign message hash. The private key is not valid.');
            }
            if (isDer) {
                setLengthPtr(72 /* maxECDSASig */);
                secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);
                return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();
            }
            secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);
            return secp256k1Wasm
                .readHeapU8(sigScratch, 64 /* compactSig */)
                .slice();
        });
    };
    const signMessageHashSchnorr = () => (privateKey, messageHash) => {
        fillMessageHashScratch(messageHash);
        return withPrivateKey(privateKey, () => {
            const failed = secp256k1Wasm.schnorrSign(contextPtr, schnorrSigPtr, messageHashScratch, privateKeyPtr) !== 1;
            if (failed) {
                throw new Error('Failed to sign message hash. The private key is not valid.');
            }
            return secp256k1Wasm
                .readHeapU8(schnorrSigPtr, 64 /* schnorrSig */)
                .slice();
        });
    };
    const verifyMessage = (messageHash) => {
        fillMessageHashScratch(messageHash);
        return (secp256k1Wasm.verify(contextPtr, internalSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);
    };
    const verifySignature = (isDer, normalize) => (signature, publicKey, messageHash) => parsePublicKey(publicKey) &&
        parseAndNormalizeSignature(signature, isDer, normalize) &&
        verifyMessage(messageHash);
    const verifyMessageSchnorr = (messageHash, signature) => {
        fillMessageHashScratch(messageHash);
        secp256k1Wasm.heapU8.set(signature, schnorrSigPtr);
        return (secp256k1Wasm.schnorrVerify(contextPtr, schnorrSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);
    };
    const verifySignatureSchnorr = () => (signature, publicKey, messageHash) => parsePublicKey(publicKey)
        ? verifyMessageSchnorr(messageHash, signature)
        : false;
    const signMessageHashRecoverable = (privateKey, messageHash) => {
        fillMessageHashScratch(messageHash);
        return withPrivateKey(privateKey, () => {
            if (secp256k1Wasm.signRecoverable(contextPtr, internalRSigPtr, messageHashScratch, privateKeyPtr) !== 1) {
                throw new Error('Failed to sign message hash. The private key is not valid.');
            }
            secp256k1Wasm.recoverableSignatureSerialize(contextPtr, sigScratch, recoveryNumPtr, internalRSigPtr);
            return {
                recoveryId: getRecoveryNumPtr(),
                signature: secp256k1Wasm
                    .readHeapU8(sigScratch, 64 /* compactSig */)
                    .slice(),
            };
        });
    };
    const recoverPublicKey = (compressed) => (signature, recoveryId, messageHash) => {
        fillMessageHashScratch(messageHash);
        secp256k1Wasm.heapU8.set(signature, sigScratch);
        if (secp256k1Wasm.recoverableSignatureParse(contextPtr, internalRSigPtr, sigScratch, recoveryId) !== 1) {
            throw new Error('Failed to recover public key. Could not parse signature.');
        }
        if (secp256k1Wasm.recover(contextPtr, internalPublicKeyPtr, internalRSigPtr, messageHashScratch) !== 1) {
            throw new Error('Failed to recover public key. The compact signature, recovery, or message hash is invalid.');
        }
        return getSerializedPublicKey(compressed);
    };
    const addTweakPrivateKey = (privateKey, tweakValue) => {
        fillMessageHashScratch(tweakValue);
        return withPrivateKey(privateKey, () => {
            if (secp256k1Wasm.privkeyTweakAdd(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {
                throw new Error('Private key is invalid or adding failed.');
            }
            return secp256k1Wasm
                .readHeapU8(privateKeyPtr, 32 /* privateKey */)
                .slice();
        });
    };
    const mulTweakPrivateKey = (privateKey, tweakValue) => {
        fillMessageHashScratch(tweakValue);
        return withPrivateKey(privateKey, () => {
            if (secp256k1Wasm.privkeyTweakMul(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {
                throw new Error('Private key is invalid or multiplying failed.');
            }
            return secp256k1Wasm
                .readHeapU8(privateKeyPtr, 32 /* privateKey */)
                .slice();
        });
    };
    const addTweakPublicKey = (compressed) => (publicKey, tweakValue) => {
        if (!parsePublicKey(publicKey)) {
            throw new Error('Failed to parse public key.');
        }
        fillMessageHashScratch(tweakValue);
        if (secp256k1Wasm.pubkeyTweakAdd(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {
            throw new Error('Adding failed');
        }
        return getSerializedPublicKey(compressed);
    };
    const mulTweakPublicKey = (compressed) => (publicKey, tweakValue) => {
        if (!parsePublicKey(publicKey)) {
            throw new Error('Failed to parse public key.');
        }
        fillMessageHashScratch(tweakValue);
        if (secp256k1Wasm.pubkeyTweakMul(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {
            throw new Error('Multiplying failed');
        }
        return getSerializedPublicKey(compressed);
    };
    /**
     * The value of this precaution is debatable, especially in the context of
     * javascript and WebAssembly.
     *
     * In the secp256k1 C library, context randomization is an additional layer of
     * security from side-channel attacks which attempt to extract private key
     * information by analyzing things like a CPU's emitted radio frequencies or
     * power usage.
     *
     * In this library, these attacks seem even less likely, since the "platform"
     * on which this code will be executed (e.g. V8) is likely to obscure any
     * such signals.
     *
     * Still, out of an abundance of caution (and because no one has produced a
     * definitive proof indicating that this is not helpful), this library exposes
     * the ability to randomize the context like the C library. Depending on the
     * intended application, consumers can decide whether or not to randomize.
     */
    if (randomSeed !== undefined) {
        const randomSeedPtr = messageHashScratch;
        secp256k1Wasm.heapU8.set(randomSeed, randomSeedPtr);
        secp256k1Wasm.contextRandomize(contextPtr, randomSeedPtr);
        zeroOutPtr(randomSeedPtr, 32 /* randomSeed */);
    }
    return {
        addTweakPrivateKey,
        addTweakPublicKeyCompressed: addTweakPublicKey(true),
        addTweakPublicKeyUncompressed: addTweakPublicKey(false),
        compressPublicKey: convertPublicKey(true),
        derivePublicKeyCompressed: derivePublicKey(true),
        derivePublicKeyUncompressed: derivePublicKey(false),
        malleateSignatureCompact: modifySignature(false, false),
        malleateSignatureDER: modifySignature(true, false),
        mulTweakPrivateKey,
        mulTweakPublicKeyCompressed: mulTweakPublicKey(true),
        mulTweakPublicKeyUncompressed: mulTweakPublicKey(false),
        normalizeSignatureCompact: modifySignature(false, true),
        normalizeSignatureDER: modifySignature(true, true),
        recoverPublicKeyCompressed: recoverPublicKey(true),
        recoverPublicKeyUncompressed: recoverPublicKey(false),
        signMessageHashCompact: signMessageHash(false),
        signMessageHashDER: signMessageHash(true),
        signMessageHashRecoverableCompact: signMessageHashRecoverable,
        signMessageHashSchnorr: signMessageHashSchnorr(),
        signatureCompactToDER: convertSignature(false),
        signatureDERToCompact: convertSignature(true),
        uncompressPublicKey: convertPublicKey(false),
        validatePrivateKey: (privateKey) => withPrivateKey(privateKey, () => secp256k1Wasm.seckeyVerify(contextPtr, privateKeyPtr) === 1),
        verifySignatureCompact: verifySignature(false, true),
        verifySignatureCompactLowS: verifySignature(false, false),
        verifySignatureDER: verifySignature(true, true),
        verifySignatureDERLowS: verifySignature(true, false),
        verifySignatureSchnorr: verifySignatureSchnorr(),
    };
};
/**
 * This method is like `instantiateSecp256k1`, but requires the consumer to
 * `Window.fetch` or `fs.readFile` the `secp256k1.wasm` binary and provide it to
 * this method as `webassemblyBytes`. This skips a base64 decoding of an
 * embedded binary.
 *
 * ### Randomizing the Context with `randomSeed`
 * This method also accepts an optional, 32-byte `randomSeed`, which is passed
 * to the `contextRandomize` method in the underlying WebAssembly.
 *
 * The value of this precaution is debatable, especially in the context of
 * javascript and WebAssembly.
 *
 * In the secp256k1 C library, context randomization is an additional layer of
 * security from side-channel attacks which attempt to extract private key
 * information by analyzing things like a CPU's emitted radio frequencies or
 * power usage.
 *
 * In this library, these attacks seem even less likely, since the "platform"
 * on which this code will be executed (e.g. V8) is likely to obscure any
 * such signals.
 *
 * Still, out of an abundance of caution (and because no one has produced a
 * definitive proof indicating that this is not helpful), this library exposes
 * the ability to randomize the context like the C library. Depending on the
 * intended application, consumers can decide whether or not to randomize.
 *
 * @param webassemblyBytes - an ArrayBuffer containing the bytes from Libauth's
 * `secp256k1.wasm` binary. Providing this buffer manually may be faster than
 * the internal base64 decode which happens in `instantiateSecp256k1`.
 * @param randomSeed - a 32-byte random seed used to randomize the secp256k1
 * context after creation. See above for details.
 */
const instantiateSecp256k1Bytes = async (webassemblyBytes, randomSeed) => wrapSecp256k1Wasm(await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1WasmBytes)(webassemblyBytes), randomSeed);
const cachedSecp256k1 = {};
/**
 * Create and wrap a Secp256k1 WebAssembly instance to expose a set of
 * purely-functional Secp256k1 methods. For slightly faster initialization, use
 * `instantiateSecp256k1Bytes`.
 *
 * @param randomSeed - a 32-byte random seed used to randomize the secp256k1
 * context after creation. See the description in `instantiateSecp256k1Bytes`
 * for details.
 */
const instantiateSecp256k1 = async (randomSeed) => {
    if (cachedSecp256k1.cache !== undefined) {
        return cachedSecp256k1.cache;
    }
    const result = Promise.resolve(wrapSecp256k1Wasm(await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1Wasm)(), randomSeed));
    // eslint-disable-next-line require-atomic-updates, functional/immutable-data
    cachedSecp256k1.cache = result;
    return result;
};
//# sourceMappingURL=secp256k1.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha1.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export getEmbeddedSha1Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha1Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSha1Bytes": () => /* binding */ instantiateSha1Bytes,
/* harmony export */   "getEmbeddedSha1Binary": () => /* binding */ getEmbeddedSha1Binary,
/* harmony export */   "instantiateSha1": () => /* binding */ instantiateSha1
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate sha1 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSha1`.
 *
 * @param webassemblyBytes - A buffer containing the sha1 binary.
 */
const instantiateSha1Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha1', 'sha1', 'sha1_init', 'sha1_update', 'sha1_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedSha1Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.sha1Base64Bytes).buffer;
const cachedSha1 = {};
/**
 * An ultimately-portable (but slower) version of `instantiateSha1Bytes`
 * which does not require the consumer to provide the sha1 binary buffer.
 */
const instantiateSha1 = async () => {
    if (cachedSha1.cache !== undefined) {
        return cachedSha1.cache;
    }
    const result = instantiateSha1Bytes(getEmbeddedSha1Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedSha1.cache = result;
    return result;
};
//# sourceMappingURL=sha1.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha256.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export getEmbeddedSha256Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha256Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSha256Bytes": () => /* binding */ instantiateSha256Bytes,
/* harmony export */   "getEmbeddedSha256Binary": () => /* binding */ getEmbeddedSha256Binary,
/* harmony export */   "instantiateSha256": () => /* binding */ instantiateSha256
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate sha256 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSha256`.
 *
 * @param webassemblyBytes - A buffer containing the sha256 binary.
 */
const instantiateSha256Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha256', 'sha256', 'sha256_init', 'sha256_update', 'sha256_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedSha256Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.sha256Base64Bytes).buffer;
const cachedSha256 = {};
/**
 * An ultimately-portable (but possibly slower) version of
 * `instantiateSha256Bytes` which does not require the consumer to provide the
 * sha256 binary buffer.
 */
const instantiateSha256 = async () => {
    if (cachedSha256.cache !== undefined) {
        return cachedSha256.cache;
    }
    const result = instantiateSha256Bytes(getEmbeddedSha256Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedSha256.cache = result;
    return result;
};
//# sourceMappingURL=sha256.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/crypto/sha512.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export getEmbeddedSha512Binary [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha512 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateSha512Bytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateSha512Bytes": () => /* binding */ instantiateSha512Bytes,
/* harmony export */   "getEmbeddedSha512Binary": () => /* binding */ getEmbeddedSha512Binary,
/* harmony export */   "instantiateSha512": () => /* binding */ instantiateSha512
/* harmony export */ });
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");


/**
 * The most performant way to instantiate sha512 functionality. To avoid
 * using Node.js or DOM-specific APIs, you can use `instantiateSha512`.
 *
 * @param webassemblyBytes - A buffer containing the sha512 binary.
 */
const instantiateSha512Bytes = async (webassemblyBytes) => {
    const wasm = await (0,_bin_bin__WEBPACK_IMPORTED_MODULE_0__.instantiateRustWasm)(webassemblyBytes, './sha512', 'sha512', 'sha512_init', 'sha512_update', 'sha512_final');
    return {
        final: wasm.final,
        hash: wasm.hash,
        init: wasm.init,
        update: wasm.update,
    };
};
const getEmbeddedSha512Binary = () => (0,_format_format__WEBPACK_IMPORTED_MODULE_1__.base64ToBin)(_bin_bin__WEBPACK_IMPORTED_MODULE_0__.sha512Base64Bytes).buffer;
const cachedSha512 = {};
/**
 * An ultimately-portable (but slower) version of `instantiateSha512Bytes`
 * which does not require the consumer to provide the sha512 binary buffer.
 */
const instantiateSha512 = async () => {
    if (cachedSha512.cache !== undefined) {
        return cachedSha512.cache;
    }
    const result = instantiateSha512Bytes(getEmbeddedSha512Binary());
    // eslint-disable-next-line functional/immutable-data, functional/no-expression-statement
    cachedSha512.cache = result;
    return result;
};
//# sourceMappingURL=sha512.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export BaseConversionError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base58ToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBase58 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bitcoinBase58Alphabet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createBaseConverter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseConversionError": () => /* binding */ BaseConversionError,
/* harmony export */   "createBaseConverter": () => /* binding */ createBaseConverter,
/* harmony export */   "bitcoinBase58Alphabet": () => /* binding */ bitcoinBase58Alphabet,
/* harmony export */   "base58ToBin": () => /* binding */ base58ToBin,
/* harmony export */   "binToBase58": () => /* binding */ binToBase58
/* harmony export */ });
var BaseConversionError;
(function (BaseConversionError) {
    BaseConversionError["tooLong"] = "An alphabet may be no longer than 254 characters.";
    BaseConversionError["ambiguousCharacter"] = "A character code may only appear once in a single alphabet.";
    BaseConversionError["unknownCharacter"] = "Encountered an unknown character for this alphabet.";
})(BaseConversionError || (BaseConversionError = {}));
/**
 * Create a `BaseConverter`, which exposes methods for encoding and decoding
 * `Uint8Array`s using bitcoin-style padding: each leading zero in the input is
 * replaced with the zero-index character of the `alphabet`, then the remainder
 * of the input is encoded as a large number in the specified alphabet.
 *
 * For example, using the alphabet `01`, the input `[0, 15]` is encoded `01111`
 * – a single `0` represents the leading padding, followed by the base2 encoded
 * `0x1111` (15). With the same alphabet, the input `[0, 0, 255]` is encoded
 * `0011111111` - only two `0` characters are required to represent both
 * leading zeros, followed by the base2 encoded `0x11111111` (255).
 *
 * **This is not compatible with `RFC 3548`'s `Base16`, `Base32`, or `Base64`.**
 *
 * If the alphabet is malformed, this method returns the error as a `string`.
 *
 * @param alphabet - an ordered string which maps each index to a character,
 * e.g. `0123456789`.
 * @privateRemarks
 * Algorithm from the `base-x` implementation (which is derived from the
 * original Satoshi implementation): https://github.com/cryptocoinjs/base-x
 */
const createBaseConverter = (alphabet) => {
    const undefinedValue = 255;
    const uint8ArrayBase = 256;
    if (alphabet.length >= undefinedValue)
        return BaseConversionError.tooLong;
    const alphabetMap = new Uint8Array(uint8ArrayBase).fill(undefinedValue);
    // eslint-disable-next-line functional/no-loop-statement, functional/no-let, no-plusplus
    for (let index = 0; index < alphabet.length; index++) {
        const characterCode = alphabet.charCodeAt(index);
        if (alphabetMap[characterCode] !== undefinedValue) {
            return BaseConversionError.ambiguousCharacter;
        }
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        alphabetMap[characterCode] = index;
    }
    const base = alphabet.length;
    const paddingCharacter = alphabet.charAt(0);
    const factor = Math.log(base) / Math.log(uint8ArrayBase);
    const inverseFactor = Math.log(uint8ArrayBase) / Math.log(base);
    return {
        // eslint-disable-next-line complexity
        decode: (input) => {
            if (input.length === 0)
                return Uint8Array.of();
            const firstNonZeroIndex = input
                .split('')
                .findIndex((character) => character !== paddingCharacter);
            if (firstNonZeroIndex === -1) {
                return new Uint8Array(input.length);
            }
            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * factor + 1);
            const decoded = new Uint8Array(requiredLength);
            /* eslint-disable functional/no-let, functional/no-expression-statement */
            let nextByte = firstNonZeroIndex;
            let remainingBytes = 0;
            // eslint-disable-next-line functional/no-loop-statement
            while (input[nextByte] !== undefined) {
                let carry = alphabetMap[input.charCodeAt(nextByte)];
                if (carry === undefinedValue)
                    return BaseConversionError.unknownCharacter;
                let digit = 0;
                // eslint-disable-next-line functional/no-loop-statement
                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; 
                // eslint-disable-next-line no-plusplus
                steps--, digit++) {
                    carry += Math.floor(base * decoded[steps]);
                    // eslint-disable-next-line functional/immutable-data
                    decoded[steps] = Math.floor(carry % uint8ArrayBase);
                    carry = Math.floor(carry / uint8ArrayBase);
                }
                remainingBytes = digit;
                // eslint-disable-next-line no-plusplus
                nextByte++;
            }
            /* eslint-enable functional/no-let, functional/no-expression-statement */
            const firstNonZeroResultDigit = decoded.findIndex((value) => value !== 0);
            const bin = new Uint8Array(firstNonZeroIndex + (requiredLength - firstNonZeroResultDigit));
            // eslint-disable-next-line functional/no-expression-statement
            bin.set(decoded.slice(firstNonZeroResultDigit), firstNonZeroIndex);
            return bin;
        },
        // eslint-disable-next-line complexity
        encode: (input) => {
            if (input.length === 0)
                return '';
            const firstNonZeroIndex = input.findIndex((byte) => byte !== 0);
            if (firstNonZeroIndex === -1) {
                return paddingCharacter.repeat(input.length);
            }
            const requiredLength = Math.floor((input.length - firstNonZeroIndex) * inverseFactor + 1);
            const encoded = new Uint8Array(requiredLength);
            /* eslint-disable functional/no-let, functional/no-expression-statement */
            let nextByte = firstNonZeroIndex;
            let remainingBytes = 0;
            // eslint-disable-next-line functional/no-loop-statement
            while (nextByte !== input.length) {
                let carry = input[nextByte];
                let digit = 0;
                // eslint-disable-next-line functional/no-loop-statement
                for (let steps = requiredLength - 1; (carry !== 0 || digit < remainingBytes) && steps !== -1; 
                // eslint-disable-next-line no-plusplus
                steps--, digit++) {
                    carry += Math.floor(uint8ArrayBase * encoded[steps]);
                    // eslint-disable-next-line functional/immutable-data
                    encoded[steps] = Math.floor(carry % base);
                    carry = Math.floor(carry / base);
                }
                remainingBytes = digit;
                // eslint-disable-next-line no-plusplus
                nextByte++;
            }
            /* eslint-enable functional/no-let, functional/no-expression-statement */
            const firstNonZeroResultDigit = encoded.findIndex((value) => value !== 0);
            const padding = paddingCharacter.repeat(firstNonZeroIndex);
            return encoded
                .slice(firstNonZeroResultDigit)
                .reduce((all, digit) => all + alphabet.charAt(digit), padding);
        },
    };
};
const bitcoinBase58Alphabet = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
const base58 = createBaseConverter(bitcoinBase58Alphabet);
/**
 * Convert a bitcoin-style base58-encoded string to a Uint8Array.
 *
 * See `createBaseConverter` for format details.
 * @param input - a valid base58-encoded string to decode
 */
const base58ToBin = base58.decode;
/**
 * Convert a Uint8Array to a bitcoin-style base58-encoded string.
 *
 * See `createBaseConverter` for format details.
 * @param input - the Uint8Array to base58 encode
 */
const binToBase58 = base58.encode;
//# sourceMappingURL=base-convert.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/base64.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export base64ToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBase64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBase64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBase64": () => /* binding */ isBase64,
/* harmony export */   "base64ToBin": () => /* binding */ base64ToBin,
/* harmony export */   "binToBase64": () => /* binding */ binToBase64
/* harmony export */ });
// base64 encode/decode derived from: https://github.com/niklasvh/base64-arraybuffer
const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const base64GroupLength = 4;
const nonBase64Chars = new RegExp(`[^${chars}=]`, 'u');
/**
 * For use before `base64ToBin`. Returns true if the provided string is valid
 * base64 (length is divisible by 4, only uses base64 characters).
 * @param maybeHex - a string to test
 */
const isBase64 = (maybeBase64) => maybeBase64.length % base64GroupLength === 0 &&
    !nonBase64Chars.test(maybeBase64);
/* eslint-disable functional/no-expression-statement, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus */
/**
 * Convert a base64-encoded string to a Uint8Array.
 *
 * Note, this method always completes. If `validBase64` is not valid base64, an
 * incorrect result will be returned. If `validBase64` is potentially malformed,
 * check it with `isBase64` before calling this method.
 *
 * @param validBase64 - a valid base64-encoded string to decode
 */
const base64ToBin = (validBase64) => {
    const lookup = new Uint8Array(123);
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement
    for (let i = 0; i < chars.length; i++) {
        lookup[chars.charCodeAt(i)] = i;
    }
    const bufferLengthEstimate = validBase64.length * 0.75;
    const stringLength = validBase64.length;
    const bufferLength = validBase64[validBase64.length - 1] === '=' // eslint-disable-line @typescript-eslint/prefer-string-starts-ends-with
        ? validBase64[validBase64.length - 2] === '='
            ? bufferLengthEstimate - 2
            : bufferLengthEstimate - 1
        : bufferLengthEstimate;
    const buffer = new ArrayBuffer(bufferLength);
    const bytes = new Uint8Array(buffer);
    // eslint-disable-next-line functional/no-let
    let p = 0;
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement
    for (let i = 0; i < stringLength; i += 4) {
        const encoded1 = lookup[validBase64.charCodeAt(i)];
        const encoded2 = lookup[validBase64.charCodeAt(i + 1)];
        const encoded3 = lookup[validBase64.charCodeAt(i + 2)];
        const encoded4 = lookup[validBase64.charCodeAt(i + 3)];
        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }
    return bytes;
};
/**
 * Convert a Uint8Array to a base64-encoded string.
 * @param bytes - the Uint8Array to base64 encode
 */
const binToBase64 = (bytes) => {
    // eslint-disable-next-line functional/no-let
    let result = '';
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement
    for (let i = 0; i < bytes.length; i += 3) {
        result += chars[bytes[i] >> 2];
        result += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
        result += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
        result += chars[bytes[i + 2] & 63];
    }
    const padded = bytes.length % 3 === 2
        ? `${result.substring(0, result.length - 1)}=`
        : bytes.length % 3 === 1
            ? `${result.substring(0, result.length - 2)}==`
            : result;
    return padded;
};
/* eslint-enable functional/no-expression-statement, functional/immutable-data, @typescript-eslint/no-magic-numbers, no-bitwise, no-plusplus */
//# sourceMappingURL=base64.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export binStringToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBinString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBinString [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "binStringToBin": () => /* binding */ binStringToBin,
/* harmony export */   "binToBinString": () => /* binding */ binToBinString,
/* harmony export */   "isBinString": () => /* binding */ isBinString
/* harmony export */ });
/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");

const binaryByteWidth = 8;
const binary = 2;
/**
 * Decode a binary-encoded string into a Uint8Array.
 *
 * E.g.: `binStringToBin('0010101001100100')` → `new Uint8Array([42, 100])`
 *
 * Note, this method always completes. If `binaryDigits` is not divisible by 8,
 * the final byte will be parsed as if it were prepended with `0`s (e.g. `1`
 * is interpreted as `00000001`). If `binaryDigits` is potentially malformed,
 * check it with `isBinString` before calling this method.
 *
 * @param validHex - a string of valid, hexadecimal-encoded data
 */
const binStringToBin = (binaryDigits) => Uint8Array.from((0,_hex__WEBPACK_IMPORTED_MODULE_0__.splitEvery)(binaryDigits, binaryByteWidth).map((byteString) => parseInt(byteString, binary)));
/**
 * Encode a Uint8Array into a binary-encoded string.
 *
 * E.g.: `binToBinString(Uint8Array.from([42, 100]))` → `'0010101001100100'`
 *
 * @param bytes - a Uint8Array to encode
 */
const binToBinString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(binary).padStart(binaryByteWidth, '0'), '');
/**
 * For use before `binStringToBin`. Returns true if the provided string is a
 * valid binary string (length is divisible by 8 and only uses the characters
 * `0` and `1`).
 * @param maybeBinString - a string to test
 */
const isBinString = (maybeBinString) => maybeBinString.length % binaryByteWidth === 0 &&
    !/[^01]/u.test(maybeBinString);
//# sourceMappingURL=bin-string.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/format.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export BaseConversionError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .BaseConversionError */
/*! export LocktimeError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .LocktimeError */
/*! export base58ToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .base58ToBin */
/*! export base64ToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js .base64ToBin */
/*! export bigIntToBinUint256BEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUint256BEClamped */
/*! export bigIntToBinUint64LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUint64LE */
/*! export bigIntToBinUint64LEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUint64LEClamped */
/*! export bigIntToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBinUintLE */
/*! export bigIntToBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .bigIntToBitcoinVarInt */
/*! export binStringToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js .binStringToBin */
/*! export binToBase58 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .binToBase58 */
/*! export binToBase64 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js .binToBase64 */
/*! export binToBigIntUint256BE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUint256BE */
/*! export binToBigIntUint64LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUint64LE */
/*! export binToBigIntUintBE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUintBE */
/*! export binToBigIntUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToBigIntUintLE */
/*! export binToBinString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js .binToBinString */
/*! export binToFixedLength [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToFixedLength */
/*! export binToHex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .binToHex */
/*! export binToNumberUint16LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToNumberUint16LE */
/*! export binToNumberUint32LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToNumberUint32LE */
/*! export binToNumberUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .binToNumberUintLE */
/*! export binToUtf8 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitcoinBase58Alphabet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .bitcoinBase58Alphabet */
/*! export createBaseConverter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js .createBaseConverter */
/*! export dateToLocktime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .dateToLocktime */
/*! export dateToLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .dateToLocktimeBin */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export flattenBinArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .flattenBinArray */
/*! export hexToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .hexToBin */
/*! export isBase64 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/base64.js .isBase64 */
/*! export isBinString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js .isBinString */
/*! export isHex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .isHex */
/*! export locktimeToDate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .locktimeToDate */
/*! export maximumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .maximumLocktimeDate */
/*! export maximumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .maximumLocktimeTimestamp */
/*! export minimumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .minimumLocktimeDate */
/*! export minimumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .minimumLocktimeTimestamp */
/*! export numberToBinInt32TwosCompliment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinInt32TwosCompliment */
/*! export numberToBinUint16BE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint16BE */
/*! export numberToBinUint16LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint16LE */
/*! export numberToBinUint16LEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint16LEClamped */
/*! export numberToBinUint32BE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint32BE */
/*! export numberToBinUint32LE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint32LE */
/*! export numberToBinUint32LEClamped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUint32LEClamped */
/*! export numberToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .numberToBinUintLE */
/*! export parseLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/time.js .parseLocktimeBin */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .range */
/*! export readBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .readBitcoinVarInt */
/*! export sortObjectKeys [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/log.js .sortObjectKeys */
/*! export splitEvery [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .splitEvery */
/*! export stringify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/log.js .stringify */
/*! export stringifyTestVector [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/log.js .stringifyTestVector */
/*! export swapEndianness [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js .swapEndianness */
/*! export utf8ToBin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export varIntPrefixToSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js .varIntPrefixToSize */
/*! other exports [maybe provided (runtime-defined)] [no usage info] -> ./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "binToHex": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.binToHex,
/* harmony export */   "flattenBinArray": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray,
/* harmony export */   "hexToBin": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin,
/* harmony export */   "isHex": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.isHex,
/* harmony export */   "range": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.range,
/* harmony export */   "splitEvery": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.splitEvery,
/* harmony export */   "swapEndianness": () => /* reexport safe */ _hex__WEBPACK_IMPORTED_MODULE_0__.swapEndianness,
/* harmony export */   "binStringToBin": () => /* reexport safe */ _bin_string__WEBPACK_IMPORTED_MODULE_1__.binStringToBin,
/* harmony export */   "binToBinString": () => /* reexport safe */ _bin_string__WEBPACK_IMPORTED_MODULE_1__.binToBinString,
/* harmony export */   "isBinString": () => /* reexport safe */ _bin_string__WEBPACK_IMPORTED_MODULE_1__.isBinString,
/* harmony export */   "BaseConversionError": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.BaseConversionError,
/* harmony export */   "base58ToBin": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.base58ToBin,
/* harmony export */   "binToBase58": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.binToBase58,
/* harmony export */   "bitcoinBase58Alphabet": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.bitcoinBase58Alphabet,
/* harmony export */   "createBaseConverter": () => /* reexport safe */ _base_convert__WEBPACK_IMPORTED_MODULE_2__.createBaseConverter,
/* harmony export */   "base64ToBin": () => /* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_3__.base64ToBin,
/* harmony export */   "binToBase64": () => /* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_3__.binToBase64,
/* harmony export */   "isBase64": () => /* reexport safe */ _base64__WEBPACK_IMPORTED_MODULE_3__.isBase64,
/* harmony export */   "bigIntToBinUint256BEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint256BEClamped,
/* harmony export */   "bigIntToBinUint64LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint64LE,
/* harmony export */   "bigIntToBinUint64LEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUint64LEClamped,
/* harmony export */   "bigIntToBinUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBinUintLE,
/* harmony export */   "bigIntToBitcoinVarInt": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.bigIntToBitcoinVarInt,
/* harmony export */   "binToBigIntUint256BE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUint256BE,
/* harmony export */   "binToBigIntUint64LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUint64LE,
/* harmony export */   "binToBigIntUintBE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUintBE,
/* harmony export */   "binToBigIntUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToBigIntUintLE,
/* harmony export */   "binToFixedLength": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToFixedLength,
/* harmony export */   "binToNumberUint16LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToNumberUint16LE,
/* harmony export */   "binToNumberUint32LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToNumberUint32LE,
/* harmony export */   "binToNumberUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.binToNumberUintLE,
/* harmony export */   "numberToBinInt32TwosCompliment": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinInt32TwosCompliment,
/* harmony export */   "numberToBinUint16BE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint16BE,
/* harmony export */   "numberToBinUint16LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint16LE,
/* harmony export */   "numberToBinUint16LEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint16LEClamped,
/* harmony export */   "numberToBinUint32BE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32BE,
/* harmony export */   "numberToBinUint32LE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32LE,
/* harmony export */   "numberToBinUint32LEClamped": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUint32LEClamped,
/* harmony export */   "numberToBinUintLE": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.numberToBinUintLE,
/* harmony export */   "readBitcoinVarInt": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.readBitcoinVarInt,
/* harmony export */   "varIntPrefixToSize": () => /* reexport safe */ _numbers__WEBPACK_IMPORTED_MODULE_4__.varIntPrefixToSize,
/* harmony export */   "sortObjectKeys": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.sortObjectKeys,
/* harmony export */   "stringify": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.stringify,
/* harmony export */   "stringifyTestVector": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_5__.stringifyTestVector,
/* harmony export */   "LocktimeError": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.LocktimeError,
/* harmony export */   "dateToLocktime": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.dateToLocktime,
/* harmony export */   "dateToLocktimeBin": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.dateToLocktimeBin,
/* harmony export */   "locktimeToDate": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.locktimeToDate,
/* harmony export */   "maximumLocktimeDate": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.maximumLocktimeDate,
/* harmony export */   "maximumLocktimeTimestamp": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.maximumLocktimeTimestamp,
/* harmony export */   "minimumLocktimeDate": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.minimumLocktimeDate,
/* harmony export */   "minimumLocktimeTimestamp": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.minimumLocktimeTimestamp,
/* harmony export */   "parseLocktimeBin": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_6__.parseLocktimeBin,
/* harmony export */   "binToUtf8": () => /* reexport safe */ _utf8__WEBPACK_IMPORTED_MODULE_8__.binToUtf8,
/* harmony export */   "utf8ToBin": () => /* reexport safe */ _utf8__WEBPACK_IMPORTED_MODULE_8__.utf8ToBin
/* harmony export */ });
/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _bin_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bin-string */ "./node_modules/@bitauth/libauth/build/module/lib/format/bin-string.js");
/* harmony import */ var _base_convert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base-convert */ "./node_modules/@bitauth/libauth/build/module/lib/format/base-convert.js");
/* harmony import */ var _base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base64 */ "./node_modules/@bitauth/libauth/build/module/lib/format/base64.js");
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ "./node_modules/@bitauth/libauth/build/module/lib/format/log.js");
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./time */ "./node_modules/@bitauth/libauth/build/module/lib/format/time.js");
/* harmony import */ var _type_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./type-utils */ "./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js");
/* harmony import */ var _type_utils__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_type_utils__WEBPACK_IMPORTED_MODULE_7__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _type_utils__WEBPACK_IMPORTED_MODULE_7__) if(["default","binToHex","flattenBinArray","hexToBin","isHex","range","splitEvery","swapEndianness","binStringToBin","binToBinString","isBinString","BaseConversionError","base58ToBin","binToBase58","bitcoinBase58Alphabet","createBaseConverter","base64ToBin","binToBase64","isBase64","bigIntToBinUint256BEClamped","bigIntToBinUint64LE","bigIntToBinUint64LEClamped","bigIntToBinUintLE","bigIntToBitcoinVarInt","binToBigIntUint256BE","binToBigIntUint64LE","binToBigIntUintBE","binToBigIntUintLE","binToFixedLength","binToNumberUint16LE","binToNumberUint32LE","binToNumberUintLE","numberToBinInt32TwosCompliment","numberToBinUint16BE","numberToBinUint16LE","numberToBinUint16LEClamped","numberToBinUint32BE","numberToBinUint32LE","numberToBinUint32LEClamped","numberToBinUintLE","readBitcoinVarInt","varIntPrefixToSize","sortObjectKeys","stringify","stringifyTestVector","LocktimeError","dateToLocktime","dateToLocktimeBin","locktimeToDate","maximumLocktimeDate","maximumLocktimeTimestamp","minimumLocktimeDate","minimumLocktimeTimestamp","parseLocktimeBin"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _type_utils__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _utf8__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utf8 */ "./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js");









//# sourceMappingURL=format.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/hex.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export binToHex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export flattenBinArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hexToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isHex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] */
/*! export splitEvery [provided] [no usage info] [missing usage info prevents renaming] */
/*! export swapEndianness [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "range": () => /* binding */ range,
/* harmony export */   "splitEvery": () => /* binding */ splitEvery,
/* harmony export */   "hexToBin": () => /* binding */ hexToBin,
/* harmony export */   "isHex": () => /* binding */ isHex,
/* harmony export */   "binToHex": () => /* binding */ binToHex,
/* harmony export */   "swapEndianness": () => /* binding */ swapEndianness,
/* harmony export */   "flattenBinArray": () => /* binding */ flattenBinArray
/* harmony export */ });
/**
 * Returns an array of incrementing values starting at `begin` and incrementing by one for `length`.
 *
 * E.g.: `range(3)` → `[0, 1, 2]` and `range(3, 1)` → `[1, 2, 3]`
 *
 * @param length - the number of elements in the array
 * @param begin - the index at which the range starts (default: `0`)
 */
const range = (length, begin = 0) => Array.from({ length }, (_, index) => begin + index);
/**
 * Split a string into an array of `chunkLength` strings. The final string may have a length between 1 and `chunkLength`.
 *
 * E.g.: `splitEvery('abcde', 2)` → `['ab', 'cd', 'e']`
 */
const splitEvery = (input, chunkLength) => range(Math.ceil(input.length / chunkLength))
    .map((index) => index * chunkLength)
    .map((begin) => input.slice(begin, begin + chunkLength));
const hexByteWidth = 2;
const hexadecimal = 16;
/**
 * Decode a hexadecimal-encoded string into a Uint8Array.
 *
 * E.g.: `hexToBin('2a64ff')` → `new Uint8Array([42, 100, 255])`
 *
 * Note, this method always completes. If `validHex` is not divisible by 2,
 * the final byte will be parsed as if it were prepended with a `0` (e.g. `aaa`
 * is interpreted as `aa0a`). If `validHex` is potentially malformed, check
 * it with `isHex` before calling this method.
 *
 * @param validHex - a string of valid, hexadecimal-encoded data
 */
const hexToBin = (validHex) => Uint8Array.from(splitEvery(validHex, hexByteWidth).map((byte) => parseInt(byte, hexadecimal)));
/**
 * For use before `hexToBin`. Returns true if the provided string is valid
 * hexadecimal (length is divisible by 2, only uses hexadecimal characters).
 * @param maybeHex - a string to test
 */
const isHex = (maybeHex) => maybeHex.length % hexByteWidth === 0 && !/[^a-fA-F0-9]/u.test(maybeHex);
/**
 * Encode a Uint8Array into a hexadecimal-encoded string.
 *
 * E.g.: `binToHex(new Uint8Array([42, 100, 255]))` → `'2a64ff'`
 *
 * @param bytes - a Uint8Array to encode
 */
const binToHex = (bytes) => bytes.reduce((str, byte) => str + byte.toString(hexadecimal).padStart(hexByteWidth, '0'), '');
/**
 * Decode a hexadecimal-encoded string into bytes, reverse it, then re-encode.
 *
 * @param validHex - a string of valid, hexadecimal-encoded data. See
 * `hexToBin` for more information.
 */
const swapEndianness = (validHex) => binToHex(hexToBin(validHex).reverse());
/**
 * Reduce an array of `Uint8Array`s into a single `Uint8Array`.
 * @param array - the array of `Uint8Array`s to flatten
 */
const flattenBinArray = (array) => {
    const totalLength = array.reduce((total, bin) => total + bin.length, 0);
    const flattened = new Uint8Array(totalLength);
    // eslint-disable-next-line functional/no-expression-statement
    array.reduce((index, bin) => {
        // eslint-disable-next-line functional/no-expression-statement
        flattened.set(bin, index);
        return index + bin.length;
    }, 0);
    return flattened;
};
//# sourceMappingURL=hex.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/log.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/log.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export sortObjectKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringifyTestVector [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringify": () => /* binding */ stringify,
/* harmony export */   "sortObjectKeys": () => /* binding */ sortObjectKeys,
/* harmony export */   "stringifyTestVector": () => /* binding */ stringifyTestVector
/* harmony export */ });
/* harmony import */ var _hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");

const defaultStringifySpacing = 2;
/**
 * A safe method to `JSON.stringify` a value, useful for debugging and logging
 * purposes.
 *
 * @remarks
 * Without modifications, `JSON.stringify` has several shortcomings in
 * debugging and logging usage:
 * - throws when serializing anything containing a `bigint`
 * - `Uint8Array`s are often serialized in base 10 with newlines between each
 *   index item
 * - `functions` and `symbols` are not clearly marked
 *
 * This method is more helpful in these cases:
 * - `bigint`: `0n` → `<bigint: 0n>`
 * - `Uint8Array`: `Uint8Array.of(0,0)` → `<Uint8Array: 0x0000>`
 * - `function`: `(x) => x * 2` → `<function: (x) => x * 2>`
 * - `symbol`: `Symbol(A)` → `<symbol: Symbol(A)>`
 *
 * @param value - the data to serialize
 * @param spacing - the number of spaces to use in
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const stringify = (value, spacing = defaultStringifySpacing) => JSON.stringify(value, 
// eslint-disable-next-line complexity
(_, item) => {
    const type = typeof item;
    const name = typeof item === 'object' && item !== null
        ? item.constructor.name
        : type;
    switch (name) {
        case 'Uint8Array':
            return `<Uint8Array: 0x${(0,_hex__WEBPACK_IMPORTED_MODULE_0__.binToHex)(item)}>`;
        case 'bigint':
            return `<bigint: ${item.toString()}n>`;
        case 'function':
        case 'symbol':
            // eslint-disable-next-line @typescript-eslint/ban-types
            return `<${name}: ${item.toString()}>`;
        default:
            return item;
    }
}, spacing);
/**
 * Given a value, recursively sort the keys of all objects it references
 * (without sorting arrays).
 *
 * @param objectOrArray - the object or array in which to sort object keys
 */
const sortObjectKeys = (objectOrArray
// eslint-disable-next-line @typescript-eslint/no-explicit-any
) => {
    if (Array.isArray(objectOrArray)) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return objectOrArray.map(sortObjectKeys);
    }
    if (typeof objectOrArray !== 'object' ||
        objectOrArray === null ||
        objectOrArray.constructor.name !== 'Object') {
        return objectOrArray;
    }
    // eslint-disable-next-line functional/immutable-data
    const keys = Object.keys(objectOrArray).sort((a, b) => a.localeCompare(b));
    return keys.reduce((all, key) => ({
        ...all,
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        [key]: sortObjectKeys(objectOrArray[key]),
    }), {});
};
const uint8ArrayRegex = /"<Uint8Array: 0x(?<hex>[0-9a-f]*)>"/gu;
const bigIntRegex = /"<bigint: (?<bigint>[0-9]*)n>"/gu;
/**
 * An alternative to `stringify` which produces valid JavaScript for use as a
 * test vector in this library. `Uint8Array`s are constructed using `hexToBin`
 * and `bigint` values use the `BigInt` constructor. If `alphabetize` is `true`,
 * all objects will be sorted in the output.
 *
 * Note, this assumes all strings which match the expected regular expressions
 * are values of type `Uint8Array` and `bigint` respectively. String values
 * which otherwise happen to match these regular expressions will be converted
 * incorrectly.
 *
 * @param stringified - the result of `stringify`
 */
const stringifyTestVector = (
// eslint-disable-next-line @typescript-eslint/no-explicit-any
value, alphabetize = true) => {
    const stringified = alphabetize
        ? stringify(sortObjectKeys(value))
        : stringify(value);
    return stringified
        .replace(uint8ArrayRegex, "hexToBin('$1')")
        .replace(bigIntRegex, "BigInt('$1')");
};
//# sourceMappingURL=log.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export bigIntToBinUint256BEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBinUint64LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBinUint64LEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUint256BE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUint64LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUintBE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToBigIntUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToFixedLength [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToNumberUint16LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToNumberUint32LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binToNumberUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinInt32TwosCompliment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint16BE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint16LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint16LEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint32BE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint32LE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUint32LEClamped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export numberToBinUintLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readBitcoinVarInt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export varIntPrefixToSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "numberToBinUintLE": () => /* binding */ numberToBinUintLE,
/* harmony export */   "binToFixedLength": () => /* binding */ binToFixedLength,
/* harmony export */   "numberToBinUint16LEClamped": () => /* binding */ numberToBinUint16LEClamped,
/* harmony export */   "numberToBinUint32LEClamped": () => /* binding */ numberToBinUint32LEClamped,
/* harmony export */   "numberToBinUint16LE": () => /* binding */ numberToBinUint16LE,
/* harmony export */   "numberToBinUint16BE": () => /* binding */ numberToBinUint16BE,
/* harmony export */   "numberToBinUint32LE": () => /* binding */ numberToBinUint32LE,
/* harmony export */   "numberToBinUint32BE": () => /* binding */ numberToBinUint32BE,
/* harmony export */   "bigIntToBinUintLE": () => /* binding */ bigIntToBinUintLE,
/* harmony export */   "bigIntToBinUint64LEClamped": () => /* binding */ bigIntToBinUint64LEClamped,
/* harmony export */   "bigIntToBinUint64LE": () => /* binding */ bigIntToBinUint64LE,
/* harmony export */   "numberToBinInt32TwosCompliment": () => /* binding */ numberToBinInt32TwosCompliment,
/* harmony export */   "binToNumberUintLE": () => /* binding */ binToNumberUintLE,
/* harmony export */   "binToNumberUint16LE": () => /* binding */ binToNumberUint16LE,
/* harmony export */   "binToNumberUint32LE": () => /* binding */ binToNumberUint32LE,
/* harmony export */   "binToBigIntUintBE": () => /* binding */ binToBigIntUintBE,
/* harmony export */   "binToBigIntUint256BE": () => /* binding */ binToBigIntUint256BE,
/* harmony export */   "bigIntToBinUint256BEClamped": () => /* binding */ bigIntToBinUint256BEClamped,
/* harmony export */   "binToBigIntUintLE": () => /* binding */ binToBigIntUintLE,
/* harmony export */   "binToBigIntUint64LE": () => /* binding */ binToBigIntUint64LE,
/* harmony export */   "varIntPrefixToSize": () => /* binding */ varIntPrefixToSize,
/* harmony export */   "readBitcoinVarInt": () => /* binding */ readBitcoinVarInt,
/* harmony export */   "bigIntToBitcoinVarInt": () => /* binding */ bigIntToBitcoinVarInt
/* harmony export */ });
/**
 * Encode a positive integer as a little-endian Uint8Array. For values exceeding
 * `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use `bigIntToBinUintLE`.
 * Negative values will return the same result as `0`.
 *
 * @param value - the number to encode
 */
const numberToBinUintLE = (value) => {
    const baseUint8Array = 256;
    const result = [];
    // eslint-disable-next-line functional/no-let
    let remaining = value;
    // eslint-disable-next-line functional/no-loop-statement
    while (remaining >= baseUint8Array) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(remaining % baseUint8Array);
        // eslint-disable-next-line functional/no-expression-statement
        remaining = Math.floor(remaining / baseUint8Array);
    }
    // eslint-disable-next-line functional/no-conditional-statement, functional/no-expression-statement, functional/immutable-data
    if (remaining > 0)
        result.push(remaining);
    return Uint8Array.from(result);
};
/**
 * Fill a new Uint8Array of a specific byte-length with the contents of a given
 * Uint8Array, truncating or padding the Uint8Array with zeros.
 *
 * @param bin - the Uint8Array to resize
 * @param bytes - the desired byte-length
 */
const binToFixedLength = (bin, bytes) => {
    const fixedBytes = new Uint8Array(bytes);
    const maxValue = 255;
    // eslint-disable-next-line functional/no-expression-statement
    bin.length > bytes ? fixedBytes.fill(maxValue) : fixedBytes.set(bin);
    // TODO: re-enable eslint-disable-next-line @typescript-eslint/no-unused-expressions
    return fixedBytes;
};
/**
 * Encode a positive integer as a 2-byte Uint16LE Uint8Array, clamping the
 * results. (Values exceeding `0xffff` return the same result as `0xffff`,
 * negative values will return the same result as `0`.)
 *
 * @param value - the number to encode
 */
const numberToBinUint16LEClamped = (value) => {
    const uint16 = 2;
    return binToFixedLength(numberToBinUintLE(value), uint16);
};
/**
 * Encode a positive integer as a 4-byte Uint32LE Uint8Array, clamping the
 * results. (Values exceeding `0xffffffff` return the same result as
 * `0xffffffff`, negative values will return the same result as `0`.)
 *
 * @param value - the number to encode
 */
const numberToBinUint32LEClamped = (value) => {
    const uint32 = 4;
    return binToFixedLength(numberToBinUintLE(value), uint32);
};
/**
 * Encode a positive integer as a 2-byte Uint16LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint16LE = (value) => {
    const uint16Length = 2;
    const bin = new Uint8Array(uint16Length);
    const writeAsLittleEndian = true;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint16(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive integer as a 2-byte Uint16LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint16BE = (value) => {
    const uint16Length = 2;
    const bin = new Uint8Array(uint16Length);
    const writeAsLittleEndian = false;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint16(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive number as a 4-byte Uint32LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffffffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint32LE = (value) => {
    const uint32Length = 4;
    const bin = new Uint8Array(uint32Length);
    const writeAsLittleEndian = true;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint32(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive number as a 4-byte Uint32BE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffffffff`.
 *
 * @param value - the number to encode
 */
const numberToBinUint32BE = (value) => {
    const uint32Length = 4;
    const bin = new Uint8Array(uint32Length);
    const writeAsLittleEndian = false;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setUint32(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode a positive BigInt as little-endian Uint8Array. Negative values will
 * return the same result as `0`.
 *
 * @param value - the number to encode
 */
const bigIntToBinUintLE = (value) => {
    const baseUint8Array = 256;
    const base = BigInt(baseUint8Array);
    const result = [];
    // eslint-disable-next-line functional/no-let
    let remaining = value;
    // eslint-disable-next-line functional/no-loop-statement
    while (remaining >= base) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(Number(remaining % base));
        // eslint-disable-next-line functional/no-expression-statement
        remaining /= base;
    }
    // eslint-disable-next-line functional/no-conditional-statement, functional/no-expression-statement, functional/immutable-data
    if (remaining > BigInt(0))
        result.push(Number(remaining));
    return Uint8Array.from(result.length > 0 ? result : [0]);
};
/**
 * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array, clamping the
 * results. (Values exceeding `0xffff_ffff_ffff_ffff` return the same result as
 * `0xffff_ffff_ffff_ffff`, negative values return the same result as `0`.)
 *
 * @param value - the number to encode
 */
const bigIntToBinUint64LEClamped = (value) => {
    const uint64 = 8;
    return binToFixedLength(bigIntToBinUintLE(value), uint64);
};
/**
 * Encode a positive BigInt as an 8-byte Uint64LE Uint8Array.
 *
 * This method will return an incorrect result for values outside of the range
 * `0` to `0xffff_ffff_ffff_ffff`.
 *
 * @param value - the number to encode
 */
const bigIntToBinUint64LE = (value) => {
    const uint64Length = 8;
    const bin = new Uint8Array(uint64Length);
    const writeAsLittleEndian = true;
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    // eslint-disable-next-line functional/no-expression-statement
    view.setBigUint64(0, value, writeAsLittleEndian);
    return bin;
};
/**
 * Encode an integer as a 4-byte, little-endian Uint8Array using the number's
 * two's compliment representation (the format used by JavaScript's bitwise
 * operators).
 *
 * @remarks
 * The C++ bitcoin implementations sometimes represent short vectors using
 * signed 32-bit integers (e.g. `sighashType`). This method can be used to test
 * compatibility with those implementations.
 *
 * @param value - the number to encode
 */
const numberToBinInt32TwosCompliment = (value) => {
    const bytes = 4;
    const bitsInAByte = 8;
    const bin = new Uint8Array(bytes);
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let offset = 0; offset < bytes; offset++) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        bin[offset] = value;
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, no-param-reassign
        value >>>= bitsInAByte;
    }
    return bin;
};
/**
 * Decode a little-endian Uint8Array of any length into a number. For numbers
 * larger than `Number.MAX_SAFE_INTEGER` (`9007199254740991`), use
 * `binToBigIntUintLE`.
 *
 * The `bytes` parameter can be set to constrain the expected length (default:
 * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.
 *
 * @privateRemarks
 * We avoid a bitwise strategy here because JavaScript uses 32-bit signed
 * integers for bitwise math, so larger numbers are converted incorrectly. E.g.
 * `2147483648 << 8` is `0`, while `2147483648n << 8n` is `549755813888n`.
 *
 * @param bin - the Uint8Array to decode
 * @param bytes - the number of bytes to read (default: `bin.length`)
 */
const binToNumberUintLE = (bin, bytes = bin.length) => {
    const base = 2;
    const bitsInAByte = 8;
    // eslint-disable-next-line functional/no-conditional-statement
    if (bin.length !== bytes) {
        // eslint-disable-next-line functional/no-throw-statement
        throw new TypeError(`Bin length must be ${bytes}.`);
    }
    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce((accumulated, byte, i) => accumulated + byte * base ** (bitsInAByte * i), 0);
};
/**
 * Decode a 2-byte Uint16LE Uint8Array into a number.
 *
 * Throws if `bin` is shorter than 2 bytes.
 *
 * @param bin - the Uint8Array to decode
 */
const binToNumberUint16LE = (bin) => {
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    const readAsLittleEndian = true;
    return view.getUint16(0, readAsLittleEndian);
};
/**
 * Decode a 4-byte Uint32LE Uint8Array into a number.
 *
 * Throws if `bin` is shorter than 4 bytes.
 *
 * @param bin - the Uint8Array to decode
 */
const binToNumberUint32LE = (bin) => {
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    const readAsLittleEndian = true;
    return view.getUint32(0, readAsLittleEndian);
};
/**
 * Decode a big-endian Uint8Array of any length into a BigInt. If starting from
 * a hex value, consider using the BigInt constructor instead:
 * ```
 * BigInt(`0x${hex}`)
 * ```
 *
 * The `bytes` parameter can be set to constrain the expected length (default:
 * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.
 *
 * @param bin - the Uint8Array to decode
 * @param bytes - the number of bytes to read (default: `bin.length`)
 */
const binToBigIntUintBE = (bin, bytes = bin.length) => {
    const bitsInAByte = 8;
    const shift = BigInt(bitsInAByte);
    // eslint-disable-next-line functional/no-conditional-statement
    if (bin.length !== bytes) {
        // eslint-disable-next-line functional/no-throw-statement
        throw new TypeError(`Bin length must be ${bytes}.`);
    }
    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduce(
    // eslint-disable-next-line no-bitwise
    (accumulated, byte) => (accumulated << shift) | BigInt(byte), BigInt(0));
};
/**
 * Decode an unsigned, 32-byte big-endian Uint8Array into a BigInt. This can be
 * used to decode Uint8Array-encoded cryptographic primitives like private
 * keys, public keys, curve parameters, and signature points.
 *
 * If starting from a hex value, consider using the BigInt constructor instead:
 * ```
 * BigInt(`0x${hex}`)
 * ```
 * @param bin - the Uint8Array to decode
 */
const binToBigIntUint256BE = (bin) => {
    const uint256Bytes = 32;
    return binToBigIntUintBE(bin, uint256Bytes);
};
/**
 * Encode a positive BigInt into an unsigned 32-byte big-endian Uint8Array. This
 * can be used to encoded numbers for cryptographic primitives like private
 * keys, public keys, curve parameters, and signature points.
 *
 * Negative values will return the same result as `0`, values higher than
 * 2^256-1 will return the maximum expressible unsigned 256-bit value
 * (`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff`).
 *
 * @param value - the BigInt to encode
 */
const bigIntToBinUint256BEClamped = (value) => {
    const uint256Bytes = 32;
    return binToFixedLength(bigIntToBinUintLE(value), uint256Bytes).reverse();
};
/**
 * Decode a little-endian Uint8Array of any length into a BigInt.
 *
 * The `bytes` parameter can be set to constrain the expected length (default:
 * `bin.length`). This method throws if `bin.length` is not equal to `bytes`.
 *
 * @param bin - the Uint8Array to decode
 * @param bytes - the number of bytes to read (default: `bin.length`)
 */
const binToBigIntUintLE = (bin, bytes = bin.length) => {
    const bitsInAByte = 8;
    // eslint-disable-next-line functional/no-conditional-statement
    if (bin.length !== bytes) {
        // eslint-disable-next-line functional/no-throw-statement
        throw new TypeError(`Bin length must be ${bytes}.`);
    }
    return new Uint8Array(bin.buffer, bin.byteOffset, bin.length).reduceRight(
    // eslint-disable-next-line no-bitwise
    (accumulated, byte) => (accumulated << BigInt(bitsInAByte)) | BigInt(byte), BigInt(0));
};
/**
 * Decode an 8-byte Uint64LE Uint8Array into a BigInt.
 *
 * Throws if `bin` is shorter than 8 bytes.
 *
 * @param bin - the Uint8Array to decode
 */
const binToBigIntUint64LE = (bin) => {
    const view = new DataView(bin.buffer, bin.byteOffset, bin.byteLength);
    const readAsLittleEndian = true;
    return view.getBigUint64(0, readAsLittleEndian);
};
/**
 * Get the expected byte length of a Bitcoin VarInt given a first byte.
 *
 * @param firstByte - the first byte of the VarInt
 */
const varIntPrefixToSize = (firstByte) => {
    const uint8 = 1;
    const uint16 = 2;
    const uint32 = 4;
    const uint64 = 8;
    switch (firstByte) {
        case 253 /* uint16Prefix */:
            return uint16 + 1;
        case 254 /* uint32Prefix */:
            return uint32 + 1;
        case 255 /* uint64Prefix */:
            return uint64 + 1;
        default:
            return uint8;
    }
};
/**
 * Read a Bitcoin VarInt (Variable-length integer) from a Uint8Array, returning
 * the `nextOffset` after the VarInt and the value as a BigInt.
 *
 * @param bin - the Uint8Array from which to read the VarInt
 * @param offset - the offset at which the VarInt begins
 */
const readBitcoinVarInt = (bin, offset = 0) => {
    const bytes = varIntPrefixToSize(bin[offset]);
    const hasPrefix = bytes !== 1;
    return {
        nextOffset: offset + bytes,
        value: hasPrefix
            ? binToBigIntUintLE(bin.subarray(offset + 1, offset + bytes), bytes - 1)
            : binToBigIntUintLE(bin.subarray(offset, offset + bytes), 1),
    };
};
/**
 * Encode a positive BigInt as a Bitcoin VarInt (Variable-length integer).
 *
 * Note: the maximum value of a Bitcoin VarInt is `0xffff_ffff_ffff_ffff`. This
 * method will return an incorrect result for values outside of the range `0` to
 * `0xffff_ffff_ffff_ffff`.
 *
 * @param value - the BigInt to encode (no larger than `0xffff_ffff_ffff_ffff`)
 */
const bigIntToBitcoinVarInt = (value) => value <= BigInt(252 /* uint8MaxValue */)
    ? Uint8Array.of(Number(value))
    : value <= BigInt(65535 /* uint16MaxValue */)
        ? Uint8Array.from([
            253 /* uint16Prefix */,
            ...numberToBinUint16LE(Number(value)),
        ])
        : value <= BigInt(4294967295 /* uint32MaxValue */)
            ? Uint8Array.from([
                254 /* uint32Prefix */,
                ...numberToBinUint32LE(Number(value)),
            ])
            : Uint8Array.from([255 /* uint64Prefix */, ...bigIntToBinUint64LE(value)]);
//# sourceMappingURL=numbers.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/time.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/time.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export LocktimeError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dateToLocktime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dateToLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export locktimeToDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumLocktimeDate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumLocktimeTimestamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseLocktimeBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "minimumLocktimeTimestamp": () => /* binding */ minimumLocktimeTimestamp,
/* harmony export */   "maximumLocktimeTimestamp": () => /* binding */ maximumLocktimeTimestamp,
/* harmony export */   "minimumLocktimeDate": () => /* binding */ minimumLocktimeDate,
/* harmony export */   "maximumLocktimeDate": () => /* binding */ maximumLocktimeDate,
/* harmony export */   "LocktimeError": () => /* binding */ LocktimeError,
/* harmony export */   "dateToLocktime": () => /* binding */ dateToLocktime,
/* harmony export */   "locktimeToDate": () => /* binding */ locktimeToDate,
/* harmony export */   "dateToLocktimeBin": () => /* binding */ dateToLocktimeBin,
/* harmony export */   "parseLocktimeBin": () => /* binding */ parseLocktimeBin
/* harmony export */ });
/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");

const msPerLocktimeSecond = 1000;
/**
 * The minimum Unix timestamp (inclusive) which can be encoded by a
 * transaction's `locktime`.
 */
const minimumLocktimeTimestamp = 500000000;
/**
 * The maximum Unix timestamp (inclusive) which can be encoded by a
 * transaction's `locktime`.
 */
const maximumLocktimeTimestamp = 0xffffffff;
/**
 * The minimum Date (inclusive) which can be encoded by a transaction's
 * `locktime`.
 */
const minimumLocktimeDate = new Date(minimumLocktimeTimestamp * msPerLocktimeSecond);
/**
 * The maximum Date (inclusive) which can be encoded by a transaction's
 * `locktime`.
 */
const maximumLocktimeDate = new Date(maximumLocktimeTimestamp * msPerLocktimeSecond);
var LocktimeError;
(function (LocktimeError) {
    LocktimeError["dateOutOfRange"] = "The provided Date is outside of the range which can be encoded in locktime.";
    LocktimeError["locktimeOutOfRange"] = "The provided locktime is outside of the range which can be encoded as a Date (greater than or equal to 500000000 and less than or equal to 4294967295).";
    LocktimeError["incorrectLength"] = "The provided locktime is not the correct length (4 bytes).";
})(LocktimeError || (LocktimeError = {}));
/**
 * Convert a JavaScript `Date` object to its equivalent transaction `locktime`
 * representation. The `date` is rounded to the nearest second (the precision of
 * `locktime` Dates).
 *
 * Note, a locktime values greater than or equal to `500000000`
 * See `Transaction.locktime` for details.
 *
 * @param date - the Date to convert to a locktime number
 */
const dateToLocktime = (date) => date < minimumLocktimeDate || date > maximumLocktimeDate
    ? LocktimeError.dateOutOfRange
    : Math.round(date.getTime() / msPerLocktimeSecond);
/**
 * Convert a transaction `locktime` to its equivalent JavaScript `Date` object.
 * If locktime is outside the possible range (greater than or equal to
 * `500000000` and less than or equal to `4294967295`), an error message is
 * returned.
 *
 * @param locktime - a positive integer between `500000000` and `4294967295`,
 * inclusive
 */
const locktimeToDate = (locktime) => locktime < minimumLocktimeTimestamp || locktime > maximumLocktimeTimestamp
    ? LocktimeError.locktimeOutOfRange
    : new Date(locktime * msPerLocktimeSecond);
/**
 * Convert a JavaScript `Date` object to its equivalent transaction `locktime`
 * bytecode representation. The `date` is rounded to the nearest second (the
 * precision of `locktime` Dates).
 *
 * Note: a block-based locktime can simply be encoded with `numberToBinUint32LE`
 * (provided it is no larger than the maximum, `499999999`).
 *
 * @param date - the Date to convert to a locktime Uint8Array
 */
const dateToLocktimeBin = (date) => {
    const result = dateToLocktime(date);
    return typeof result === 'string' ? result : (0,_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(result);
};
const locktimeByteLength = 4;
/**
 * Parse a locktime, returning a `number` for block heights, a `Date` for block
 * times, or a string for parsing errors.
 *
 * @param bin - the 4-byte Uint8Array locktime to parse
 */
const parseLocktimeBin = (bin) => {
    if (bin.length !== locktimeByteLength)
        return LocktimeError.incorrectLength;
    const parsed = (0,_numbers__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin);
    return parsed >= minimumLocktimeTimestamp
        ? new Date(parsed * msPerLocktimeSecond)
        : parsed;
};
//# sourceMappingURL=time.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/type-utils.js ***!
  \*****************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/*
 * const canBeAssigned: Immutable<Uint8Array> = Uint8Array.of(0, 0);
 * const canBeSpread = [...canBeAssigned];
 * const spreadResultWorks = Uint8Array.from(canBeSpread);
 * const functionRequiringIt = (bin: Immutable<Uint8Array>) => bin;
 * const canAcceptNonMutable = functionRequiringIt(Uint8Array.of());
 */
//# sourceMappingURL=type-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export binToUtf8 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export utf8ToBin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "utf8ToBin": () => /* binding */ utf8ToBin,
/* harmony export */   "binToUtf8": () => /* binding */ binToUtf8
/* harmony export */ });
/**
 * This implementations is derived from:
 * https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js
 *
 * Copyright 2008 The Closure Library Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* eslint-disable complexity, functional/no-let, functional/immutable-data, no-bitwise, @typescript-eslint/no-magic-numbers, functional/no-expression-statement, functional/no-conditional-statement, functional/no-loop-statement, no-plusplus */
/**
 * Interpret a string as UTF-8 and encode it as a Uint8Array.
 * @param utf8 - the string to encode
 */
const utf8ToBin = (utf8) => {
    const out = [];
    let p = 0;
    for (let i = 0; i < utf8.length; i++) {
        let c = utf8.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < utf8.length &&
            (utf8.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            c = ((c & 0x03ff) << 10) + 0x10000 + (utf8.charCodeAt((i += 1)) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return new Uint8Array(out);
};
/**
 * Decode a Uint8Array as a UTF-8 string.
 * @param bytes - the Uint8Array to decode
 */
const binToUtf8 = (bytes) => {
    const out = [];
    let pos = 0;
    let c = 0;
    while (pos < bytes.length) {
        const c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            const c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            const c2 = bytes[pos++];
            const c3 = bytes[pos++];
            const c4 = bytes[pos++];
            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode((u >> 10) + 0xd800);
            out[c++] = String.fromCharCode((u & 1023) + 0xdc00);
        }
        else {
            const c2 = bytes[pos++];
            const c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
//# sourceMappingURL=utf8.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export HdKeyDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export HdKeyVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export HdNodeCrackingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export HdNodeDerivationError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeHdKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPrivateNodeChild [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPrivateNodeFromSeed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPrivateNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPublicNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPublicNodeChild [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPublicNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instantiateBIP32Crypto [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "instantiateBIP32Crypto": () => /* binding */ instantiateBIP32Crypto,
/* harmony export */   "deriveHdPrivateNodeFromSeed": () => /* binding */ deriveHdPrivateNodeFromSeed,
/* harmony export */   "deriveHdPrivateNodeIdentifier": () => /* binding */ deriveHdPrivateNodeIdentifier,
/* harmony export */   "deriveHdPublicNodeIdentifier": () => /* binding */ deriveHdPublicNodeIdentifier,
/* harmony export */   "HdKeyVersion": () => /* binding */ HdKeyVersion,
/* harmony export */   "HdKeyDecodingError": () => /* binding */ HdKeyDecodingError,
/* harmony export */   "decodeHdKey": () => /* binding */ decodeHdKey,
/* harmony export */   "decodeHdPrivateKey": () => /* binding */ decodeHdPrivateKey,
/* harmony export */   "decodeHdPublicKey": () => /* binding */ decodeHdPublicKey,
/* harmony export */   "encodeHdPrivateKey": () => /* binding */ encodeHdPrivateKey,
/* harmony export */   "encodeHdPublicKey": () => /* binding */ encodeHdPublicKey,
/* harmony export */   "deriveHdPublicNode": () => /* binding */ deriveHdPublicNode,
/* harmony export */   "HdNodeDerivationError": () => /* binding */ HdNodeDerivationError,
/* harmony export */   "deriveHdPrivateNodeChild": () => /* binding */ deriveHdPrivateNodeChild,
/* harmony export */   "deriveHdPublicNodeChild": () => /* binding */ deriveHdPublicNodeChild,
/* harmony export */   "deriveHdPath": () => /* binding */ deriveHdPath,
/* harmony export */   "HdNodeCrackingError": () => /* binding */ HdNodeCrackingError,
/* harmony export */   "crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode": () => /* binding */ crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode
/* harmony export */ });
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _crypto_hmac__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/hmac */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/hmac.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _format_utf8__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../format/utf8 */ "./node_modules/@bitauth/libauth/build/module/lib/format/utf8.js");
/* harmony import */ var _key_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./key-utils */ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js");





/**
 * Instantiate an object containing WASM implementations of each cryptographic
 * algorithm required by BIP32 utilities in this library.
 *
 * These WASM implementations provide optimal performance across every
 * JavaScript runtime, but depending on your application, you may prefer to
 * instantiate native implementations such as those provided by Node.js or the
 * `crypto.subtle` API (to reduce bundle size) or an external module (for
 * synchronous instantiation).
 */
const instantiateBIP32Crypto = async () => {
    const [ripemd160, secp256k1, sha256, sha512] = await Promise.all([
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateRipemd160)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha256)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha512)(),
    ]);
    return { ripemd160, secp256k1, sha256, sha512 };
};
const bip32HmacSha512Key = (0,_format_utf8__WEBPACK_IMPORTED_MODULE_3__.utf8ToBin)('Bitcoin seed');
const halfHmacSha512Length = 32;
/**
 * Derive an `HdPrivateNode` from the provided seed following the BIP32
 * specification. A seed should include between 16 bytes and 64 bytes of
 * entropy (recommended: 32 bytes).
 *
 * @param crypto - an implementation of sha512
 * @param seed - the entropy from which to derive the `HdPrivateNode`
 * @param assumeValidity - if set, the derived private key will not be checked
 * for validity, and will be assumed valid if `true` or invalid if `false` (this
 * is useful for testing)
 */
const deriveHdPrivateNodeFromSeed = (crypto, seed, assumeValidity) => {
    const mac = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, bip32HmacSha512Key, seed);
    const privateKey = mac.slice(0, halfHmacSha512Length);
    const chainCode = mac.slice(halfHmacSha512Length);
    const depth = 0;
    const childIndex = 0;
    const parentFingerprint = Uint8Array.from([0, 0, 0, 0]);
    const valid = assumeValidity ?? (0,_key_utils__WEBPACK_IMPORTED_MODULE_4__.validateSecp256k1PrivateKey)(privateKey);
    return (valid
        ? { chainCode, childIndex, depth, parentFingerprint, privateKey, valid }
        : {
            chainCode,
            childIndex,
            depth,
            invalidPrivateKey: privateKey,
            parentFingerprint,
            valid,
        });
};
/**
 * Derive the public identifier for a given HD private node. This is used to
 * uniquely identify HD nodes in software. The first 4 bytes of this identifier
 * are considered its "fingerprint".
 *
 * @param crypto - implementations of sha256, ripemd160, and secp256k1
 * compressed public key derivation
 * @param hdPrivateNode - the HD private node from which to derive the public
 * identifier (not require to be valid)
 */
const deriveHdPrivateNodeIdentifier = (crypto, hdPrivateNode) => crypto.ripemd160.hash(crypto.sha256.hash(crypto.secp256k1.derivePublicKeyCompressed(hdPrivateNode.privateKey)));
/**
 * Derive the public identifier for a given `HdPublicNode`. This is used to
 * uniquely identify HD nodes in software. The first 4 bytes of this identifier
 * are considered its fingerprint.
 *
 * @param crypto - implementations of sha256 and ripemd160
 */
const deriveHdPublicNodeIdentifier = (crypto, node) => crypto.ripemd160.hash(crypto.sha256.hash(node.publicKey));
/**
 * The 4-byte version indicating the network and type of an `HdPrivateKey` or
 * `HdPublicKey`.
 */
var HdKeyVersion;
(function (HdKeyVersion) {
    /**
     * Version indicating the HD key is an `HdPrivateKey` intended for use on the
     * main network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `xprv`.
     *
     * Hex: `0x0488ade4`
     */
    HdKeyVersion[HdKeyVersion["mainnetPrivateKey"] = 76066276] = "mainnetPrivateKey";
    /**
     * Version indicating the HD key is an `HdPublicKey` intended for use on the
     * main network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `xpub`.
     *
     * Hex: `0x0488b21e`
     */
    HdKeyVersion[HdKeyVersion["mainnetPublicKey"] = 76067358] = "mainnetPublicKey";
    /**
     * Version indicating the HD key is an `HdPrivateKey` intended for use on the
     * test network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `tprv`.
     *
     * Hex: `0x04358394`
     */
    HdKeyVersion[HdKeyVersion["testnetPrivateKey"] = 70615956] = "testnetPrivateKey";
    /**
     * Version indicating the HD key is an `HdPublicKey` intended for use on the
     * test network. Base58 encoding at the expected length of an HD key results
     * in a prefix of `tpub`.
     *
     * Hex: `0x043587cf`
     */
    HdKeyVersion[HdKeyVersion["testnetPublicKey"] = 70617039] = "testnetPublicKey";
})(HdKeyVersion || (HdKeyVersion = {}));
/**
 * An error in the decoding of an HD public or private key.
 */
var HdKeyDecodingError;
(function (HdKeyDecodingError) {
    HdKeyDecodingError["incorrectLength"] = "HD key decoding error: length is incorrect (must encode 82 bytes).";
    HdKeyDecodingError["invalidChecksum"] = "HD key decoding error: checksum is invalid.";
    HdKeyDecodingError["invalidPrivateNode"] = "HD key decoding error: the key for this HD private node is not a valid Secp256k1 private key.";
    HdKeyDecodingError["missingPrivateKeyPaddingByte"] = "HD key decoding error: version indicates a private key, but the key data is missing a padding byte.";
    HdKeyDecodingError["privateKeyExpected"] = "HD key decoding error: expected an HD private key, but encountered an HD public key.";
    HdKeyDecodingError["publicKeyExpected"] = "HD key decoding error: expected an HD public key, but encountered an HD private key.";
    HdKeyDecodingError["unknownCharacter"] = "HD key decoding error: key includes a non-base58 character.";
    HdKeyDecodingError["unknownVersion"] = "HD key decoding error: key uses an unknown version.";
})(HdKeyDecodingError || (HdKeyDecodingError = {}));
/**
 * Decode an HD private key as defined by BIP32, returning a `node` and a
 * `network`. Decoding errors are returned as strings.
 *
 * If the type of the key is known, use `decodeHdPrivateKey` or
 * `decodeHdPublicKey`.
 *
 * @param crypto - an implementation of sha256
 * @param hdKey - a BIP32 HD private key or HD public key
 */
// eslint-disable-next-line complexity
const decodeHdKey = (crypto, hdKey) => {
    const decoded = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.base58ToBin)(hdKey);
    if (decoded === _format_format__WEBPACK_IMPORTED_MODULE_2__.BaseConversionError.unknownCharacter)
        return HdKeyDecodingError.unknownCharacter;
    const expectedLength = 82;
    if (decoded.length !== expectedLength)
        return HdKeyDecodingError.incorrectLength;
    const checksumIndex = 78;
    const payload = decoded.slice(0, checksumIndex);
    const checksumBits = decoded.slice(checksumIndex);
    const checksum = crypto.sha256.hash(crypto.sha256.hash(payload));
    if (!checksumBits.every((value, i) => value === checksum[i])) {
        return HdKeyDecodingError.invalidChecksum;
    }
    const depthIndex = 4;
    const fingerprintIndex = 5;
    const childIndexIndex = 9;
    const chainCodeIndex = 13;
    const keyDataIndex = 45;
    const version = new DataView(decoded.buffer, decoded.byteOffset, depthIndex).getUint32(0);
    const depth = decoded[depthIndex];
    const parentFingerprint = decoded.slice(fingerprintIndex, childIndexIndex);
    const childIndex = new DataView(decoded.buffer, decoded.byteOffset + childIndexIndex, decoded.byteOffset + chainCodeIndex).getUint32(0);
    const chainCode = decoded.slice(chainCodeIndex, keyDataIndex);
    const keyData = decoded.slice(keyDataIndex, checksumIndex);
    const isPrivateKey = version === HdKeyVersion.mainnetPrivateKey ||
        version === HdKeyVersion.testnetPrivateKey;
    if (isPrivateKey && keyData[0] !== 0x00) {
        return HdKeyDecodingError.missingPrivateKeyPaddingByte;
    }
    if (isPrivateKey) {
        const privateKey = keyData.slice(1);
        const valid = (0,_key_utils__WEBPACK_IMPORTED_MODULE_4__.validateSecp256k1PrivateKey)(privateKey);
        return {
            node: valid
                ? {
                    chainCode,
                    childIndex,
                    depth,
                    parentFingerprint,
                    privateKey,
                    valid: true,
                }
                : {
                    chainCode,
                    childIndex,
                    depth,
                    invalidPrivateKey: privateKey,
                    parentFingerprint,
                    valid: false,
                },
            version: version,
        };
    }
    const isPublicKey = version === HdKeyVersion.mainnetPublicKey ||
        version === HdKeyVersion.testnetPublicKey;
    if (!isPublicKey) {
        return HdKeyDecodingError.unknownVersion;
    }
    return {
        node: {
            chainCode,
            childIndex,
            depth,
            parentFingerprint,
            publicKey: keyData,
        },
        version: version,
    };
};
/**
 * Decode an HD private key as defined by BIP32.
 *
 * This method is similar to `decodeHdKey` but ensures that the result is a
 * valid HD private node. Decoding error messages are returned as strings.
 *
 * @param crypto - an implementation of sha256
 * @param hdPrivateKey - a BIP32 HD private key
 */
const decodeHdPrivateKey = (crypto, hdPrivateKey) => {
    const decoded = decodeHdKey(crypto, hdPrivateKey);
    if (typeof decoded === 'string')
        return decoded;
    if ('publicKey' in decoded.node) {
        return HdKeyDecodingError.privateKeyExpected;
    }
    if (!decoded.node.valid) {
        return HdKeyDecodingError.invalidPrivateNode;
    }
    if (decoded.version === HdKeyVersion.mainnetPrivateKey) {
        return {
            network: 'mainnet',
            node: decoded.node,
        };
    }
    return {
        network: 'testnet',
        node: decoded.node,
    };
};
/**
 * Decode an HD public key as defined by BIP32.
 *
 * This method is similar to `decodeHdKey` but ensures that the result is an
 * HD public node. Decoding error messages are returned as strings.
 *
 * @param crypto - an implementation of sha256
 * @param hdPublicKey - a BIP32 HD public key
 */
const decodeHdPublicKey = (crypto, hdPublicKey) => {
    const decoded = decodeHdKey(crypto, hdPublicKey);
    if (typeof decoded === 'string')
        return decoded;
    if (decoded.version === HdKeyVersion.mainnetPublicKey) {
        return {
            network: 'mainnet',
            node: decoded.node,
        };
    }
    if (decoded.version === HdKeyVersion.testnetPublicKey) {
        return {
            network: 'testnet',
            node: decoded.node,
        };
    }
    return HdKeyDecodingError.publicKeyExpected;
};
/**
 * Encode an HD private key (as defined by BIP32) given an HD private node.
 *
 * @param crypto - an implementation of sha256
 * @param keyParameters - a valid HD private node and the network for which to
 * encode the key
 */
const encodeHdPrivateKey = (crypto, keyParameters) => {
    const version = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.network === 'mainnet'
        ? HdKeyVersion.mainnetPrivateKey
        : HdKeyVersion.testnetPrivateKey);
    const depth = Uint8Array.of(keyParameters.node.depth);
    const childIndex = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.node.childIndex);
    const isPrivateKey = Uint8Array.of(0x00);
    const payload = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([
        version,
        depth,
        keyParameters.node.parentFingerprint,
        childIndex,
        keyParameters.node.chainCode,
        isPrivateKey,
        keyParameters.node.privateKey,
    ]);
    const checksumLength = 4;
    const checksum = crypto.sha256
        .hash(crypto.sha256.hash(payload))
        .slice(0, checksumLength);
    return (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBase58)((0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([payload, checksum]));
};
/**
 * Encode an HD public key (as defined by BIP32) given an HD public node.
 *
 * @param crypto - an implementation of sha256
 * @param keyParameters - an HD public node and the network for which to encode
 * the key
 */
const encodeHdPublicKey = (crypto, keyParameters) => {
    const version = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.network === 'mainnet'
        ? HdKeyVersion.mainnetPublicKey
        : HdKeyVersion.testnetPublicKey);
    const depth = Uint8Array.of(keyParameters.node.depth);
    const childIndex = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(keyParameters.node.childIndex);
    const payload = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([
        version,
        depth,
        keyParameters.node.parentFingerprint,
        childIndex,
        keyParameters.node.chainCode,
        keyParameters.node.publicKey,
    ]);
    const checksumLength = 4;
    const checksum = crypto.sha256
        .hash(crypto.sha256.hash(payload))
        .slice(0, checksumLength);
    return (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBase58)((0,_format_format__WEBPACK_IMPORTED_MODULE_2__.flattenBinArray)([payload, checksum]));
};
/**
 * Derive the HD public node of an HD private node.
 *
 * Though private keys cannot be derived from HD public keys, sharing HD public
 * keys still carries risk. Along with allowing an attacker to associate wallet
 * addresses together (breaking privacy), should an attacker gain knowledge of a
 * single child private key, **it's possible to derive all parent HD private
 * keys**. See `crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode` for
 * details.
 *
 * @param crypto - an implementation of secp256k1 compressed public key
 * derivation (e.g. `instantiateSecp256k1`)
 * @param node - a valid HD private node
 */
const deriveHdPublicNode = (crypto, node) => {
    return {
        chainCode: node.chainCode,
        childIndex: node.childIndex,
        depth: node.depth,
        parentFingerprint: node.parentFingerprint,
        ...(node.parentIdentifier === undefined
            ? {}
            : { parentIdentifier: node.parentIdentifier }),
        publicKey: crypto.secp256k1.derivePublicKeyCompressed(node.privateKey),
    };
};
/**
 * An error in the derivation of child HD public or private nodes.
 */
var HdNodeDerivationError;
(function (HdNodeDerivationError) {
    HdNodeDerivationError["childIndexExceedsMaximum"] = "HD key derivation error: child index exceeds maximum (4294967295).";
    HdNodeDerivationError["nextChildIndexRequiresHardenedAlgorithm"] = "HD key derivation error: an incredibly rare HMAC-SHA512 result occurred, and incrementing the child index would require switching to the hardened algorithm.";
    HdNodeDerivationError["hardenedDerivationRequiresPrivateNode"] = "HD key derivation error: derivation for hardened child indexes (indexes greater than or equal to 2147483648) requires an HD private node.";
    HdNodeDerivationError["invalidDerivationPath"] = "HD key derivation error: invalid derivation path \u2013 paths must begin with \"m\" or \"M\" and contain only forward slashes (\"/\"), apostrophes (\"'\"), or positive child index numbers.";
    HdNodeDerivationError["invalidPrivateDerivationPrefix"] = "HD key derivation error: private derivation paths must begin with \"m\".";
    HdNodeDerivationError["invalidPublicDerivationPrefix"] = "HD key derivation error: public derivation paths must begin with \"M\".";
})(HdNodeDerivationError || (HdNodeDerivationError = {}));
/**
 * Derive a child HD private node from an HD private node.
 *
 * To derive a child HD public node, use `deriveHdPublicNode` on the result of
 * this method. If the child uses a non-hardened index, it's also possible to
 * use `deriveHdPublicNodeChild`.
 *
 * @privateRemarks
 * The `Secp256k1.addTweakPrivateKey` method throws if the tweak is out of range
 * or if the resulting private key would be invalid. The procedure to handle
 * this error is standardized by BIP32: return the HD node at the next child
 * index. (Regardless, this scenario is incredibly unlikely without a weakness
 * in HMAC-SHA512.)
 *
 * @param crypto - implementations of sha256, ripemd160, secp256k1 compressed
 * public key derivation, and secp256k1 private key "tweak addition"
 * (application of the EC group operation) – these are available via
 * `instantiateBIP32Crypto`
 * @param node - the valid HD private node from which to derive the child node
 * @param index - the index at which to derive the child node - indexes greater
 * than or equal to the hardened index offset (`0x80000000`/`2147483648`) are
 * derived using the "hardened" derivation algorithm
 */
// eslint-disable-next-line complexity
const deriveHdPrivateNodeChild = (crypto, node, index) => {
    const maximumIndex = 0xffffffff;
    if (index > maximumIndex) {
        return HdNodeDerivationError.childIndexExceedsMaximum;
    }
    const hardenedIndexOffset = 0x80000000;
    const useHardenedAlgorithm = index >= hardenedIndexOffset;
    const keyMaterial = useHardenedAlgorithm
        ? node.privateKey
        : crypto.secp256k1.derivePublicKeyCompressed(node.privateKey);
    const serialization = Uint8Array.from([
        ...(useHardenedAlgorithm ? [0x00] : []),
        ...keyMaterial,
        ...(0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(index),
    ]);
    const derivation = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, node.chainCode, serialization);
    const tweakValueLength = 32;
    const tweakValue = derivation.slice(0, tweakValueLength);
    const nextChainCode = derivation.slice(tweakValueLength);
    // eslint-disable-next-line functional/no-try-statement
    try {
        const nextPrivateKey = crypto.secp256k1.addTweakPrivateKey(node.privateKey, tweakValue);
        const parentIdentifier = deriveHdPrivateNodeIdentifier(crypto, node);
        const parentFingerprintLength = 4;
        return {
            chainCode: nextChainCode,
            childIndex: index,
            depth: node.depth + 1,
            parentFingerprint: parentIdentifier.slice(0, parentFingerprintLength),
            parentIdentifier,
            privateKey: nextPrivateKey,
            valid: true,
        };
    }
    catch (error) /* istanbul ignore next - testing requires >2^127 brute force */ {
        if (index === hardenedIndexOffset - 1) {
            return HdNodeDerivationError.nextChildIndexRequiresHardenedAlgorithm;
        }
        return deriveHdPrivateNodeChild(crypto, node, index + 1);
    }
};
/**
 * Derive a non-hardened child HD public node from an HD public node.
 *
 * Because hardened derivation also requires knowledge of the parent private
 * node, it's not possible to use an HD public node to derive a hardened child
 * HD public node.
 *
 * Though private keys cannot be derived from HD public keys, sharing HD public
 * keys still carries risk. Along with allowing an attacker to associate wallet
 * addresses together (breaking privacy), should an attacker gain knowledge of a
 * single child private key, **it's possible to derive all parent HD private
 * keys**. See `crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode` for
 * details.
 *
 * @privateRemarks
 * The `Secp256k1.addTweakPublicKeyCompressed` method throws if the tweak is out
 * of range or if the resulting public key would be invalid. The procedure to
 * handle this error is standardized by BIP32: return the HD node at the next
 * child index. (Regardless, this scenario is incredibly unlikely without a
 * weakness in HMAC-SHA512.)
 *
 * @param crypto - implementations of sha256, sha512, ripemd160, and secp256k1
 * compressed public key "tweak addition" (application of the EC group
 * operation) – these are available via `instantiateBIP32Crypto`
 * @param node - the HD public node from which to derive the child public node
 * @param index - the index at which to derive the child node
 */
const deriveHdPublicNodeChild = (crypto, node, index) => {
    const hardenedIndexOffset = 0x80000000;
    if (index >= hardenedIndexOffset) {
        return HdNodeDerivationError.hardenedDerivationRequiresPrivateNode;
    }
    const serialization = Uint8Array.from([
        ...node.publicKey,
        ...(0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(index),
    ]);
    const derivation = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, node.chainCode, serialization);
    const tweakValueLength = 32;
    const tweakValue = derivation.slice(0, tweakValueLength);
    const nextChainCode = derivation.slice(tweakValueLength);
    // eslint-disable-next-line functional/no-try-statement
    try {
        const nextPublicKey = crypto.secp256k1.addTweakPublicKeyCompressed(node.publicKey, tweakValue);
        const parentIdentifier = deriveHdPublicNodeIdentifier(crypto, node);
        const parentFingerprintLength = 4;
        return {
            chainCode: nextChainCode,
            childIndex: index,
            depth: node.depth + 1,
            parentFingerprint: parentIdentifier.slice(0, parentFingerprintLength),
            parentIdentifier,
            publicKey: nextPublicKey,
        };
    }
    catch (error) /* istanbul ignore next - testing requires >2^127 brute force */ {
        if (index === hardenedIndexOffset - 1) {
            return HdNodeDerivationError.nextChildIndexRequiresHardenedAlgorithm;
        }
        return deriveHdPublicNodeChild(crypto, node, index + 1);
    }
};
/**
 * Derive a child HD node from a parent node given a derivation path. The
 * resulting node is the same type as the parent node (private nodes return
 * private nodes, public nodes return public nodes).
 *
 * @remarks
 * The derivation path uses the notation specified in BIP32:
 *
 * The first character must be either `m` for private derivation or `M` for
 * public derivation, followed by sets of `/` and a number representing the
 * child index used in the derivation at that depth. Hardened derivation is
 * represented by a trailing `'`, and may only appear in private derivation
 * paths (hardened derivation requires knowledge of the private key). Hardened
 * child indexes are represented with the hardened index offset (`2147483648`)
 * subtracted.
 *
 * For example, `m/0/1'/2` uses private derivation (`m`), with child indexes in
 * the following order:
 *
 * `derivePrivate(derivePrivate(derivePrivate(node, 0), 2147483648 + 1), 2)`
 *
 * Likewise, `M/3/4/5` uses public derivation (`M`), with child indexes in the
 * following order:
 *
 * `derivePublic(derivePublic(derivePublic(node, 3), 4), 5)`
 *
 * Because hardened derivation requires a private node, paths which specify
 * public derivation (`M`) using hardened derivation (`'`) will return an error.
 * To derive the public node associated with a child private node which requires
 * hardened derivation, begin with private derivation, then provide the result
 * to `deriveHdPublicNode`.
 *
 * @param crypto - implementations of sha256, sha512, ripemd160, and secp256k1
 * derivation functions – these are available via `instantiateBIP32Crypto`
 * @param node - the HD node from which to begin the derivation (for paths
 * beginning with `m`, an `HdPrivateNodeValid`; for paths beginning with `M`, an
 * `HdPublicNode`)
 * @param path - the BIP32 derivation path, e.g. `m/0/1'/2` or `M/3/4/5`
 */
// eslint-disable-next-line complexity
const deriveHdPath = (crypto, node, path) => {
    const validDerivationPath = /^[mM](?:\/[0-9]+'?)*$/u;
    if (!validDerivationPath.test(path)) {
        return HdNodeDerivationError.invalidDerivationPath;
    }
    const parsed = path.split('/');
    const isPrivateDerivation = 'privateKey' in node;
    if (isPrivateDerivation && parsed[0] !== 'm') {
        return HdNodeDerivationError.invalidPrivateDerivationPrefix;
    }
    if (!isPrivateDerivation && parsed[0] !== 'M') {
        return HdNodeDerivationError.invalidPublicDerivationPrefix;
    }
    const base = 10;
    const hardenedIndexOffset = 0x80000000;
    const indexes = parsed
        .slice(1)
        .map((index) => index.endsWith("'")
        ? parseInt(index.slice(0, -1), base) + hardenedIndexOffset
        : parseInt(index, base));
    return (isPrivateDerivation
        ? indexes.reduce((result, nextIndex) => typeof result === 'string'
            ? result
            : deriveHdPrivateNodeChild(crypto, result, nextIndex), node // eslint-disable-line @typescript-eslint/prefer-reduce-type-parameter
        )
        : indexes.reduce((result, nextIndex) => typeof result === 'string'
            ? result
            : deriveHdPublicNodeChild(crypto, result, nextIndex), node // eslint-disable-line @typescript-eslint/prefer-reduce-type-parameter
        ));
};
var HdNodeCrackingError;
(function (HdNodeCrackingError) {
    HdNodeCrackingError["cannotCrackHardenedDerivation"] = "HD node cracking error: cannot crack an HD parent node using hardened child node.";
})(HdNodeCrackingError || (HdNodeCrackingError = {}));
/**
 * Derive the HD private node from a HD public node, given any non-hardened
 * child private node.
 *
 * @remarks
 * This exploits the "non-hardened" BIP32 derivation algorithm. Because
 * non-hardened derivation only requires knowledge of the "chain code" (rather
 * than requiring knowledge of the parent private key) it's possible to
 * calculate the value by which the parent private key is "tweaked" to arrive at
 * the child private key. Since we have the child private key, we simply
 * subtract this "tweaked" amount to get back to the parent private key.
 *
 * The BIP32 "hardened" derivation algorithm is designed to address this
 * weakness. Using hardened derivation, child private nodes can be shared
 * without risk of leaking the parent private node, but this comes at the cost
 * of public node derivation. Given only a parent public node, it is not
 * possible to derive hardened child public keys, so applications must choose
 * between support for HD public node derivation or support for sharing child
 * private nodes.
 *
 * @param crypto - an implementation of sha512
 * @param parentPublicNode - the parent HD public node for which to derive a
 * private node
 * @param childPrivateNode - any non-hardened child private node of the parent
 * node (only the `privateKey` and the `childIndex` are required)
 */
const crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode = (crypto, parentPublicNode, childPrivateNode) => {
    const hardenedIndexOffset = 0x80000000;
    if (childPrivateNode.childIndex >= hardenedIndexOffset) {
        return HdNodeCrackingError.cannotCrackHardenedDerivation;
    }
    const serialization = Uint8Array.from([
        ...parentPublicNode.publicKey,
        ...(0,_format_format__WEBPACK_IMPORTED_MODULE_2__.numberToBinUint32BE)(childPrivateNode.childIndex),
    ]);
    const derivation = (0,_crypto_hmac__WEBPACK_IMPORTED_MODULE_1__.hmacSha512)(crypto.sha512, parentPublicNode.chainCode, serialization);
    const tweakValueLength = 32;
    const tweakValue = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBigIntUint256BE)(derivation.slice(0, tweakValueLength));
    const childPrivateValue = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.binToBigIntUint256BE)(childPrivateNode.privateKey);
    const secp256k1OrderN = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');
    const trueMod = (n, m) => ((n % m) + m) % m;
    const parentPrivateValue = trueMod(childPrivateValue - tweakValue, secp256k1OrderN);
    const privateKey = (0,_format_format__WEBPACK_IMPORTED_MODULE_2__.bigIntToBinUint256BEClamped)(parentPrivateValue);
    return {
        chainCode: parentPublicNode.chainCode,
        childIndex: parentPublicNode.childIndex,
        depth: parentPublicNode.depth,
        parentFingerprint: parentPublicNode.parentFingerprint,
        ...(parentPublicNode.parentIdentifier === undefined
            ? {}
            : { parentIdentifier: parentPublicNode.parentIdentifier }),
        privateKey,
        valid: true,
    };
};
//# sourceMappingURL=hd-key.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export generatePrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateSecp256k1PrivateKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateSecp256k1PrivateKey": () => /* binding */ validateSecp256k1PrivateKey,
/* harmony export */   "generatePrivateKey": () => /* binding */ generatePrivateKey
/* harmony export */ });
/**
 * Verify that a private key is valid for the Secp256k1 curve. Returns `true`
 * for success, or `false` on failure.
 *
 * Private keys are 256-bit numbers encoded as a 32-byte, big-endian Uint8Array.
 * Nearly every 256-bit number is a valid secp256k1 private key. Specifically,
 * any 256-bit number greater than `0x01` and less than
 * `0xFFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFE BAAE DCE6 AF48 A03B BFD2 5E8C D036 4140`
 * is a valid private key. This range is part of the definition of the
 * secp256k1 elliptic curve parameters.
 *
 * This method does not require the `Secp256k1` WASM implementation (available
 * via `instantiateSecp256k1`).
 */
const validateSecp256k1PrivateKey = (privateKey) => {
    const privateKeyLength = 32;
    if (privateKey.length !== privateKeyLength ||
        privateKey.every((value) => value === 0)) {
        return false;
    }
    /**
     * The largest possible Secp256k1 private key – equal to the order of the
     * Secp256k1 curve minus one.
     */
    // prettier-ignore
    const maximumSecp256k1PrivateKey = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 63]; // eslint-disable-line @typescript-eslint/no-magic-numbers
    const firstDifference = privateKey.findIndex((value, i) => value !== maximumSecp256k1PrivateKey[i]);
    if (firstDifference === -1 ||
        privateKey[firstDifference] < maximumSecp256k1PrivateKey[firstDifference]) {
        return true;
    }
    return false;
};
/**
 * Securely generate a valid Secp256k1 private key given a secure source of
 * randomness.
 *
 * **Node.js Usage**
 * ```ts
 * import { randomBytes } from 'crypto';
 * import { generatePrivateKey } from '@bitauth/libauth';
 *
 * const key = generatePrivateKey(secp256k1, () => randomBytes(32));
 * ```
 *
 * **Browser Usage**
 * ```ts
 * import { generatePrivateKey } from '@bitauth/libauth';
 *
 * const key = generatePrivateKey(secp256k1, () =>
 *   window.crypto.getRandomValues(new Uint8Array(32))
 * );
 * ```
 *
 * @param secp256k1 - an implementation of Secp256k1
 * @param secureRandom - a method which returns a securely-random 32-byte
 * Uint8Array
 */
const generatePrivateKey = (secureRandom) => {
    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations
    let maybeKey;
    // eslint-disable-next-line functional/no-loop-statement
    do {
        // eslint-disable-next-line functional/no-expression-statement
        maybeKey = secureRandom();
    } while (!validateSecp256k1PrivateKey(maybeKey));
    return maybeKey;
};
//# sourceMappingURL=key-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/key.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/key.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export HdKeyDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdKeyDecodingError */
/*! export HdKeyVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdKeyVersion */
/*! export HdNodeCrackingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdNodeCrackingError */
/*! export HdNodeDerivationError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .HdNodeDerivationError */
/*! export WalletImportFormatError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js .WalletImportFormatError */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode */
/*! export decodeHdKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .decodeHdKey */
/*! export decodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .decodeHdPrivateKey */
/*! export decodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .decodeHdPublicKey */
/*! export decodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js .decodePrivateKeyWif */
/*! export deriveHdPath [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPath */
/*! export deriveHdPrivateNodeChild [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPrivateNodeChild */
/*! export deriveHdPrivateNodeFromSeed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPrivateNodeFromSeed */
/*! export deriveHdPrivateNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPrivateNodeIdentifier */
/*! export deriveHdPublicNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPublicNode */
/*! export deriveHdPublicNodeChild [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPublicNodeChild */
/*! export deriveHdPublicNodeIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .deriveHdPublicNodeIdentifier */
/*! export encodeHdPrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .encodeHdPrivateKey */
/*! export encodeHdPublicKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .encodeHdPublicKey */
/*! export encodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js .encodePrivateKeyWif */
/*! export generatePrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js .generatePrivateKey */
/*! export instantiateBIP32Crypto [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js .instantiateBIP32Crypto */
/*! export validateSecp256k1PrivateKey [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js .validateSecp256k1PrivateKey */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HdKeyDecodingError": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdKeyDecodingError,
/* harmony export */   "HdKeyVersion": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdKeyVersion,
/* harmony export */   "HdNodeCrackingError": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdNodeCrackingError,
/* harmony export */   "HdNodeDerivationError": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.HdNodeDerivationError,
/* harmony export */   "crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode,
/* harmony export */   "decodeHdKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdKey,
/* harmony export */   "decodeHdPrivateKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdPrivateKey,
/* harmony export */   "decodeHdPublicKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdPublicKey,
/* harmony export */   "deriveHdPath": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPath,
/* harmony export */   "deriveHdPrivateNodeChild": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPrivateNodeChild,
/* harmony export */   "deriveHdPrivateNodeFromSeed": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPrivateNodeFromSeed,
/* harmony export */   "deriveHdPrivateNodeIdentifier": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPrivateNodeIdentifier,
/* harmony export */   "deriveHdPublicNode": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNode,
/* harmony export */   "deriveHdPublicNodeChild": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNodeChild,
/* harmony export */   "deriveHdPublicNodeIdentifier": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPublicNodeIdentifier,
/* harmony export */   "encodeHdPrivateKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.encodeHdPrivateKey,
/* harmony export */   "encodeHdPublicKey": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.encodeHdPublicKey,
/* harmony export */   "instantiateBIP32Crypto": () => /* reexport safe */ _hd_key__WEBPACK_IMPORTED_MODULE_0__.instantiateBIP32Crypto,
/* harmony export */   "generatePrivateKey": () => /* reexport safe */ _key_utils__WEBPACK_IMPORTED_MODULE_1__.generatePrivateKey,
/* harmony export */   "validateSecp256k1PrivateKey": () => /* reexport safe */ _key_utils__WEBPACK_IMPORTED_MODULE_1__.validateSecp256k1PrivateKey,
/* harmony export */   "WalletImportFormatError": () => /* reexport safe */ _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__.WalletImportFormatError,
/* harmony export */   "decodePrivateKeyWif": () => /* reexport safe */ _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__.decodePrivateKeyWif,
/* harmony export */   "encodePrivateKeyWif": () => /* reexport safe */ _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__.encodePrivateKeyWif
/* harmony export */ });
/* harmony import */ var _hd_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _key_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./key-utils */ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js");
/* harmony import */ var _wallet_import_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wallet-import-format */ "./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js");



//# sourceMappingURL=key.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/key/wallet-import-format.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export WalletImportFormatError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodePrivateKeyWif [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WalletImportFormatError": () => /* binding */ WalletImportFormatError,
/* harmony export */   "encodePrivateKeyWif": () => /* binding */ encodePrivateKeyWif,
/* harmony export */   "decodePrivateKeyWif": () => /* binding */ decodePrivateKeyWif
/* harmony export */ });
/* harmony import */ var _address_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../address/address */ "./node_modules/@bitauth/libauth/build/module/lib/address/address.js");

var WalletImportFormatError;
(function (WalletImportFormatError) {
    WalletImportFormatError["incorrectLength"] = "The WIF private key payload is not the correct length.";
})(WalletImportFormatError || (WalletImportFormatError = {}));
/**
 * Encode a private key using Wallet Import Format (WIF).
 *
 * WIF encodes the 32-byte private key, a 4-byte checksum, and a `type`
 * indicating the intended usage for the private key. See
 * `WalletImportFormatType` for details.
 *
 * @remarks
 * WIF-encoding uses the Base58Address format with version
 * `Base58AddressFormatVersion.wif` (`128`/`0x80`) or
 * `Base58AddressFormatVersion.wifTestnet` (`239`/`0xef`), respectively.
 *
 * To indicate that the private key is intended for use in a P2PKH address using
 * the compressed form of its derived public key, a `0x01` is appended to the
 * payload prior to encoding. For the uncompressed construction, the extra byte
 * is omitted.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param privateKey - a 32-byte Secp256k1 ECDSA private key
 * @param type - the intended usage of the private key (e.g. `mainnet` or
 * `testnet`)
 */
const encodePrivateKeyWif = (sha256, privateKey, type) => {
    const compressedByte = 0x01;
    const mainnet = type === 'mainnet' || type === 'mainnet-uncompressed';
    const compressed = type === 'mainnet' || type === 'testnet';
    const payload = compressed
        ? Uint8Array.from([...privateKey, compressedByte])
        : privateKey;
    return (0,_address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58AddressFormat)(sha256, mainnet
        ? _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion.wif
        : _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion.wifTestnet, payload);
};
/**
 * Decode a private key using Wallet Import Format (WIF). See
 * `encodePrivateKeyWif` for details.
 *
 * @param sha256 - an implementation of sha256 (a universal implementation is
 * available via `instantiateSha256`)
 * @param wifKey - the private key to decode (in Wallet Import Format)
 */
// eslint-disable-next-line complexity
const decodePrivateKeyWif = (sha256, wifKey) => {
    const compressedPayloadLength = 33;
    const decoded = (0,_address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58AddressFormat)(sha256, wifKey);
    if (typeof decoded === 'string')
        return decoded;
    const mainnet = decoded.version === _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion.wif;
    const compressed = decoded.payload.length === compressedPayloadLength;
    const privateKey = compressed
        ? decoded.payload.slice(0, -1)
        : decoded.payload;
    const type = mainnet
        ? compressed
            ? 'mainnet'
            : 'mainnet-uncompressed'
        : compressed
            ? 'testnet'
            : 'testnet-uncompressed';
    return { privateKey, type };
};
//# sourceMappingURL=wallet-import-format.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/lib.js":
/*!***************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/lib.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export AddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .AddressType */
/*! export Base58AddressError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressError */
/*! export Base58AddressFormatVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .Base58AddressFormatVersion */
/*! export Bech32DecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .Bech32DecodingError */
/*! export BitRegroupingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .BitRegroupingError */
/*! export CashAddressCorrectionError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressCorrectionError */
/*! export CashAddressDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressDecodingError */
/*! export CashAddressEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressEncodingError */
/*! export CashAddressNetworkPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressNetworkPrefix */
/*! export CashAddressType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressType */
/*! export CashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByte */
/*! export CashAddressVersionByteDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .CashAddressVersionByteDecodingError */
/*! export CompilerDefaults [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompressionFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ContextFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeCrackingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeDerivationError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export LockingBytecodeEncodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .LockingBytecodeEncodingError */
/*! export SigningSerializationAlgorithmIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export WalletImportFormatError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export addressContentsToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .addressContentsToLockingBytecode */
/*! export attemptCashAddressFormatErrorCorrection [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .attemptCashAddressFormatErrorCorrection */
/*! export attemptCompilerOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export base58AddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .base58AddressToLockingBytecode */
/*! export bech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSet */
/*! export bech32CharacterSetIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32CharacterSetIndex */
/*! export bech32PaddedToBin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .bech32PaddedToBin */
/*! export binToBech32Padded [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .binToBech32Padded */
/*! export cashAddressBitToSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressBitToSize */
/*! export cashAddressChecksumToUint5Array [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressChecksumToUint5Array */
/*! export cashAddressPolynomialModulo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialModulo */
/*! export cashAddressPolynomialToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressPolynomialToCashAddress */
/*! export cashAddressSizeToBit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .cashAddressSizeToBit */
/*! export cashAddressToLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .cashAddressToLockingBytecode */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAddressData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAttemptBytecodeResolution [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockHeight [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockTime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperAddressIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperCompileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdKeyPrivate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperGenerateCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperUnknownEntity [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationRequires [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationFullBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutputValue [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationSequenceNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationWalletData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58Address */
/*! export decodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .decodeBase58AddressFormat */
/*! export decodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .decodeBech32 */
/*! export decodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddress */
/*! export decodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormat */
/*! export decodeCashAddressFormatWithoutPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressFormatWithoutPrefix */
/*! export decodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .decodeCashAddressVersionByte */
/*! export decodeHdKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeFromSeed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58Address */
/*! export encodeBase58AddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/base58-address.js .encodeBase58AddressFormat */
/*! export encodeBech32 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .encodeBech32 */
/*! export encodeCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddress */
/*! export encodeCashAddressFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressFormat */
/*! export encodeCashAddressVersionByte [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .encodeCashAddressVersionByte */
/*! export encodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generatePrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedRipemd160Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSecp256k1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha256Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha512Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateBIP32Crypto [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateHmacFunction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRustWasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Wasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1WasmBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isBech32CharacterSet [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .isBech32CharacterSet */
/*! export lockingBytecodeToAddressContents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToAddressContents */
/*! export lockingBytecodeToBase58Address [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToBase58Address */
/*! export lockingBytecodeToCashAddress [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/locking-bytecode.js .lockingBytecodeToCashAddress */
/*! export maskCashAddressPrefix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/cash-address.js .maskCashAddressPrefix */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export regroupBits [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/address/bech32.js .regroupBits */
/*! export ripemd160Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha1Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha256Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha512Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateSecp256k1PrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddressType": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.AddressType,
/* harmony export */   "Base58AddressError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressError,
/* harmony export */   "Base58AddressFormatVersion": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.Base58AddressFormatVersion,
/* harmony export */   "Bech32DecodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.Bech32DecodingError,
/* harmony export */   "BitRegroupingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.BitRegroupingError,
/* harmony export */   "CashAddressCorrectionError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressCorrectionError,
/* harmony export */   "CashAddressDecodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressDecodingError,
/* harmony export */   "CashAddressEncodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressEncodingError,
/* harmony export */   "CashAddressNetworkPrefix": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressNetworkPrefix,
/* harmony export */   "CashAddressType": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressType,
/* harmony export */   "CashAddressVersionByte": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressVersionByte,
/* harmony export */   "CashAddressVersionByteDecodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.CashAddressVersionByteDecodingError,
/* harmony export */   "LockingBytecodeEncodingError": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.LockingBytecodeEncodingError,
/* harmony export */   "addressContentsToLockingBytecode": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.addressContentsToLockingBytecode,
/* harmony export */   "attemptCashAddressFormatErrorCorrection": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.attemptCashAddressFormatErrorCorrection,
/* harmony export */   "base58AddressToLockingBytecode": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.base58AddressToLockingBytecode,
/* harmony export */   "bech32CharacterSet": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.bech32CharacterSet,
/* harmony export */   "bech32CharacterSetIndex": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.bech32CharacterSetIndex,
/* harmony export */   "bech32PaddedToBin": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.bech32PaddedToBin,
/* harmony export */   "binToBech32Padded": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.binToBech32Padded,
/* harmony export */   "cashAddressBitToSize": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressBitToSize,
/* harmony export */   "cashAddressChecksumToUint5Array": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressChecksumToUint5Array,
/* harmony export */   "cashAddressPolynomialModulo": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressPolynomialModulo,
/* harmony export */   "cashAddressPolynomialToCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressPolynomialToCashAddress,
/* harmony export */   "cashAddressSizeToBit": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressSizeToBit,
/* harmony export */   "cashAddressToLockingBytecode": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.cashAddressToLockingBytecode,
/* harmony export */   "decodeBase58Address": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58Address,
/* harmony export */   "decodeBase58AddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBase58AddressFormat,
/* harmony export */   "decodeBech32": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeBech32,
/* harmony export */   "decodeCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddress,
/* harmony export */   "decodeCashAddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormat,
/* harmony export */   "decodeCashAddressFormatWithoutPrefix": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressFormatWithoutPrefix,
/* harmony export */   "decodeCashAddressVersionByte": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.decodeCashAddressVersionByte,
/* harmony export */   "encodeBase58Address": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58Address,
/* harmony export */   "encodeBase58AddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBase58AddressFormat,
/* harmony export */   "encodeBech32": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeBech32,
/* harmony export */   "encodeCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeCashAddress,
/* harmony export */   "encodeCashAddressFormat": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeCashAddressFormat,
/* harmony export */   "encodeCashAddressVersionByte": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.encodeCashAddressVersionByte,
/* harmony export */   "isBech32CharacterSet": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.isBech32CharacterSet,
/* harmony export */   "lockingBytecodeToAddressContents": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.lockingBytecodeToAddressContents,
/* harmony export */   "lockingBytecodeToBase58Address": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.lockingBytecodeToBase58Address,
/* harmony export */   "lockingBytecodeToCashAddress": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.lockingBytecodeToCashAddress,
/* harmony export */   "maskCashAddressPrefix": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.maskCashAddressPrefix,
/* harmony export */   "regroupBits": () => /* reexport safe */ _address_address__WEBPACK_IMPORTED_MODULE_0__.regroupBits,
/* harmony export */   "CompressionFlag": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.CompressionFlag,
/* harmony export */   "ContextFlag": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.ContextFlag,
/* harmony export */   "getEmbeddedSecp256k1Binary": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.getEmbeddedSecp256k1Binary,
/* harmony export */   "instantiateRustWasm": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.instantiateRustWasm,
/* harmony export */   "instantiateSecp256k1Wasm": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1Wasm,
/* harmony export */   "instantiateSecp256k1WasmBytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.instantiateSecp256k1WasmBytes,
/* harmony export */   "ripemd160Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.ripemd160Base64Bytes,
/* harmony export */   "sha1Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.sha1Base64Bytes,
/* harmony export */   "sha256Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.sha256Base64Bytes,
/* harmony export */   "sha512Base64Bytes": () => /* reexport safe */ _bin_bin__WEBPACK_IMPORTED_MODULE_2__.sha512Base64Bytes,
/* harmony export */   "getEmbeddedRipemd160Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedRipemd160Binary,
/* harmony export */   "getEmbeddedSha1Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha1Binary,
/* harmony export */   "getEmbeddedSha256Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha256Binary,
/* harmony export */   "getEmbeddedSha512Binary": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.getEmbeddedSha512Binary,
/* harmony export */   "hmacSha256": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.hmacSha256,
/* harmony export */   "hmacSha512": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.hmacSha512,
/* harmony export */   "instantiateHmacFunction": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateHmacFunction,
/* harmony export */   "instantiateRipemd160": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateRipemd160,
/* harmony export */   "instantiateRipemd160Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateRipemd160Bytes,
/* harmony export */   "instantiateSecp256k1": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSecp256k1,
/* harmony export */   "instantiateSecp256k1Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSecp256k1Bytes,
/* harmony export */   "instantiateSha1": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1,
/* harmony export */   "instantiateSha1Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha1Bytes,
/* harmony export */   "instantiateSha256": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha256,
/* harmony export */   "instantiateSha256Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha256Bytes,
/* harmony export */   "instantiateSha512": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha512,
/* harmony export */   "instantiateSha512Bytes": () => /* reexport safe */ _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__.instantiateSha512Bytes,
/* harmony export */   "HdKeyDecodingError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdKeyDecodingError,
/* harmony export */   "HdKeyVersion": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdKeyVersion,
/* harmony export */   "HdNodeCrackingError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdNodeCrackingError,
/* harmony export */   "HdNodeDerivationError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.HdNodeDerivationError,
/* harmony export */   "WalletImportFormatError": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.WalletImportFormatError,
/* harmony export */   "crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode,
/* harmony export */   "decodeHdKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodeHdKey,
/* harmony export */   "decodeHdPrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodeHdPrivateKey,
/* harmony export */   "decodeHdPublicKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodeHdPublicKey,
/* harmony export */   "decodePrivateKeyWif": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.decodePrivateKeyWif,
/* harmony export */   "deriveHdPath": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPath,
/* harmony export */   "deriveHdPrivateNodeChild": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPrivateNodeChild,
/* harmony export */   "deriveHdPrivateNodeFromSeed": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPrivateNodeFromSeed,
/* harmony export */   "deriveHdPrivateNodeIdentifier": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPrivateNodeIdentifier,
/* harmony export */   "deriveHdPublicNode": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPublicNode,
/* harmony export */   "deriveHdPublicNodeChild": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPublicNodeChild,
/* harmony export */   "deriveHdPublicNodeIdentifier": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.deriveHdPublicNodeIdentifier,
/* harmony export */   "encodeHdPrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.encodeHdPrivateKey,
/* harmony export */   "encodeHdPublicKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.encodeHdPublicKey,
/* harmony export */   "encodePrivateKeyWif": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.encodePrivateKeyWif,
/* harmony export */   "generatePrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.generatePrivateKey,
/* harmony export */   "instantiateBIP32Crypto": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.instantiateBIP32Crypto,
/* harmony export */   "validateSecp256k1PrivateKey": () => /* reexport safe */ _key_key__WEBPACK_IMPORTED_MODULE_4__.validateSecp256k1PrivateKey,
/* harmony export */   "TransactionDecodingError": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.TransactionDecodingError,
/* harmony export */   "compileInputTemplate": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.compileInputTemplate,
/* harmony export */   "compileOutputTemplate": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.compileOutputTemplate,
/* harmony export */   "decodeTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.decodeTransaction,
/* harmony export */   "decodeTransactionUnsafe": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.decodeTransactionUnsafe,
/* harmony export */   "encodeInput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeInput,
/* harmony export */   "encodeInputs": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeInputs,
/* harmony export */   "encodeOutpoints": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutpoints,
/* harmony export */   "encodeOutput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutput,
/* harmony export */   "encodeOutputsForSigning": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutputsForSigning,
/* harmony export */   "encodeOutputsForTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeOutputsForTransaction,
/* harmony export */   "encodeSequenceNumbersForSigning": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeSequenceNumbersForSigning,
/* harmony export */   "encodeTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.encodeTransaction,
/* harmony export */   "extractMissingVariables": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.extractMissingVariables,
/* harmony export */   "extractResolvedVariables": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.extractResolvedVariables,
/* harmony export */   "generateTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.generateTransaction,
/* harmony export */   "getTransactionHash": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.getTransactionHash,
/* harmony export */   "getTransactionHashBE": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.getTransactionHashBE,
/* harmony export */   "getTransactionHashLE": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.getTransactionHashLE,
/* harmony export */   "invalidSatoshis": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.invalidSatoshis,
/* harmony export */   "readTransactionInput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.readTransactionInput,
/* harmony export */   "readTransactionOutput": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.readTransactionOutput,
/* harmony export */   "safelyExtendCompilationData": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.safelyExtendCompilationData,
/* harmony export */   "verifyTransaction": () => /* reexport safe */ _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__.verifyTransaction
/* harmony export */ });
/* harmony import */ var _address_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address/address */ "./node_modules/@bitauth/libauth/build/module/lib/address/address.js");
/* harmony import */ var _vm_vm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vm/vm */ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _vm_vm__WEBPACK_IMPORTED_MODULE_1__) if(["default","AddressType","Base58AddressError","Base58AddressFormatVersion","Bech32DecodingError","BitRegroupingError","CashAddressCorrectionError","CashAddressDecodingError","CashAddressEncodingError","CashAddressNetworkPrefix","CashAddressType","CashAddressVersionByte","CashAddressVersionByteDecodingError","LockingBytecodeEncodingError","addressContentsToLockingBytecode","attemptCashAddressFormatErrorCorrection","base58AddressToLockingBytecode","bech32CharacterSet","bech32CharacterSetIndex","bech32PaddedToBin","binToBech32Padded","cashAddressBitToSize","cashAddressChecksumToUint5Array","cashAddressPolynomialModulo","cashAddressPolynomialToCashAddress","cashAddressSizeToBit","cashAddressToLockingBytecode","decodeBase58Address","decodeBase58AddressFormat","decodeBech32","decodeCashAddress","decodeCashAddressFormat","decodeCashAddressFormatWithoutPrefix","decodeCashAddressVersionByte","encodeBase58Address","encodeBase58AddressFormat","encodeBech32","encodeCashAddress","encodeCashAddressFormat","encodeCashAddressVersionByte","isBech32CharacterSet","lockingBytecodeToAddressContents","lockingBytecodeToBase58Address","lockingBytecodeToCashAddress","maskCashAddressPrefix","regroupBits"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _vm_vm__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _bin_bin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bin/bin */ "./node_modules/@bitauth/libauth/build/module/lib/bin/bin.js");
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _key_key__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./key/key */ "./node_modules/@bitauth/libauth/build/module/lib/key/key.js");
/* harmony import */ var _template_template__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./template/template */ "./node_modules/@bitauth/libauth/build/module/lib/template/template.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _template_template__WEBPACK_IMPORTED_MODULE_5__) if(["default","AddressType","Base58AddressError","Base58AddressFormatVersion","Bech32DecodingError","BitRegroupingError","CashAddressCorrectionError","CashAddressDecodingError","CashAddressEncodingError","CashAddressNetworkPrefix","CashAddressType","CashAddressVersionByte","CashAddressVersionByteDecodingError","LockingBytecodeEncodingError","addressContentsToLockingBytecode","attemptCashAddressFormatErrorCorrection","base58AddressToLockingBytecode","bech32CharacterSet","bech32CharacterSetIndex","bech32PaddedToBin","binToBech32Padded","cashAddressBitToSize","cashAddressChecksumToUint5Array","cashAddressPolynomialModulo","cashAddressPolynomialToCashAddress","cashAddressSizeToBit","cashAddressToLockingBytecode","decodeBase58Address","decodeBase58AddressFormat","decodeBech32","decodeCashAddress","decodeCashAddressFormat","decodeCashAddressFormatWithoutPrefix","decodeCashAddressVersionByte","encodeBase58Address","encodeBase58AddressFormat","encodeBech32","encodeCashAddress","encodeCashAddressFormat","encodeCashAddressVersionByte","isBech32CharacterSet","lockingBytecodeToAddressContents","lockingBytecodeToBase58Address","lockingBytecodeToCashAddress","maskCashAddressPrefix","regroupBits","CompressionFlag","ContextFlag","getEmbeddedSecp256k1Binary","instantiateRustWasm","instantiateSecp256k1Wasm","instantiateSecp256k1WasmBytes","ripemd160Base64Bytes","sha1Base64Bytes","sha256Base64Bytes","sha512Base64Bytes","getEmbeddedRipemd160Binary","getEmbeddedSha1Binary","getEmbeddedSha256Binary","getEmbeddedSha512Binary","hmacSha256","hmacSha512","instantiateHmacFunction","instantiateRipemd160","instantiateRipemd160Bytes","instantiateSecp256k1","instantiateSecp256k1Bytes","instantiateSha1","instantiateSha1Bytes","instantiateSha256","instantiateSha256Bytes","instantiateSha512","instantiateSha512Bytes","HdKeyDecodingError","HdKeyVersion","HdNodeCrackingError","HdNodeDerivationError","WalletImportFormatError","crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode","decodeHdKey","decodeHdPrivateKey","decodeHdPublicKey","decodePrivateKeyWif","deriveHdPath","deriveHdPrivateNodeChild","deriveHdPrivateNodeFromSeed","deriveHdPrivateNodeIdentifier","deriveHdPublicNode","deriveHdPublicNodeChild","deriveHdPublicNodeIdentifier","encodeHdPrivateKey","encodeHdPublicKey","encodePrivateKeyWif","generatePrivateKey","instantiateBIP32Crypto","validateSecp256k1PrivateKey"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _template_template__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _transaction_transaction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transaction/transaction */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction.js");
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _format_format__WEBPACK_IMPORTED_MODULE_7__) if(["default","AddressType","Base58AddressError","Base58AddressFormatVersion","Bech32DecodingError","BitRegroupingError","CashAddressCorrectionError","CashAddressDecodingError","CashAddressEncodingError","CashAddressNetworkPrefix","CashAddressType","CashAddressVersionByte","CashAddressVersionByteDecodingError","LockingBytecodeEncodingError","addressContentsToLockingBytecode","attemptCashAddressFormatErrorCorrection","base58AddressToLockingBytecode","bech32CharacterSet","bech32CharacterSetIndex","bech32PaddedToBin","binToBech32Padded","cashAddressBitToSize","cashAddressChecksumToUint5Array","cashAddressPolynomialModulo","cashAddressPolynomialToCashAddress","cashAddressSizeToBit","cashAddressToLockingBytecode","decodeBase58Address","decodeBase58AddressFormat","decodeBech32","decodeCashAddress","decodeCashAddressFormat","decodeCashAddressFormatWithoutPrefix","decodeCashAddressVersionByte","encodeBase58Address","encodeBase58AddressFormat","encodeBech32","encodeCashAddress","encodeCashAddressFormat","encodeCashAddressVersionByte","isBech32CharacterSet","lockingBytecodeToAddressContents","lockingBytecodeToBase58Address","lockingBytecodeToCashAddress","maskCashAddressPrefix","regroupBits","CompressionFlag","ContextFlag","getEmbeddedSecp256k1Binary","instantiateRustWasm","instantiateSecp256k1Wasm","instantiateSecp256k1WasmBytes","ripemd160Base64Bytes","sha1Base64Bytes","sha256Base64Bytes","sha512Base64Bytes","getEmbeddedRipemd160Binary","getEmbeddedSha1Binary","getEmbeddedSha256Binary","getEmbeddedSha512Binary","hmacSha256","hmacSha512","instantiateHmacFunction","instantiateRipemd160","instantiateRipemd160Bytes","instantiateSecp256k1","instantiateSecp256k1Bytes","instantiateSha1","instantiateSha1Bytes","instantiateSha256","instantiateSha256Bytes","instantiateSha512","instantiateSha512Bytes","HdKeyDecodingError","HdKeyVersion","HdNodeCrackingError","HdNodeDerivationError","WalletImportFormatError","crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode","decodeHdKey","decodeHdPrivateKey","decodeHdPublicKey","decodePrivateKeyWif","deriveHdPath","deriveHdPrivateNodeChild","deriveHdPrivateNodeFromSeed","deriveHdPrivateNodeIdentifier","deriveHdPublicNode","deriveHdPublicNodeChild","deriveHdPublicNodeIdentifier","encodeHdPrivateKey","encodeHdPublicKey","encodePrivateKeyWif","generatePrivateKey","instantiateBIP32Crypto","validateSecp256k1PrivateKey","CompilerDefaults","SigningSerializationAlgorithmIdentifier","attemptCompilerOperations","authenticationTemplateToCompilerBCH","compilerOperationAddressData","compilerOperationAttemptBytecodeResolution","compilerOperationCurrentBlockHeight","compilerOperationCurrentBlockTime","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeyPublicKeyCommon","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperAddressIndex","compilerOperationHelperCompileScript","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperComputeSignatureBCH","compilerOperationHelperDeriveHdKeyPrivate","compilerOperationHelperDeriveHdPrivateNode","compilerOperationHelperGenerateCoveredBytecode","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHelperHdKeySignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationHelperUnknownEntity","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeyPublicKeyCommon","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationRequires","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationFullBCH","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationWalletData","compilerOperationsBCH","compilerOperationsCommon","createCompilerBCH","TransactionDecodingError","compileInputTemplate","compileOutputTemplate","decodeTransaction","decodeTransactionUnsafe","encodeInput","encodeInputs","encodeOutpoints","encodeOutput","encodeOutputsForSigning","encodeOutputsForTransaction","encodeSequenceNumbersForSigning","encodeTransaction","extractMissingVariables","extractResolvedVariables","generateTransaction","getTransactionHash","getTransactionHashBE","getTransactionHashLE","invalidSatoshis","readTransactionInput","readTransactionOutput","safelyExtendCompilationData","verifyTransaction"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _format_format__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);








//# sourceMappingURL=lib.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export SigningSerializationAlgorithmIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationTemplateToCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperComputeDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperComputeSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperHdKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationFullBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationsBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningSerializationAlgorithmIdentifier": () => /* binding */ SigningSerializationAlgorithmIdentifier,
/* harmony export */   "compilerOperationHelperComputeSignatureBCH": () => /* binding */ compilerOperationHelperComputeSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeySignatureBCH": () => /* binding */ compilerOperationHelperHdKeySignatureBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaSignatureBCH": () => /* binding */ compilerOperationHdKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrSignatureBCH": () => /* binding */ compilerOperationHdKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationHelperKeySignatureBCH": () => /* binding */ compilerOperationHelperKeySignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaSignatureBCH": () => /* binding */ compilerOperationKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrSignatureBCH": () => /* binding */ compilerOperationKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationHelperComputeDataSignatureBCH": () => /* binding */ compilerOperationHelperComputeDataSignatureBCH,
/* harmony export */   "compilerOperationHelperKeyDataSignatureBCH": () => /* binding */ compilerOperationHelperKeyDataSignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaDataSignatureBCH": () => /* binding */ compilerOperationKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrDataSignatureBCH": () => /* binding */ compilerOperationKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeyDataSignatureBCH": () => /* binding */ compilerOperationHelperHdKeyDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaDataSignatureBCH": () => /* binding */ compilerOperationHdKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrDataSignatureBCH": () => /* binding */ compilerOperationHdKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationSigningSerializationFullBCH": () => /* binding */ compilerOperationSigningSerializationFullBCH,
/* harmony export */   "compilerOperationsBCH": () => /* binding */ compilerOperationsBCH,
/* harmony export */   "createCompilerBCH": () => /* binding */ createCompilerBCH,
/* harmony export */   "authenticationTemplateToCompilerBCH": () => /* binding */ authenticationTemplateToCompilerBCH
/* harmony export */ });
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/common/signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _vm_virtual_machine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vm/virtual-machine */ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js");
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../compiler-operation-helpers */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js");
/* harmony import */ var _compiler_operations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../compiler-operations */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js");







var SigningSerializationAlgorithmIdentifier;
(function (SigningSerializationAlgorithmIdentifier) {
    /**
     * A.K.A. `SIGHASH_ALL`
     */
    SigningSerializationAlgorithmIdentifier["allOutputs"] = "all_outputs";
    /**
     * A.K.A. `SIGHASH_ALL|ANYONE_CAN_PAY`
     */
    SigningSerializationAlgorithmIdentifier["allOutputsSingleInput"] = "all_outputs_single_input";
    /**
     * A.K.A. `SIGHASH_SINGLE`
     */
    SigningSerializationAlgorithmIdentifier["correspondingOutput"] = "corresponding_output";
    /**
     * A.K.A. `SIGHASH_SINGLE|ANYONE_CAN_PAY`
     */
    SigningSerializationAlgorithmIdentifier["correspondingOutputSingleInput"] = "corresponding_output_single_input";
    /**
     * A.K.A `SIGHASH_NONE`
     */
    SigningSerializationAlgorithmIdentifier["noOutputs"] = "no_outputs";
    /**
     * A.K.A `SIGHASH_NONE|ANYONE_CAN_PAY`
     */
    SigningSerializationAlgorithmIdentifier["noOutputsSingleInput"] = "no_outputs_single_input";
})(SigningSerializationAlgorithmIdentifier || (SigningSerializationAlgorithmIdentifier = {}));
// eslint-disable-next-line complexity
const getSigningSerializationType = (algorithmIdentifier, prefix = '') => {
    switch (algorithmIdentifier) {
        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputs}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.allOutputs | _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.allOutputsSingleInput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.allOutputs |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.singleInput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.correspondingOutput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.correspondingOutputSingleInput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.correspondingOutput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.singleInput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputs}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.noOutputs | _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        case `${prefix}${SigningSerializationAlgorithmIdentifier.noOutputsSingleInput}`:
            return Uint8Array.of(
            // eslint-disable-next-line no-bitwise
            _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.noOutputs |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.singleInput |
                _vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.SigningSerializationFlag.forkId);
        default:
            return undefined;
    }
};
const compilerOperationHelperComputeSignatureBCH = ({ coveredBytecode, identifier, transactionContext, operationName, privateKey, sha256, sign, }) => {
    const [, , algorithm, unknown] = identifier.split('.');
    if (unknown !== undefined) {
        return {
            error: `Unknown component in "${identifier}" – the fragment "${unknown}" is not recognized.`,
            status: 'error',
        };
    }
    if (algorithm === undefined) {
        return {
            error: `Invalid signature identifier. Signatures must be of the form: "[variable_id].${operationName}.[signing_serialization_type]".`,
            status: 'error',
        };
    }
    const signingSerializationType = getSigningSerializationType(algorithm);
    if (signingSerializationType === undefined) {
        return {
            error: `Unknown signing serialization algorithm, "${algorithm}".`,
            status: 'error',
        };
    }
    const serialization = (0,_vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.generateSigningSerializationBCH)({
        correspondingOutput: transactionContext.correspondingOutput,
        coveredBytecode,
        locktime: transactionContext.locktime,
        outpointIndex: transactionContext.outpointIndex,
        outpointTransactionHash: transactionContext.outpointTransactionHash,
        outputValue: transactionContext.outputValue,
        sequenceNumber: transactionContext.sequenceNumber,
        sha256,
        signingSerializationType,
        transactionOutpoints: transactionContext.transactionOutpoints,
        transactionOutputs: transactionContext.transactionOutputs,
        transactionSequenceNumbers: transactionContext.transactionSequenceNumbers,
        version: transactionContext.version,
    });
    const digest = sha256.hash(sha256.hash(serialization));
    const bitcoinEncodedSignature = Uint8Array.from([
        ...sign(privateKey, digest),
        ...signingSerializationType,
    ]);
    return {
        bytecode: bitcoinEncodedSignature,
        signature: { serialization },
        status: 'success',
    };
};
const compilerOperationHelperHdKeySignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['hdKeys', 'transactionContext'],
    environmentProperties: [
        'entityOwnership',
        'ripemd160',
        'secp256k1',
        'sha256',
        'sha512',
        'variables',
        'sourceScriptIds',
        'unlockingScripts',
    ],
    operation: (identifier, data, environment) => {
        const { hdKeys, transactionContext } = data;
        const { secp256k1, sha256, sourceScriptIds, unlockingScripts, } = environment;
        const derivationResult = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperDeriveHdKeyPrivate)({
            environment,
            hdKeys,
            identifier,
        });
        if (derivationResult.status === 'error')
            return derivationResult;
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        return compilerOperationHelperComputeSignatureBCH({
            coveredBytecode: result,
            identifier,
            operationName,
            privateKey: derivationResult.bytecode,
            sha256,
            sign: secp256k1[secp256k1Method],
            transactionContext,
        });
    },
}));
const compilerOperationHdKeyEcdsaSignatureBCH = compilerOperationHelperHdKeySignatureBCH({
    operationName: 'signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationHdKeySchnorrSignatureBCH = compilerOperationHelperHdKeySignatureBCH({
    operationName: 'schnorr_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationHelperKeySignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['keys', 'transactionContext'],
    environmentProperties: [
        'sha256',
        'secp256k1',
        'unlockingScripts',
        'sourceScriptIds',
    ],
    operation: (identifier, data, environment) => {
        const { keys, transactionContext } = data;
        const { secp256k1, sha256, unlockingScripts, sourceScriptIds, } = environment;
        const { privateKeys } = keys;
        const [variableId] = identifier.split('.');
        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];
        if (privateKey === undefined) {
            return {
                error: `Identifier "${identifier}" refers to a Key, but a private key for "${variableId}" (or an existing signature) was not provided in the compilation data.`,
                recoverable: true,
                status: 'error',
            };
        }
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        return compilerOperationHelperComputeSignatureBCH({
            coveredBytecode: result,
            identifier,
            operationName,
            privateKey,
            sha256,
            sign: secp256k1[secp256k1Method],
            transactionContext,
        });
    },
}));
const compilerOperationKeyEcdsaSignatureBCH = compilerOperationHelperKeySignatureBCH({
    operationName: 'signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationKeySchnorrSignatureBCH = compilerOperationHelperKeySignatureBCH({
    operationName: 'schnorr_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationHelperComputeDataSignatureBCH = ({ data, environment, identifier, operationName, privateKey, sha256, sign, }) => {
    const [, , scriptId, unknown] = identifier.split('.');
    if (unknown !== undefined) {
        return {
            error: `Unknown component in "${identifier}" – the fragment "${unknown}" is not recognized.`,
            status: 'error',
        };
    }
    if (scriptId === undefined) {
        return {
            error: `Invalid data signature identifier. Data signatures must be of the form: "[variable_id].${operationName}.[target_script_id]".`,
            status: 'error',
        };
    }
    const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperCompileScript)({
        data,
        environment,
        targetScriptId: scriptId,
    });
    if (result === false) {
        return {
            error: `Data signature tried to sign an unknown target script, "${scriptId}".`,
            status: 'error',
        };
    }
    if ('error' in result) {
        return result;
    }
    const digest = sha256.hash(result);
    return {
        bytecode: sign(privateKey, digest),
        signature: { message: result },
        status: 'success',
    };
};
const compilerOperationHelperKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['keys'],
    environmentProperties: ['sha256', 'secp256k1'],
    operation: (identifier, data, environment) => {
        const { keys } = data;
        const { secp256k1, sha256 } = environment;
        const { privateKeys } = keys;
        const [variableId] = identifier.split('.');
        const privateKey = privateKeys === undefined ? undefined : privateKeys[variableId];
        if (privateKey === undefined) {
            return {
                error: `Identifier "${identifier}" refers to a Key, but a private key for "${variableId}" (or an existing signature) was not provided in the compilation data.`,
                recoverable: true,
                status: 'error',
            };
        }
        return compilerOperationHelperComputeDataSignatureBCH({
            data,
            environment,
            identifier,
            operationName,
            privateKey,
            sha256,
            sign: secp256k1[secp256k1Method],
        });
    },
}));
const compilerOperationKeyEcdsaDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({
    operationName: 'data_signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationKeySchnorrDataSignatureBCH = compilerOperationHelperKeyDataSignatureBCH({
    operationName: 'schnorr_data_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationHelperHdKeyDataSignatureBCH = ({ operationName, secp256k1Method, }) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['hdKeys'],
    environmentProperties: [
        'entityOwnership',
        'ripemd160',
        'secp256k1',
        'sha256',
        'sha512',
        'variables',
    ],
    operation: (identifier, data, environment) => {
        const { hdKeys } = data;
        const { secp256k1, sha256 } = environment;
        const derivationResult = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperDeriveHdKeyPrivate)({
            environment,
            hdKeys,
            identifier,
        });
        if (derivationResult.status === 'error')
            return derivationResult;
        return compilerOperationHelperComputeDataSignatureBCH({
            data,
            environment,
            identifier,
            operationName,
            privateKey: derivationResult.bytecode,
            sha256,
            sign: secp256k1[secp256k1Method],
        });
    },
}));
const compilerOperationHdKeyEcdsaDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({
    operationName: 'data_signature',
    secp256k1Method: 'signMessageHashDER',
});
const compilerOperationHdKeySchnorrDataSignatureBCH = compilerOperationHelperHdKeyDataSignatureBCH({
    operationName: 'schnorr_data_signature',
    secp256k1Method: 'signMessageHashSchnorr',
});
const compilerOperationSigningSerializationFullBCH = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256', 'sourceScriptIds', 'unlockingScripts'],
    operation: (identifier, data, environment) => {
        const [, algorithmOrComponent, unknownPart] = identifier.split('.');
        if (algorithmOrComponent === undefined) {
            return {
                error: `Invalid signing serialization operation. Include the desired component or algorithm, e.g. "signing_serialization.version".`,
                status: 'error',
            };
        }
        if (unknownPart !== undefined) {
            return {
                error: `Unknown component in "${identifier}" – the fragment "${unknownPart}" is not recognized.`,
                status: 'error',
            };
        }
        const signingSerializationType = getSigningSerializationType(algorithmOrComponent, 'full_');
        if (signingSerializationType === undefined) {
            return {
                error: `Unknown signing serialization algorithm, "${algorithmOrComponent}".`,
                status: 'error',
            };
        }
        const { sha256, sourceScriptIds, unlockingScripts } = environment;
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_5__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        const { transactionContext } = data;
        return {
            bytecode: (0,_vm_instruction_sets_common_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.generateSigningSerializationBCH)({
                correspondingOutput: transactionContext.correspondingOutput,
                coveredBytecode: result,
                locktime: transactionContext.locktime,
                outpointIndex: transactionContext.outpointIndex,
                outpointTransactionHash: transactionContext.outpointTransactionHash,
                outputValue: transactionContext.outputValue,
                sequenceNumber: transactionContext.sequenceNumber,
                sha256,
                signingSerializationType,
                transactionOutpoints: transactionContext.transactionOutpoints,
                transactionOutputs: transactionContext.transactionOutputs,
                transactionSequenceNumbers: transactionContext.transactionSequenceNumbers,
                version: transactionContext.version,
            }),
            status: 'success',
        };
    },
});
/* eslint-disable camelcase, @typescript-eslint/naming-convention */
const compilerOperationsBCH = {
    ..._compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon,
    hdKey: {
        data_signature: compilerOperationHdKeyEcdsaDataSignatureBCH,
        public_key: _compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon.hdKey.public_key,
        schnorr_data_signature: compilerOperationHdKeySchnorrDataSignatureBCH,
        schnorr_signature: compilerOperationHdKeySchnorrSignatureBCH,
        signature: compilerOperationHdKeyEcdsaSignatureBCH,
    },
    key: {
        data_signature: compilerOperationKeyEcdsaDataSignatureBCH,
        public_key: _compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon.key.public_key,
        schnorr_data_signature: compilerOperationKeySchnorrDataSignatureBCH,
        schnorr_signature: compilerOperationKeySchnorrSignatureBCH,
        signature: compilerOperationKeyEcdsaSignatureBCH,
    },
    signingSerialization: {
        ..._compiler_operations__WEBPACK_IMPORTED_MODULE_6__.compilerOperationsCommon.signingSerialization,
        full_all_outputs: compilerOperationSigningSerializationFullBCH,
        full_all_outputs_single_input: compilerOperationSigningSerializationFullBCH,
        full_corresponding_output: compilerOperationSigningSerializationFullBCH,
        full_corresponding_output_single_input: compilerOperationSigningSerializationFullBCH,
        full_no_outputs: compilerOperationSigningSerializationFullBCH,
        full_no_outputs_single_input: compilerOperationSigningSerializationFullBCH,
    },
};
/**
 * Create a compiler using the default BCH environment.
 *
 * Internally instantiates the necessary crypto and VM implementations – use
 * `createCompiler` for more control.
 *
 * @param scriptsAndOverrides - a compilation environment from which properties
 * will be used to override properties of the default BCH environment – must
 * include the `scripts` property
 */
const createCompilerBCH = async (scriptsAndOverrides) => {
    const [sha1, sha256, sha512, ripemd160, secp256k1] = await Promise.all([
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha1)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha256)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha512)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateRipemd160)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1)(),
    ]);
    const vm = (0,_vm_virtual_machine__WEBPACK_IMPORTED_MODULE_3__.createAuthenticationVirtualMachine)((0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.createInstructionSetBCH)({
        flags: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.getFlagsForInstructionSetBCH)(_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.instructionSetBCHCurrentStrict),
        ripemd160,
        secp256k1,
        sha1,
        sha256,
    }));
    return (0,_compiler__WEBPACK_IMPORTED_MODULE_4__.createCompiler)({
        ...{
            createAuthenticationProgram: _compiler__WEBPACK_IMPORTED_MODULE_4__.createAuthenticationProgramEvaluationCommon,
            opcodes: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH),
            operations: compilerOperationsBCH,
            ripemd160,
            secp256k1,
            sha256,
            sha512,
            vm,
        },
        ...scriptsAndOverrides,
    });
};
/**
 * Create a BCH `Compiler` from an `AuthenticationTemplate` and an optional set
 * of overrides.
 * @param template - the `AuthenticationTemplate` from which to create the BCH
 * compiler
 * @param overrides - a compilation environment from which properties will be
 * used to override properties of the default BCH environment
 */
const authenticationTemplateToCompilerBCH = async (template, overrides) => createCompilerBCH({
    ...overrides,
    ...(0,_compiler__WEBPACK_IMPORTED_MODULE_4__.authenticationTemplateToCompilationEnvironment)(template),
});
//# sourceMappingURL=compiler-bch.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export CompilerDefaults [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompilerDefaults": () => /* binding */ CompilerDefaults
/* harmony export */ });
var CompilerDefaults;
(function (CompilerDefaults) {
    /**
     * The `addressIndex` used by default scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioAddressIndex"] = 0] = "defaultScenarioAddressIndex";
    /**
     *
     * The value of `currentBlockHeight` in the default authentication template
     * scenario. This is the height of the second mined block after the genesis
     * block: `000000006a625f06636b8bb6ac7b960a8d03705d1ace08b1a19da3fdcc99ddbd`.
     *
     * This default value was chosen to be low enough to simplify the debugging of
     * block height offsets while remaining differentiated from `0` and `1` which
     * are used both as boolean return values and for control flow.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioCurrentBlockHeight"] = 2] = "defaultScenarioCurrentBlockHeight";
    /**
     * The value of `currentBlockTime` in the default authentication template
     * scenario. This is the Median Time-Past block time (BIP113) of block `2`
     * (the block used in `defaultScenarioCurrentBlockHeight`).
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioCurrentBlockTime"] = 1231469665] = "defaultScenarioCurrentBlockTime";
    /**
     * The default `outpointIndex` of inputs in scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioInputOutpointIndex"] = 0] = "defaultScenarioInputOutpointIndex";
    /**
     * The default `outpointTransactionHash` of inputs in scenarios.
     */
    CompilerDefaults["defaultScenarioInputOutpointTransactionHash"] = "0000000000000000000000000000000000000000000000000000000000000000";
    /**
     * The default `sequenceNumber` of inputs in scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioInputSequenceNumber"] = 0] = "defaultScenarioInputSequenceNumber";
    /**
     * The default `unlockingBytecode` of untested inputs in scenarios.
     */
    CompilerDefaults["defaultScenarioInputUnlockingBytecodeHex"] = "";
    /**
     * The default `satoshis` of outputs in scenarios.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioOutputSatoshis"] = 0] = "defaultScenarioOutputSatoshis";
    /**
     * The hexadecimal-encoded value of the `lockingBytecode` in the single
     * default output (`transaction.outputs`) of the default authentication
     * template scenario.
     */
    CompilerDefaults["defaultScenarioTransactionOutputsLockingBytecodeHex"] = "";
    /**
     * The value of `transaction.locktime` in the default authentication template
     * scenario.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioTransactionLocktime"] = 0] = "defaultScenarioTransactionLocktime";
    /**
     * The value of `transaction.version` in the default authentication template
     * scenario. Transaction version `2` enables `OP_CHECKSEQUENCEVERIFY` as
     * described in BIP68, BIP112, and BIP113.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioTransactionVersion"] = 2] = "defaultScenarioTransactionVersion";
    /**
     * The default value of the hypothetical UTXO being spent by the input under
     * test in a scenario.
     */
    CompilerDefaults[CompilerDefaults["defaultScenarioValue"] = 0] = "defaultScenarioValue";
    /**
     * If unset, each `HdKey` uses this `addressOffset`.
     */
    CompilerDefaults[CompilerDefaults["hdKeyAddressOffset"] = 0] = "hdKeyAddressOffset";
    /**
     * If unset, each `HdKey` uses this `hdPublicKeyDerivationPath`.
     */
    CompilerDefaults["hdKeyHdPublicKeyDerivationPath"] = "m";
    /**
     * If unset, each `HdKey` uses this `privateDerivationPath`.
     */
    CompilerDefaults["hdKeyPrivateDerivationPath"] = "m/i";
    /**
     * The prefix used to refer to other scenario bytecode scripts from within a
     * bytecode script. See `AuthenticationTemplateScenarioData.bytecode` for
     * details.
     */
    CompilerDefaults["scenarioBytecodeScriptPrefix"] = "_scenario_";
    /**
     * The prefix used to identify the `check` script from a virtualized
     * `AuthenticationTemplateScriptTest`. For details, see
     * `authenticationTemplateToCompilationEnvironmentVirtualizedTests`.
     */
    CompilerDefaults["virtualizedTestCheckScriptPrefix"] = "__virtualized_test_check_";
    /**
     * The prefix used to identify the concatenated tested and `check` script from
     * a virtualized `AuthenticationTemplateScriptTest`. For details, see
     * `authenticationTemplateToCompilationEnvironmentVirtualizedTests`.
     */
    CompilerDefaults["virtualizedTestLockingScriptPrefix"] = "__virtualized_test_lock_";
    /**
     * The prefix used to identify the `setup` script from a virtualized
     * `AuthenticationTemplateScriptTest`. For details, see
     * `authenticationTemplateToCompilationEnvironmentVirtualizedTests`.
     */
    CompilerDefaults["virtualizedTestUnlockingScriptPrefix"] = "__virtualized_test_unlock_";
})(CompilerDefaults || (CompilerDefaults = {}));
//# sourceMappingURL=compiler-defaults.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export attemptCompilerOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationAttemptBytecodeResolution [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperAddressIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperCompileScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperDeriveHdKeyPrivate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperDeriveHdPrivateNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperGenerateCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHelperUnknownEntity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationRequires [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attemptCompilerOperations": () => /* binding */ attemptCompilerOperations,
/* harmony export */   "compilerOperationRequires": () => /* binding */ compilerOperationRequires,
/* harmony export */   "compilerOperationAttemptBytecodeResolution": () => /* binding */ compilerOperationAttemptBytecodeResolution,
/* harmony export */   "compilerOperationHelperDeriveHdPrivateNode": () => /* binding */ compilerOperationHelperDeriveHdPrivateNode,
/* harmony export */   "compilerOperationHelperUnknownEntity": () => /* binding */ compilerOperationHelperUnknownEntity,
/* harmony export */   "compilerOperationHelperAddressIndex": () => /* binding */ compilerOperationHelperAddressIndex,
/* harmony export */   "compilerOperationHelperDeriveHdKeyPrivate": () => /* binding */ compilerOperationHelperDeriveHdKeyPrivate,
/* harmony export */   "compilerOperationHelperCompileScript": () => /* binding */ compilerOperationHelperCompileScript,
/* harmony export */   "compilerOperationHelperGenerateCoveredBytecode": () => /* binding */ compilerOperationHelperGenerateCoveredBytecode
/* harmony export */ });
/* harmony import */ var _key_hd_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../key/hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _language_resolve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language/resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");



/**
 * Attempt a series of compiler operations, skipping to the next operation if
 * the current operation returns a `CompilerOperationSkip` (indicating it failed
 * and can be skipped). The `finalOperation` may not be skipped, and must either
 * return `CompilerOperationSuccess` or `CompilerOperationError`.
 *
 * @param operations - an array of skippable operations to try
 * @param finalOperation - a final, un-skippable operation
 */
const attemptCompilerOperations = (operations, finalOperation) => (identifier, data, environment) => {
    // eslint-disable-next-line functional/no-loop-statement
    for (const operation of operations) {
        const result = operation(identifier, data, environment);
        if (result.status !== 'skip')
            return result;
    }
    return finalOperation(identifier, data, environment);
};
/**
 * Modify a compiler operation to verify that certain properties exist in the
 * `CompilationData` and `CompilationEnvironment` before executing the provided
 * operation. If the properties don't exist, an error message is returned.
 *
 * This is useful for eliminating repetitive existence checks.
 *
 * @param canBeSkipped - if `true`, the accepted operation may return `false`,
 * and any missing properties will cause the returned operation to return
 * `false` (meaning the operation should be skipped)
 * @param dataProperties - an array of the top-level properties required in the
 * `CompilationData`
 * @param environmentProperties - an array of the top-level properties required
 * in the `CompilationEnvironment`
 * @param operation - the operation to run if all required properties exist
 */
const compilerOperationRequires = ({ canBeSkipped, dataProperties, environmentProperties, operation, }) => (identifier, data, environment) => {
    // eslint-disable-next-line functional/no-loop-statement
    for (const property of environmentProperties) {
        if (environment[property] === undefined)
            return (canBeSkipped
                ? { status: 'skip' }
                : {
                    error: `Cannot resolve "${identifier}" – the "${property}" property was not provided in the compilation environment.`,
                    status: 'error',
                });
    }
    // eslint-disable-next-line functional/no-loop-statement
    for (const property of dataProperties) {
        if (data[property] === undefined)
            return (canBeSkipped
                ? { status: 'skip' }
                : {
                    error: `Cannot resolve "${identifier}" – the "${property}" property was not provided in the compilation data.`,
                    status: 'error',
                });
    }
    return operation(identifier, data, environment);
};
const compilerOperationAttemptBytecodeResolution = compilerOperationRequires({
    canBeSkipped: true,
    dataProperties: ['bytecode'],
    environmentProperties: [],
    operation: (identifier, data) => {
        const { bytecode } = data;
        if (bytecode[identifier] !== undefined) {
            return { bytecode: bytecode[identifier], status: 'success' };
        }
        return { status: 'skip' };
    },
});
// eslint-disable-next-line complexity
const compilerOperationHelperDeriveHdPrivateNode = ({ addressIndex, entityId, entityHdPrivateKey, environment, hdKey, identifier, }) => {
    const addressOffset = hdKey.addressOffset ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.hdKeyAddressOffset;
    const privateDerivationPath = hdKey.privateDerivationPath ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.hdKeyPrivateDerivationPath;
    const i = addressIndex + addressOffset;
    const validPrivatePathWithIndex = /^m(?:\/(?:[0-9]+|i)'?)*$/u;
    if (!validPrivatePathWithIndex.test(privateDerivationPath)) {
        return {
            error: `Could not generate ${identifier} – the path "${privateDerivationPath}" is not a valid "privateDerivationPath".`,
            status: 'error',
        };
    }
    const instancePath = privateDerivationPath.replace('i', i.toString());
    const masterContents = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_0__.decodeHdPrivateKey)(environment, entityHdPrivateKey);
    if (typeof masterContents === 'string') {
        return {
            error: `Could not generate ${identifier} – the HD private key provided for ${entityId} could not be decoded: ${masterContents}`,
            status: 'error',
        };
    }
    const instanceNode = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_0__.deriveHdPath)(environment, masterContents.node, instancePath);
    if (typeof instanceNode === 'string') {
        return {
            error: `Could not generate ${identifier} – the path "${instancePath}" could not be derived for entity "${entityId}": ${instanceNode}`,
            status: 'error',
        };
    }
    return {
        bytecode: instanceNode.privateKey,
        status: 'success',
    };
};
const compilerOperationHelperUnknownEntity = (identifier, variableId) => ({
    error: `Identifier "${identifier}" refers to an HdKey, but the "entityOwnership" for "${variableId}" is not available in this compilation environment.`,
    status: 'error',
});
const compilerOperationHelperAddressIndex = (identifier) => ({
    error: `Identifier "${identifier}" refers to an HdKey, but "hdKeys.addressIndex" was not provided in the compilation data.`,
    status: 'error',
});
const compilerOperationHelperDeriveHdKeyPrivate = ({ environment, hdKeys, identifier, }) => {
    const { addressIndex, hdPrivateKeys } = hdKeys;
    const [variableId] = identifier.split('.');
    const entityId = environment.entityOwnership[variableId];
    if (entityId === undefined) {
        return compilerOperationHelperUnknownEntity(identifier, variableId);
    }
    if (addressIndex === undefined) {
        return compilerOperationHelperAddressIndex(identifier);
    }
    const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];
    if (entityHdPrivateKey === undefined) {
        return {
            error: `Identifier "${identifier}" refers to an HdKey owned by "${entityId}", but an HD private key for this entity (or an existing signature) was not provided in the compilation data.`,
            recoverable: true,
            status: 'error',
        };
    }
    /**
     * Guaranteed to be an `HdKey` if this method is reached in the compiler.
     */
    const hdKey = environment.variables[variableId];
    return compilerOperationHelperDeriveHdPrivateNode({
        addressIndex,
        entityHdPrivateKey,
        entityId,
        environment,
        hdKey,
        identifier,
    });
};
/**
 * Returns `false` if the target script ID doesn't exist in the compilation
 * environment (allows for the caller to generate the error message).
 *
 * If the compilation produced errors, returns a `CompilerOperationErrorFatal`.
 *
 * If the compilation was successful, returns the compiled bytecode as a
 * `Uint8Array`.
 */
const compilerOperationHelperCompileScript = ({ targetScriptId, data, environment, }) => {
    const signingTarget = environment.scripts[targetScriptId];
    const compiledTarget = (0,_language_resolve__WEBPACK_IMPORTED_MODULE_2__.resolveScriptIdentifier)({
        data,
        environment,
        identifier: targetScriptId,
    });
    if (signingTarget === undefined || compiledTarget === false) {
        return false;
    }
    if (typeof compiledTarget === 'string') {
        return {
            error: compiledTarget,
            status: 'error',
        };
    }
    return compiledTarget.bytecode;
};
/**
 * Returns either the properly generated `coveredBytecode` or a
 * `CompilerOperationErrorFatal`.
 */
const compilerOperationHelperGenerateCoveredBytecode = ({ data, environment, identifier, sourceScriptIds, unlockingScripts, }) => {
    const currentScriptId = sourceScriptIds[sourceScriptIds.length - 1];
    if (currentScriptId === undefined) {
        return {
            error: `Identifier "${identifier}" requires a signing serialization, but "coveredBytecode" cannot be determined because the compilation environment's "sourceScriptIds" is empty.`,
            status: 'error',
        };
    }
    const targetLockingScriptId = unlockingScripts[currentScriptId];
    if (targetLockingScriptId === undefined) {
        return {
            error: `Identifier "${identifier}" requires a signing serialization, but "coveredBytecode" cannot be determined because "${currentScriptId}" is not present in the compilation environment "unlockingScripts".`,
            status: 'error',
        };
    }
    const result = compilerOperationHelperCompileScript({
        data,
        environment,
        targetScriptId: targetLockingScriptId,
    });
    if (result === false) {
        return {
            error: `Identifier "${identifier}" requires a signing serialization which covers an unknown locking script, "${targetLockingScriptId}".`,
            status: 'error',
        };
    }
    return result;
};
//# sourceMappingURL=compiler-operation-helpers.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export compilerOperationAddressData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationCurrentBlockHeight [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationCurrentBlockTime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationHdKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCorrespondingOutput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationLocktime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationOutpointIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationOutputValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationSequenceNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutpoints [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationSigningSerializationVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationWalletData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compilerOperationsCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compilerOperationAddressData": () => /* binding */ compilerOperationAddressData,
/* harmony export */   "compilerOperationWalletData": () => /* binding */ compilerOperationWalletData,
/* harmony export */   "compilerOperationCurrentBlockTime": () => /* binding */ compilerOperationCurrentBlockTime,
/* harmony export */   "compilerOperationCurrentBlockHeight": () => /* binding */ compilerOperationCurrentBlockHeight,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutput": () => /* binding */ compilerOperationSigningSerializationCorrespondingOutput,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutputHash": () => /* binding */ compilerOperationSigningSerializationCorrespondingOutputHash,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecode": () => /* binding */ compilerOperationSigningSerializationCoveredBytecode,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecodeLength": () => /* binding */ compilerOperationSigningSerializationCoveredBytecodeLength,
/* harmony export */   "compilerOperationSigningSerializationLocktime": () => /* binding */ compilerOperationSigningSerializationLocktime,
/* harmony export */   "compilerOperationSigningSerializationOutpointIndex": () => /* binding */ compilerOperationSigningSerializationOutpointIndex,
/* harmony export */   "compilerOperationSigningSerializationOutpointTransactionHash": () => /* binding */ compilerOperationSigningSerializationOutpointTransactionHash,
/* harmony export */   "compilerOperationSigningSerializationOutputValue": () => /* binding */ compilerOperationSigningSerializationOutputValue,
/* harmony export */   "compilerOperationSigningSerializationSequenceNumber": () => /* binding */ compilerOperationSigningSerializationSequenceNumber,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpoints": () => /* binding */ compilerOperationSigningSerializationTransactionOutpoints,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpointsHash": () => /* binding */ compilerOperationSigningSerializationTransactionOutpointsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputs": () => /* binding */ compilerOperationSigningSerializationTransactionOutputs,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputsHash": () => /* binding */ compilerOperationSigningSerializationTransactionOutputsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbers": () => /* binding */ compilerOperationSigningSerializationTransactionSequenceNumbers,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbersHash": () => /* binding */ compilerOperationSigningSerializationTransactionSequenceNumbersHash,
/* harmony export */   "compilerOperationSigningSerializationVersion": () => /* binding */ compilerOperationSigningSerializationVersion,
/* harmony export */   "compilerOperationKeyPublicKeyCommon": () => /* binding */ compilerOperationKeyPublicKeyCommon,
/* harmony export */   "compilerOperationHdKeyPublicKeyCommon": () => /* binding */ compilerOperationHdKeyPublicKeyCommon,
/* harmony export */   "compilerOperationsCommon": () => /* binding */ compilerOperationsCommon
/* harmony export */ });
/* harmony import */ var _format_numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");
/* harmony import */ var _key_hd_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../key/hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compiler-operation-helpers */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js");





const compilerOperationAddressData = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['bytecode'],
    environmentProperties: [],
    operation: (identifier, data) => {
        const { bytecode } = data;
        if (identifier in bytecode) {
            return { bytecode: bytecode[identifier], status: 'success' };
        }
        return {
            error: `Identifier "${identifier}" refers to an AddressData, but "${identifier}" was not provided in the CompilationData "bytecode".`,
            recoverable: true,
            status: 'error',
        };
    },
});
const compilerOperationWalletData = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['bytecode'],
    environmentProperties: [],
    operation: (identifier, data) => {
        const { bytecode } = data;
        if (identifier in bytecode) {
            return { bytecode: bytecode[identifier], status: 'success' };
        }
        return {
            error: `Identifier "${identifier}" refers to a WalletData, but "${identifier}" was not provided in the CompilationData "bytecode".`,
            recoverable: true,
            status: 'error',
        };
    },
});
const compilerOperationCurrentBlockTime = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['currentBlockTime'],
    environmentProperties: [],
    operation: (_, data) => {
        return {
            bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.currentBlockTime),
            status: 'success',
        };
    },
});
const compilerOperationCurrentBlockHeight = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['currentBlockHeight'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.bigIntToScriptNumber)(BigInt(data.currentBlockHeight)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationCorrespondingOutput = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => data.transactionContext.correspondingOutput === undefined
        ? { bytecode: Uint8Array.of(), status: 'success' }
        : {
            bytecode: data.transactionContext.correspondingOutput,
            status: 'success',
        },
});
const compilerOperationSigningSerializationCorrespondingOutputHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => data.transactionContext.correspondingOutput === undefined
        ? { bytecode: Uint8Array.of(), status: 'success' }
        : {
            bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.correspondingOutput)),
            status: 'success',
        },
});
const compilerOperationHelperSigningSerializationCoveredBytecode = (returnLength) => (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sourceScriptIds', 'unlockingScripts'],
    operation: (identifier, data, environment) => {
        const { unlockingScripts, sourceScriptIds } = environment;
        const result = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperGenerateCoveredBytecode)({
            data,
            environment,
            identifier,
            sourceScriptIds,
            unlockingScripts,
        });
        if ('error' in result) {
            return result;
        }
        return {
            bytecode: returnLength
                ? (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(result.length))
                : result,
            status: 'success',
        };
    },
});
const compilerOperationSigningSerializationCoveredBytecode = compilerOperationHelperSigningSerializationCoveredBytecode(false);
const compilerOperationSigningSerializationCoveredBytecodeLength = compilerOperationHelperSigningSerializationCoveredBytecode(true);
const compilerOperationSigningSerializationLocktime = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.locktime),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationOutpointIndex = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.outpointIndex),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationOutpointTransactionHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.outpointTransactionHash,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationOutputValue = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.outputValue,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationSequenceNumber = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.sequenceNumber),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutpoints = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.transactionOutpoints,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutpointsHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => ({
        bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.transactionOutpoints)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutputs = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.transactionOutputs,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionOutputsHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => ({
        bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.transactionOutputs)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionSequenceNumbers = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: data.transactionContext.transactionSequenceNumbers,
        status: 'success',
    }),
});
const compilerOperationSigningSerializationTransactionSequenceNumbersHash = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: ['sha256'],
    operation: (_, data, environment) => ({
        bytecode: environment.sha256.hash(environment.sha256.hash(data.transactionContext.transactionSequenceNumbers)),
        status: 'success',
    }),
});
const compilerOperationSigningSerializationVersion = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['transactionContext'],
    environmentProperties: [],
    operation: (_, data) => ({
        bytecode: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.transactionContext.version),
        status: 'success',
    }),
});
const compilerOperationKeyPublicKeyCommon = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['keys'],
    environmentProperties: ['secp256k1'],
    operation: (identifier, data, environment) => {
        const { keys } = data;
        const { secp256k1 } = environment;
        const { privateKeys } = keys;
        const [variableId] = identifier.split('.');
        if (privateKeys !== undefined &&
            privateKeys[variableId] !== undefined) {
            return {
                bytecode: secp256k1.derivePublicKeyCompressed(privateKeys[variableId]),
                status: 'success',
            };
        }
        return {
            error: `Identifier "${identifier}" refers to a public key, but no public or private keys for "${variableId}" were provided in the compilation data.`,
            recoverable: true,
            status: 'error',
        };
    },
}));
const compilerOperationHdKeyPublicKeyCommon = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.attemptCompilerOperations)([_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationAttemptBytecodeResolution], (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationRequires)({
    canBeSkipped: false,
    dataProperties: ['hdKeys'],
    environmentProperties: [
        'entityOwnership',
        'ripemd160',
        'secp256k1',
        'sha256',
        'sha512',
        'variables',
    ],
    operation: 
    // eslint-disable-next-line complexity
    (identifier, data, environment) => {
        const { hdKeys } = data;
        const { hdPrivateKeys, addressIndex, hdPublicKeys } = hdKeys;
        const [variableId] = identifier.split('.');
        const entityId = environment.entityOwnership[variableId];
        if (entityId === undefined) {
            return (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperUnknownEntity)(identifier, variableId);
        }
        if (addressIndex === undefined) {
            return (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperAddressIndex)(identifier);
        }
        const entityHdPrivateKey = hdPrivateKeys === undefined ? undefined : hdPrivateKeys[entityId];
        /**
         * Guaranteed to be an `HdKey` if this method is reached in the compiler.
         */
        const hdKey = environment.variables[variableId];
        if (entityHdPrivateKey !== undefined) {
            const privateResult = (0,_compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHelperDeriveHdPrivateNode)({
                addressIndex,
                entityHdPrivateKey,
                entityId,
                environment,
                hdKey,
                identifier,
            });
            if (privateResult.status === 'error')
                return privateResult;
            return {
                bytecode: environment.secp256k1.derivePublicKeyCompressed(privateResult.bytecode),
                status: 'success',
            };
        }
        const entityHdPublicKey = hdPublicKeys === undefined ? undefined : hdPublicKeys[entityId];
        if (entityHdPublicKey === undefined) {
            return {
                error: `Identifier "${identifier}" refers to an HdKey owned by "${entityId}", but an HD private key or HD public key for this entity was not provided in the compilation data.`,
                recoverable: true,
                status: 'error',
            };
        }
        const addressOffset = hdKey.addressOffset ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.hdKeyAddressOffset;
        const privateDerivationPath = hdKey.privateDerivationPath ??
            _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.hdKeyPrivateDerivationPath;
        const publicDerivationPath = hdKey.publicDerivationPath ?? privateDerivationPath.replace('m', 'M');
        const validPublicPathWithIndex = /^M(?:\/(?:[0-9]+|i))*$/u;
        if (!validPublicPathWithIndex.test(publicDerivationPath)) {
            return {
                error: `Could not generate ${identifier} – the path "${publicDerivationPath}" is not a valid "publicDerivationPath".`,
                status: 'error',
            };
        }
        const i = addressIndex + addressOffset;
        const instancePath = publicDerivationPath.replace('i', i.toString());
        const masterContents = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_1__.decodeHdPublicKey)(environment, entityHdPublicKey);
        if (typeof masterContents === 'string') {
            return {
                error: `Could not generate "${identifier}" – the HD public key provided for "${entityId}" could not be decoded: ${masterContents}`,
                status: 'error',
            };
        }
        const instanceNode = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_1__.deriveHdPath)(environment, masterContents.node, instancePath);
        if (typeof instanceNode === 'string') {
            return {
                error: `Could not generate "${identifier}" – the path "${instancePath}" could not be derived for entity "${entityId}": ${instanceNode}`,
                status: 'error',
            };
        }
        return { bytecode: instanceNode.publicKey, status: 'success' };
    },
}));
/* eslint-disable camelcase, @typescript-eslint/naming-convention */
const compilerOperationsCommon = {
    addressData: compilerOperationAddressData,
    currentBlockHeight: compilerOperationCurrentBlockHeight,
    currentBlockTime: compilerOperationCurrentBlockTime,
    hdKey: {
        public_key: compilerOperationHdKeyPublicKeyCommon,
    },
    key: {
        public_key: compilerOperationKeyPublicKeyCommon,
    },
    signingSerialization: {
        corresponding_output: compilerOperationSigningSerializationCorrespondingOutput,
        corresponding_output_hash: compilerOperationSigningSerializationCorrespondingOutputHash,
        covered_bytecode: compilerOperationSigningSerializationCoveredBytecode,
        covered_bytecode_length: compilerOperationSigningSerializationCoveredBytecodeLength,
        locktime: compilerOperationSigningSerializationLocktime,
        outpoint_index: compilerOperationSigningSerializationOutpointIndex,
        outpoint_transaction_hash: compilerOperationSigningSerializationOutpointTransactionHash,
        output_value: compilerOperationSigningSerializationOutputValue,
        sequence_number: compilerOperationSigningSerializationSequenceNumber,
        transaction_outpoints: compilerOperationSigningSerializationTransactionOutpoints,
        transaction_outpoints_hash: compilerOperationSigningSerializationTransactionOutpointsHash,
        transaction_outputs: compilerOperationSigningSerializationTransactionOutputs,
        transaction_outputs_hash: compilerOperationSigningSerializationTransactionOutputsHash,
        transaction_sequence_numbers: compilerOperationSigningSerializationTransactionSequenceNumbers,
        transaction_sequence_numbers_hash: compilerOperationSigningSerializationTransactionSequenceNumbersHash,
        version: compilerOperationSigningSerializationVersion,
    },
    walletData: compilerOperationWalletData,
};
/* eslint-enable camelcase, @typescript-eslint/naming-convention */
//# sourceMappingURL=compiler-operations.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-types.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-types.js ***!
  \***********************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

//# sourceMappingURL=compiler-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export authenticationTemplateToCompilationEnvironment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationTemplateToCompilationEnvironmentVirtualizedTests [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAuthenticationProgramEvaluationCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCompiler [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createCompilerCommonSynchronous [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCompiler": () => /* binding */ createCompiler,
/* harmony export */   "createAuthenticationProgramEvaluationCommon": () => /* binding */ createAuthenticationProgramEvaluationCommon,
/* harmony export */   "createCompilerCommonSynchronous": () => /* binding */ createCompilerCommonSynchronous,
/* harmony export */   "authenticationTemplateToCompilationEnvironment": () => /* binding */ authenticationTemplateToCompilationEnvironment,
/* harmony export */   "authenticationTemplateToCompilationEnvironmentVirtualizedTests": () => /* binding */ authenticationTemplateToCompilationEnvironmentVirtualizedTests
/* harmony export */ });
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _compiler_operations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-operations */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js");
/* harmony import */ var _language_compile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language/compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _scenarios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scenarios */ "./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js");





/**
 * Create a `Compiler` from the provided compilation environment. This method
 * requires a full `CompilationEnvironment` and does not instantiate any new
 * crypto or VM implementations.
 *
 * @param compilationEnvironment - the environment from which to create the
 * compiler
 */
const createCompiler = (compilationEnvironment) => ({
    environment: compilationEnvironment,
    generateBytecode: (scriptId, data, debug = false) => {
        const result = (0,_language_compile__WEBPACK_IMPORTED_MODULE_3__.compileScript)(scriptId, data, compilationEnvironment);
        return (debug
            ? result
            : result.success
                ? { bytecode: result.bytecode, success: true }
                : {
                    errorType: result.errorType,
                    errors: result.errors,
                    success: false,
                });
    },
    generateScenario: ({ unlockingScriptId, scenarioId }) => (0,_scenarios__WEBPACK_IMPORTED_MODULE_4__.generateScenarioCommon)({
        environment: compilationEnvironment,
        scenarioId,
        unlockingScriptId,
    }),
});
const nullHashLength = 32;
/**
 * A common `createAuthenticationProgram` implementation for most compilers.
 *
 * Accepts the compiled contents of an evaluation and produces a
 * `AuthenticationProgramCommon` which can be evaluated to produce the resulting
 * program state.
 *
 * The precise shape of the authentication program produced by this method is
 * critical to the determinism of BTL evaluations for the compiler in which it
 * is used, it therefore must be standardized between compiler implementations.
 *
 * @param evaluationBytecode - the compiled bytecode to incorporate in the
 * created authentication program
 */
const createAuthenticationProgramEvaluationCommon = (evaluationBytecode) => ({
    inputIndex: 0,
    sourceOutput: {
        lockingBytecode: evaluationBytecode,
        satoshis: Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0]),
    },
    spendingTransaction: {
        inputs: [
            {
                outpointIndex: 0,
                outpointTransactionHash: new Uint8Array(nullHashLength),
                sequenceNumber: 0,
                unlockingBytecode: Uint8Array.of(),
            },
        ],
        locktime: 0,
        outputs: [
            {
                lockingBytecode: Uint8Array.of(),
                satoshis: Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0]),
            },
        ],
        version: 0,
    },
});
/**
 * Synchronously create a compiler using the default common environment. Because
 * this compiler has no access to Secp256k1, Sha256, or a VM, it cannot compile
 * evaluations or operations which require key derivation or hashing.
 *
 * @param scriptsAndOverrides - a compilation environment from which properties
 * will be used to override properties of the default common compilation
 * environment – must include the `scripts` property
 */
const createCompilerCommonSynchronous = (scriptsAndOverrides) => {
    return createCompiler({
        ...{
            createAuthenticationProgram: createAuthenticationProgramEvaluationCommon,
            opcodes: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__.generateBytecodeMap)(_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__.OpcodesCommon),
            operations: _compiler_operations__WEBPACK_IMPORTED_MODULE_2__.compilerOperationsCommon,
        },
        ...scriptsAndOverrides,
    });
};
/**
 * Create a partial `CompilationEnvironment` from an `AuthenticationTemplate` by
 * extracting and formatting the `scripts` and `variables` properties.
 *
 * Note, if this `AuthenticationTemplate` might be malformed, first validate it
 * with `validateAuthenticationTemplate`.
 *
 * @param template - the `AuthenticationTemplate` from which to extract the
 * compilation environment
 */
const authenticationTemplateToCompilationEnvironment = (template) => {
    const scripts = Object.entries(template.scripts).reduce((all, [id, def]) => ({ ...all, [id]: def.script }), {});
    const variables = Object.values(template.entities).reduce((all, entity) => ({ ...all, ...entity.variables }), {});
    const entityOwnership = Object.entries(template.entities).reduce((all, [entityId, entity]) => ({
        ...all,
        ...Object.keys(entity.variables ?? {}).reduce((entityVariables, variableId) => ({
            ...entityVariables,
            [variableId]: entityId,
        }), {}),
    }), {});
    const unlockingScripts = Object.entries(template.scripts).reduce((all, [id, def]) => 'unlocks' in def && def.unlocks !== undefined
        ? { ...all, [id]: def.unlocks }
        : all, {});
    const unlockingScriptTimeLockTypes = Object.entries(template.scripts).reduce((all, [id, def]) => 'timeLockType' in def && def.timeLockType !== undefined
        ? { ...all, [id]: def.timeLockType }
        : all, {});
    const lockingScriptTypes = Object.entries(template.scripts).reduce((all, [id, def]) => 'lockingType' in def &&
        def.lockingType !== undefined
        ? { ...all, [id]: def.lockingType }
        : all, {});
    const scenarios = template.scenarios === undefined
        ? undefined
        : Object.entries(template.scenarios).reduce((all, [id, def]) => ({ ...all, [id]: def }), {});
    return {
        entityOwnership,
        lockingScriptTypes,
        ...(scenarios === undefined ? {} : { scenarios }),
        scripts,
        unlockingScriptTimeLockTypes,
        unlockingScripts,
        variables,
    };
};
/**
 * Create a partial `CompilationEnvironment` from an `AuthenticationTemplate`,
 * virtualizing all script tests as unlocking and locking script pairs.
 *
 * @param template - the authentication template from which to extract the
 * compilation environment
 */
const authenticationTemplateToCompilationEnvironmentVirtualizedTests = (template) => {
    const virtualizedScripts = Object.entries(template.scripts).reduce((all, [scriptId, script]) => {
        if ('tests' in script) {
            return {
                ...all,
                ...script.tests.reduce((tests, test, index) => {
                    const pushTestedScript = script.pushed === true;
                    const checkScriptId = `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.virtualizedTestCheckScriptPrefix}${scriptId}_${index}`;
                    const virtualizedLockingScriptId = `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.virtualizedTestLockingScriptPrefix}${scriptId}_${index}`;
                    const virtualizedUnlockingScriptId = `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_1__.CompilerDefaults.virtualizedTestUnlockingScriptPrefix}${scriptId}_${index}`;
                    return {
                        ...tests,
                        [checkScriptId]: { script: test.check },
                        [virtualizedLockingScriptId]: {
                            script: pushTestedScript
                                ? `<${scriptId}> ${checkScriptId}`
                                : `${scriptId} ${checkScriptId}`,
                        },
                        [virtualizedUnlockingScriptId]: {
                            script: test.setup ?? '',
                            unlocks: virtualizedLockingScriptId,
                        },
                    };
                }, {}),
            };
        }
        return all;
    }, {});
    const templateWithVirtualizedTests = {
        ...template,
        scripts: {
            ...template.scripts,
            ...virtualizedScripts,
        },
    };
    return authenticationTemplateToCompilationEnvironment(templateWithVirtualizedTests);
};
//# sourceMappingURL=compiler.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export compileScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptContents [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptP2shLocking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptP2shUnlocking [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileScriptRaw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export describeExpectedInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "describeExpectedInput": () => /* binding */ describeExpectedInput,
/* harmony export */   "compileScriptContents": () => /* binding */ compileScriptContents,
/* harmony export */   "compileScriptRaw": () => /* binding */ compileScriptRaw,
/* harmony export */   "compileScriptP2shLocking": () => /* binding */ compileScriptP2shLocking,
/* harmony export */   "compileScriptP2shUnlocking": () => /* binding */ compileScriptP2shUnlocking,
/* harmony export */   "compileScript": () => /* binding */ compileScript
/* harmony export */ });
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parse */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js");
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reduce */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");





/**
 * A text-formatting method to pretty-print the list of expected inputs
 * (`Encountered unexpected input while parsing script. Expected ...`). If
 * present, the `EOF` expectation is always moved to the end of the list.
 * @param expectedArray - the alphabetized list of expected inputs produced by
 * `parseScript`
 */
const describeExpectedInput = (expectedArray) => {
    /**
     * The constant used by the parser to denote the end of the input
     */
    const EOF = 'EOF';
    const newArray = expectedArray.filter((value) => value !== EOF);
    // eslint-disable-next-line functional/no-conditional-statement
    if (newArray.length !== expectedArray.length) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        newArray.push('the end of the script');
    }
    const withoutLastElement = newArray.slice(0, newArray.length - 1);
    const lastElement = newArray[newArray.length - 1];
    const arrayRequiresCommas = 3;
    const arrayRequiresOr = 2;
    return `Encountered unexpected input while parsing script. Expected ${newArray.length >= arrayRequiresCommas
        ? withoutLastElement.join(', ').concat(`, or ${lastElement}`)
        : newArray.length === arrayRequiresOr
            ? newArray.join(' or ')
            : lastElement}.`;
};
/**
 * This method is generally for internal use. The `compileScript` method is the
 * recommended API for direct compilation.
 */
const compileScriptContents = ({ data, environment, script, }) => {
    const parseResult = (0,_parse__WEBPACK_IMPORTED_MODULE_2__.parseScript)(script);
    if (!parseResult.status) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: describeExpectedInput(parseResult.expected),
                    range: {
                        endColumn: parseResult.index.column,
                        endLineNumber: parseResult.index.line,
                        startColumn: parseResult.index.column,
                        startLineNumber: parseResult.index.line,
                    },
                },
            ],
            success: false,
        };
    }
    const resolver = (0,_resolve__WEBPACK_IMPORTED_MODULE_4__.createIdentifierResolver)({ data, environment });
    const resolvedScript = (0,_resolve__WEBPACK_IMPORTED_MODULE_4__.resolveScriptSegment)(parseResult.value, resolver);
    const resolutionErrors = (0,_language_utils__WEBPACK_IMPORTED_MODULE_1__.getResolutionErrors)(resolvedScript);
    if (resolutionErrors.length !== 0) {
        return {
            errorType: 'resolve',
            errors: resolutionErrors,
            parse: parseResult.value,
            resolve: resolvedScript,
            success: false,
        };
    }
    const reduction = (0,_reduce__WEBPACK_IMPORTED_MODULE_3__.reduceScript)(resolvedScript, environment.vm, environment.createAuthenticationProgram);
    return {
        ...(reduction.errors === undefined
            ? { bytecode: reduction.bytecode, success: true }
            : { errorType: 'reduce', errors: reduction.errors, success: false }),
        parse: parseResult.value,
        reduce: reduction,
        resolve: resolvedScript,
    };
};
const emptyRange = () => ({
    endColumn: 0,
    endLineNumber: 0,
    startColumn: 0,
    startLineNumber: 0,
});
/**
 * This method is generally for internal use. The `compileScript` method is the
 * recommended API for direct compilation.
 */
const compileScriptRaw = ({ data, environment, scriptId, }) => {
    const script = environment.scripts[scriptId];
    if (script === undefined) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: `No script with an ID of "${scriptId}" was provided in the compilation environment.`,
                    range: emptyRange(),
                },
            ],
            success: false,
        };
    }
    if (environment.sourceScriptIds?.includes(scriptId) === true) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: `A circular dependency was encountered: script "${scriptId}" relies on itself to be generated. (Source scripts: ${environment.sourceScriptIds.join(' → ')})`,
                    range: emptyRange(),
                },
            ],
            success: false,
        };
    }
    const sourceScriptIds = environment.sourceScriptIds === undefined
        ? [scriptId]
        : [...environment.sourceScriptIds, scriptId];
    return compileScriptContents({
        data,
        environment: { ...environment, sourceScriptIds },
        script,
    });
};
const compileScriptP2shLocking = ({ lockingBytecode, vm, }) => {
    const compiler = (0,_compiler__WEBPACK_IMPORTED_MODULE_0__.createCompilerCommonSynchronous)({
        scripts: {
            p2shLocking: 'OP_HASH160 <$(<lockingBytecode> OP_HASH160)> OP_EQUAL',
        },
        variables: { lockingBytecode: { type: 'AddressData' } },
        vm,
    });
    return compiler.generateBytecode('p2shLocking', {
        bytecode: { lockingBytecode },
    });
};
const compileScriptP2shUnlocking = ({ lockingBytecode, unlockingBytecode, }) => {
    const compiler = (0,_compiler__WEBPACK_IMPORTED_MODULE_0__.createCompilerCommonSynchronous)({
        scripts: {
            p2shUnlocking: 'unlockingBytecode <lockingBytecode>',
        },
        variables: {
            lockingBytecode: { type: 'AddressData' },
            unlockingBytecode: { type: 'AddressData' },
        },
    });
    return compiler.generateBytecode('p2shUnlocking', {
        bytecode: { lockingBytecode, unlockingBytecode },
    });
};
/**
 * Parse, resolve, and reduce the selected script using the provided `data` and
 * `environment`.
 *
 * Note, locktime validation only occurs if `transactionContext` is provided in
 * the environment.
 */
// eslint-disable-next-line complexity
const compileScript = (scriptId, data, environment) => {
    const locktimeDisablingSequenceNumber = 0xffffffff;
    const lockTimeTypeBecomesTimestamp = 500000000;
    if (data.transactionContext?.locktime !== undefined) {
        if (environment.unlockingScriptTimeLockTypes?.[scriptId] === 'height' &&
            data.transactionContext.locktime >= lockTimeTypeBecomesTimestamp) {
            return {
                errorType: 'parse',
                errors: [
                    {
                        error: `The script "${scriptId}" requires a height-based locktime (less than 500,000,000), but this transaction uses a timestamp-based locktime ("${data.transactionContext.locktime}").`,
                        range: emptyRange(),
                    },
                ],
                success: false,
            };
        }
        if (environment.unlockingScriptTimeLockTypes?.[scriptId] === 'timestamp' &&
            data.transactionContext.locktime < lockTimeTypeBecomesTimestamp) {
            return {
                errorType: 'parse',
                errors: [
                    {
                        error: `The script "${scriptId}" requires a timestamp-based locktime (greater than or equal to 500,000,000), but this transaction uses a height-based locktime ("${data.transactionContext.locktime}").`,
                        range: emptyRange(),
                    },
                ],
                success: false,
            };
        }
    }
    if (data.transactionContext?.sequenceNumber !== undefined &&
        environment.unlockingScriptTimeLockTypes?.[scriptId] !== undefined &&
        data.transactionContext.sequenceNumber === locktimeDisablingSequenceNumber) {
        return {
            errorType: 'parse',
            errors: [
                {
                    error: `The script "${scriptId}" requires a locktime, but this input's sequence number is set to disable transaction locktime (0xffffffff). This will cause the OP_CHECKLOCKTIMEVERIFY operation to error when the transaction is verified. To be valid, this input must use a sequence number which does not disable locktime.`,
                    range: emptyRange(),
                },
            ],
            success: false,
        };
    }
    const rawResult = compileScriptRaw({
        data,
        environment,
        scriptId,
    });
    if (!rawResult.success) {
        return rawResult;
    }
    const unlocks = environment.unlockingScripts?.[scriptId];
    const unlockingScriptType = unlocks === undefined
        ? undefined
        : environment.lockingScriptTypes?.[unlocks];
    const isP2shUnlockingScript = unlockingScriptType === 'p2sh';
    const lockingScriptType = environment.lockingScriptTypes?.[scriptId];
    const isP2shLockingScript = lockingScriptType === 'p2sh';
    if (isP2shLockingScript) {
        const transformedResult = compileScriptP2shLocking({
            lockingBytecode: rawResult.bytecode,
            vm: environment.vm,
        });
        if (!transformedResult.success) {
            return transformedResult;
        }
        return {
            ...rawResult,
            bytecode: transformedResult.bytecode,
            transformed: 'p2sh-locking',
        };
    }
    if (isP2shUnlockingScript) {
        const lockingBytecodeResult = compileScriptRaw({
            data,
            environment,
            scriptId: unlocks,
        });
        if (!lockingBytecodeResult.success) {
            return lockingBytecodeResult;
        }
        const transformedResult = compileScriptP2shUnlocking({
            lockingBytecode: lockingBytecodeResult.bytecode,
            unlockingBytecode: rawResult.bytecode,
        });
        return {
            ...rawResult,
            bytecode: transformedResult.bytecode,
            transformed: 'p2sh-unlocking',
        };
    }
    return rawResult;
};
//# sourceMappingURL=compile.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export IdentifierResolutionErrorType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IdentifierResolutionType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IdentifierResolutionType": () => /* binding */ IdentifierResolutionType,
/* harmony export */   "IdentifierResolutionErrorType": () => /* binding */ IdentifierResolutionErrorType
/* harmony export */ });
var IdentifierResolutionType;
(function (IdentifierResolutionType) {
    IdentifierResolutionType["opcode"] = "opcode";
    IdentifierResolutionType["variable"] = "variable";
    IdentifierResolutionType["script"] = "script";
})(IdentifierResolutionType || (IdentifierResolutionType = {}));
var IdentifierResolutionErrorType;
(function (IdentifierResolutionErrorType) {
    IdentifierResolutionErrorType["unknown"] = "unknown";
    IdentifierResolutionErrorType["variable"] = "variable";
    IdentifierResolutionErrorType["script"] = "script";
})(IdentifierResolutionErrorType || (IdentifierResolutionErrorType = {}));
//# sourceMappingURL=language-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export allErrorsAreRecoverable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileBtl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export containsRange [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractBytecodeResolutions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractEvaluationSamples [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractEvaluationSamplesRecursive [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractResolvedVariableBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractUnexecutedRanges [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getResolutionErrors [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mergeRanges [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringifyErrors [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mergeRanges": () => /* binding */ mergeRanges,
/* harmony export */   "containsRange": () => /* binding */ containsRange,
/* harmony export */   "compileBtl": () => /* binding */ compileBtl,
/* harmony export */   "getResolutionErrors": () => /* binding */ getResolutionErrors,
/* harmony export */   "allErrorsAreRecoverable": () => /* binding */ allErrorsAreRecoverable,
/* harmony export */   "extractBytecodeResolutions": () => /* binding */ extractBytecodeResolutions,
/* harmony export */   "extractResolvedVariableBytecodeMap": () => /* binding */ extractResolvedVariableBytecodeMap,
/* harmony export */   "stringifyErrors": () => /* binding */ stringifyErrors,
/* harmony export */   "extractEvaluationSamples": () => /* binding */ extractEvaluationSamples,
/* harmony export */   "extractEvaluationSamplesRecursive": () => /* binding */ extractEvaluationSamplesRecursive,
/* harmony export */   "extractUnexecutedRanges": () => /* binding */ extractUnexecutedRanges
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");



const pluckStartPosition = (range) => ({
    startColumn: range.startColumn,
    startLineNumber: range.startLineNumber,
});
const pluckEndPosition = (range) => ({
    endColumn: range.endColumn,
    endLineNumber: range.endLineNumber,
});
/**
 * Combine an array of `Range`s into a single larger `Range`.
 *
 * @param ranges - an array of `Range`s
 * @param parentRange - the range to assume if `ranges` is an empty array
 */
const mergeRanges = (ranges, parentRange = {
    endColumn: 0,
    endLineNumber: 0,
    startColumn: 0,
    startLineNumber: 0,
}) => {
    const minimumRangesToMerge = 2;
    const unsortedMerged = ranges.length < minimumRangesToMerge
        ? ranges.length === 1
            ? ranges[0]
            : parentRange
        : ranges.reduce(
        // eslint-disable-next-line complexity
        (merged, range) => ({
            ...(range.endLineNumber > merged.endLineNumber
                ? pluckEndPosition(range)
                : range.endLineNumber === merged.endLineNumber &&
                    range.endColumn > merged.endColumn
                    ? pluckEndPosition(range)
                    : pluckEndPosition(merged)),
            ...(range.startLineNumber < merged.startLineNumber
                ? pluckStartPosition(range)
                : range.startLineNumber === merged.startLineNumber &&
                    range.startColumn < merged.startColumn
                    ? pluckStartPosition(range)
                    : pluckStartPosition(merged)),
        }), ranges[0]);
    return {
        ...pluckEndPosition(unsortedMerged),
        ...pluckStartPosition(unsortedMerged),
    };
};
/**
 * Returns true if the `outerRange` fully contains the `innerRange`, otherwise,
 * `false`.
 *
 * @param outerRange - the bounds of the outer range
 * @param innerRange - the inner range to test
 * @param exclusive - disallow the `innerRange` from overlapping the
 * `outerRange` (such that the outer start and end columns may not be equal) –
 * defaults to `true`
 */
// eslint-disable-next-line complexity
const containsRange = (outerRange, innerRange, exclusive = true) => {
    const startsAfter = outerRange.startLineNumber < innerRange.startLineNumber
        ? true
        : outerRange.startLineNumber === innerRange.startLineNumber
            ? exclusive
                ? outerRange.startColumn < innerRange.startColumn
                : outerRange.startColumn <= innerRange.startColumn
            : false;
    const endsBefore = outerRange.endLineNumber > innerRange.endLineNumber
        ? true
        : outerRange.endLineNumber === innerRange.endLineNumber
            ? exclusive
                ? outerRange.endColumn > innerRange.endColumn
                : outerRange.endColumn >= innerRange.endColumn
            : false;
    return startsAfter && endsBefore;
};
/**
 * Perform a simplified compilation on a Bitauth Templating Language (BTL)
 * script containing only hex literals, bigint literals, UTF8 literals, and push
 * statements. Scripts may not contain variables/operations, evaluations, or
 * opcode identifiers (use hex literals instead).
 *
 * This is useful for accepting complex user input in advanced interfaces,
 * especially for `AddressData` and `WalletData`.
 *
 * Returns the compiled bytecode as a `Uint8Array`, or throws an error message.
 *
 * @param script - a simple BTL script containing no variables or evaluations
 */
const compileBtl = (script) => {
    const result = (0,_compiler__WEBPACK_IMPORTED_MODULE_2__.createCompilerCommonSynchronous)({
        scripts: { script },
    }).generateBytecode('script', {});
    if (result.success) {
        return result.bytecode;
    }
    return `BTL compilation error:${result.errors.reduce((all, { error, range }) => `${all} [${range.startLineNumber}, ${range.startColumn}]: ${error}`, '')}`;
};
/**
 * Extract a list of the errors which occurred while resolving a script.
 *
 * @param resolvedScript - the result of `resolveScript` from which to extract
 * errors
 */
const getResolutionErrors = (resolvedScript) => resolvedScript.reduce((errors, segment) => {
    switch (segment.type) {
        case 'error':
            return [
                ...errors,
                {
                    error: segment.value,
                    ...(segment.missingIdentifier === undefined
                        ? {}
                        : {
                            missingIdentifier: segment.missingIdentifier,
                            owningEntity: segment.owningEntity,
                        }),
                    range: segment.range,
                },
            ];
        case 'push':
        case 'evaluation':
            return [...errors, ...getResolutionErrors(segment.value)];
        default:
            return errors;
    }
}, []);
/**
 * Verify that every error in the provided array can be resolved by providing
 * additional variables in the compilation data (rather than deeper issues, like
 * problems with the authentication template or wallet implementation).
 *
 * Note, errors are only recoverable if the "entity ownership" of each missing
 * identifier is known (specified in `CompilationData`'s `entityOwnership`).
 *
 * @param errors - an array of compilation errors
 */
const allErrorsAreRecoverable = (errors) => errors.every((error) => 'missingIdentifier' in error && 'owningEntity' in error);
/**
 * Get an array of all resolutions used in a `ResolvedScript`.
 * @param resolvedScript - the resolved script to search
 */
const extractBytecodeResolutions = (resolvedScript) => 
// eslint-disable-next-line complexity
resolvedScript.reduce((all, segment) => {
    switch (segment.type) {
        case 'push':
        case 'evaluation':
            return [...all, ...extractBytecodeResolutions(segment.value)];
        case 'bytecode':
            if ('variable' in segment) {
                return [
                    ...all,
                    {
                        bytecode: segment.value,
                        text: segment.variable,
                        type: 'variable',
                    },
                ];
            }
            if ('script' in segment) {
                return [
                    ...all,
                    ...extractBytecodeResolutions(segment.source),
                    {
                        bytecode: segment.value,
                        text: segment.script,
                        type: 'script',
                    },
                ];
            }
            if ('opcode' in segment) {
                return [
                    ...all,
                    {
                        bytecode: segment.value,
                        text: segment.opcode,
                        type: 'opcode',
                    },
                ];
            }
            return [
                ...all,
                {
                    bytecode: segment.value,
                    text: segment.literal,
                    type: segment.literalType,
                },
            ];
        default:
            return all;
    }
}, []);
/**
 * Extract an object mapping the variable identifiers used in a `ResolvedScript`
 * to their resolved bytecode.
 *
 * @param resolvedScript - the resolved script to search
 */
const extractResolvedVariableBytecodeMap = (resolvedScript) => extractBytecodeResolutions(resolvedScript).reduce((all, resolution) => resolution.type === 'variable'
    ? { ...all, [resolution.text]: resolution.bytecode }
    : all, {});
/**
 * Format a list of `CompilationError`s into a single string, with an error
 * start position following each error. E.g. for line 1, column 2:
 * `The error message. [1, 2]`
 *
 * Errors are separated with the `separator`, which defaults to `; `, e.g.:
 * `The first error message. [1, 2]; The second error message. [3, 4]`
 *
 * @param errors - an array of compilation errors
 * @param separator - the characters with which to join the formatted errors.
 */
const stringifyErrors = (errors, separator = '; ') => {
    return `${errors
        .map((error) => `[${error.range.startLineNumber}, ${error.range.startColumn}] ${error.error}`)
        .join(separator)}`;
};
/**
 * Extract a set of "evaluation samples" from the result of a BTL compilation
 * and a matching debug trace (from `vm.debug`), pairing program states with the
 * source ranges which produced them – like a "source map" for complete
 * evaluations. This is useful for omniscient debuggers like Bitauth IDE.
 *
 * Returns an array of samples and an array of unmatched program states
 * remaining if `nodes` doesn't contain enough instructions to consume all
 * program states provided in `trace`. Returned samples are ordered by the
 * ending position (line and column) of their range.
 *
 * If all program states are consumed before the available nodes are exhausted,
 * the remaining nodes are ignored (the produced samples end at the last
 * instruction for which a program state exists). This usually occurs when an
 * error halts evaluation before the end of the script. (Note: if this occurs,
 * the final trace state will not be used, as it is expected to be the
 * duplicated final result produced by `vm.debug`, and should not be matched
 * with the next instruction. The returned `unmatchedStates` will have a length
 * of `0`.)
 *
 * This method allows for samples to be extracted from a single evaluation;
 * most applications should use `extractEvaluationSamplesRecursive` instead.
 *
 * @remarks
 * This method incrementally concatenates the reduced bytecode from each node,
 * parsing the result into evaluation samples.
 *
 * Each node can contain only a portion of an instruction (like a long push
 * operation), or it can contain multiple instructions (like a long hex literal
 * representing a string of bytecode or an evaluation which is not wrapped by a
 * push).
 *
 * If a node contains only a portion of an instruction, the bytecode from
 * additional nodes are concatenated (and ranges merged) until an instruction
 * can be created. If any bytecode remains after a sample has been created, the
 * next sample begins in the same range. (For this reason, it's possible that
 * samples overlap.)
 *
 * If a node contains more than one instruction, the intermediate states
 * produced before the final state for that sample are saved to the sample's
 * `intermediateStates` array.
 *
 * If the program states in `trace` are exhausted before the final instruction
 * in a sample (usually caused by an evaluation error), the last instruction
 * with a matching program state is used for the sample (with its program
 * state), and the unmatched instructions are ignored. (This allows the "last
 * known state" to be displayed for the sample which caused evaluation to halt.)
 *
 * ---
 *
 * For example, the following script demonstrates many of these cases:
 *
 * `0x00 0x01 0xab01 0xcd9300 $(OP_3 <0x00> OP_SWAP OP_CAT) 0x010203`
 *
 * Which compiles to `0x0001ab01cd93000003010203`, disassembled:
 *
 * `OP_0 OP_PUSHBYTES_1 0xab OP_PUSHBYTES_1 0xcd OP_ADD OP_0 OP_0 OP_PUSHBYTES_3 0x010203`
 *
 * In the script, there are 6 top-level nodes (identified below within `[]`):
 *
 * `[0x00] [0x01] [0xab01] [0xcd9300] [$(OP_3 <0x00> OP_SWAP OP_CAT)] [0x010203]`
 *
 * These nodes together encode 7 instructions, some within a single node, and
 * some split between several nodes. Below we substitute the evaluation for its
 * result `0x0003` to group instructions by `[]`:
 *
 * `[0x00] [0x01 0xab][01 0xcd][93][00] [0x00][03 0x010203]`
 *
 * The "resolution" of samples is limited to the range of single nodes: nodes
 * cannot always be introspected to determine where contained instructions begin
 * and end. For example, it is ambiguous which portions of the evaluation are
 * responsible for the initial `0x00` and which are responsible for the `0x03`.
 *
 * For this reason, the range of each sample is limited to the range(s) of one
 * or more adjacent nodes. Samples may overlap in the range of a node which is
 * responsible for both ending a previous sample and beginning a new sample.
 * (Though, only 2 samples can overlap. If a node is responsible for more than 2
 * instructions, the second sample includes `internalStates` for instructions
 * which occur before the end of the second sample.)
 *
 * In this case, there are 6 samples identified below within `[]`, where each
 * `[` is closed by the closest following `]` (no nesting):
 *
 * `[0x00] [0x01 [0xab01] [0xcd9300]] [[$(OP_3 <0x00> OP_SWAP OP_CAT)] 0x010203]`
 *
 * The ranges for each sample (in terms of nodes) are as follows:
 * - Sample 1: node 1
 * - Sample 2: node 2 + node 3
 * - Sample 3: node 3 + node 4
 * - Sample 4: node 4
 * - Sample 5: node 5
 * - Sample 6: node 5 + node 6
 *
 * Note that the following samples overlap:
 * - Sample 2 and Sample 3
 * - Sample 3 and Sample 4
 * - Sample 5 and Sample 6
 *
 * Finally, note that Sample 4 will have one internal state produced by the
 * `OP_ADD` instruction. Sample 4 then ends with the `OP_0` (`0x00`) instruction
 * at the end of the `0xcd9300` node.
 *
 * ---
 *
 * Note, this implementation relies on the expectation that `trace` begins with
 * the initial program state, contains a single program state per instruction,
 * and ends with the final program state (as produced by `vm.debug`). It also
 * expects the `bytecode` provided by nodes to be parsable by `parseBytecode`.
 *
 * @param evaluationRange - the range of the script node which was evaluated to
 * produce the `trace`
 * @param nodes - an array of reduced nodes to parse
 * @param trace - the `vm.debug` result to map to these nodes
 */
// eslint-disable-next-line complexity
const extractEvaluationSamples = ({ evaluationRange, nodes, trace, }) => {
    const traceWithoutFinalState = trace.length > 1 ? trace.slice(0, -1) : trace.slice();
    if (traceWithoutFinalState.length === 0) {
        return {
            samples: [],
            unmatchedStates: [],
        };
    }
    const samples = [
        {
            evaluationRange,
            internalStates: [],
            range: {
                endColumn: evaluationRange.startColumn,
                endLineNumber: evaluationRange.startLineNumber,
                startColumn: evaluationRange.startColumn,
                startLineNumber: evaluationRange.startLineNumber,
            },
            state: traceWithoutFinalState[0],
        },
    ];
    // eslint-disable-next-line functional/no-let
    let nextState = 1;
    // eslint-disable-next-line functional/no-let
    let nextNode = 0;
    // eslint-disable-next-line functional/no-let, @typescript-eslint/init-declarations
    let incomplete;
    // eslint-disable-next-line functional/no-loop-statement
    while (nextState < traceWithoutFinalState.length && nextNode < nodes.length) {
        const currentNode = nodes[nextNode];
        const { mergedBytecode, mergedRange } = incomplete === undefined
            ? {
                mergedBytecode: currentNode.bytecode,
                mergedRange: currentNode.range,
            }
            : {
                mergedBytecode: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
                    incomplete.bytecode,
                    currentNode.bytecode,
                ]),
                mergedRange: mergeRanges([incomplete.range, currentNode.range]),
            };
        const parsed = (0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.parseBytecode)(mergedBytecode);
        const hasNonMalformedInstructions = parsed.length !== 0 && !('malformed' in parsed[0]);
        if (hasNonMalformedInstructions) {
            const lastInstruction = parsed[parsed.length - 1];
            const validInstructions = ((0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.authenticationInstructionIsMalformed)(lastInstruction)
                ? parsed.slice(0, parsed.length - 1)
                : parsed);
            const firstUnmatchedStateIndex = nextState + validInstructions.length;
            const matchingStates = traceWithoutFinalState.slice(nextState, firstUnmatchedStateIndex);
            const pairedStates = validInstructions.map((instruction, index) => ({
                instruction,
                state: matchingStates[index],
            }));
            /**
             * Guaranteed to have a defined `state` (or the loop would have exited).
             */
            const firstPairedState = pairedStates[0];
            const closesCurrentlyOpenSample = incomplete !== undefined;
            // eslint-disable-next-line functional/no-conditional-statement
            if (closesCurrentlyOpenSample) {
                // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
                samples.push({
                    evaluationRange,
                    instruction: firstPairedState.instruction,
                    internalStates: [],
                    range: mergedRange,
                    state: firstPairedState.state,
                });
            }
            const firstUndefinedStateIndex = pairedStates.findIndex(({ state }) => state === undefined);
            const sampleHasError = firstUndefinedStateIndex !== -1;
            const sampleClosingIndex = sampleHasError
                ? firstUndefinedStateIndex - 1
                : pairedStates.length - 1;
            const closesASecondSample = !closesCurrentlyOpenSample || sampleClosingIndex > 0;
            // eslint-disable-next-line functional/no-conditional-statement
            if (closesASecondSample) {
                const finalState = pairedStates[sampleClosingIndex];
                const secondSamplePairsBegin = closesCurrentlyOpenSample ? 1 : 0;
                const internalStates = pairedStates.slice(secondSamplePairsBegin, sampleClosingIndex);
                // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
                samples.push({
                    evaluationRange,
                    instruction: finalState.instruction,
                    internalStates,
                    range: currentNode.range,
                    state: finalState.state,
                });
            }
            // eslint-disable-next-line functional/no-expression-statement
            nextState = firstUnmatchedStateIndex;
            // eslint-disable-next-line functional/no-conditional-statement
            if ((0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.authenticationInstructionIsMalformed)(lastInstruction)) {
                // eslint-disable-next-line functional/no-expression-statement
                incomplete = {
                    bytecode: (0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeParsedAuthenticationInstructionMalformed)(lastInstruction),
                    range: currentNode.range,
                };
                // eslint-disable-next-line functional/no-conditional-statement
            }
            else {
                // eslint-disable-next-line functional/no-expression-statement
                incomplete = undefined;
            }
            // eslint-disable-next-line functional/no-conditional-statement
        }
        else {
            const lastInstruction = parsed[parsed.length - 1];
            // eslint-disable-next-line functional/no-expression-statement
            incomplete =
                lastInstruction === undefined
                    ? undefined
                    : {
                        bytecode: (0,_vm_instruction_sets_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeParsedAuthenticationInstructionMalformed)(lastInstruction),
                        range: mergedRange,
                    };
        }
        // eslint-disable-next-line functional/no-expression-statement
        nextNode += 1;
    }
    /**
     * Because we ran out of `trace` states before all `nodes` were matched, we
     * know an error occurred which halted evaluation. This error is indicated in
     * the result by returning an empty array of `unmatchedStates`. Successful
     * evaluations will always return at least one unmatched state: the final
     * "evaluation result" state produced by `vm.debug`.
     */
    const errorOccurred = nextNode < nodes.length;
    const unmatchedStates = errorOccurred
        ? []
        : trace.slice(nextState);
    return {
        samples,
        unmatchedStates,
    };
};
/**
 * Similar to `extractEvaluationSamples`, but recursively extracts samples from
 * evaluations within the provided array of nodes.
 *
 * Because BTL evaluations are fully self-contained, there should never be
 * unmatched states from evaluations within a script reduction trace tree. (For
 * this reason, this method does not return the `unmatchedStates` from nested
 * evaluations.)
 *
 * Returned samples are ordered by the ending position (line and column) of
 * their range. Samples from BTL evaluations which occur within an outer
 * evaluation appear before their parent sample (which uses their result).
 *
 * @param evaluationRange - the range of the script node which was evaluated to
 * produce the `trace`
 * @param nodes - an array of reduced nodes to parse
 * @param trace - the `vm.debug` result to map to these nodes
 */
const extractEvaluationSamplesRecursive = ({ evaluationRange, nodes, trace, }) => {
    const extractEvaluations = (node, depth = 1) => {
        if ('push' in node) {
            return node.push.script.reduce((all, childNode) => [...all, ...extractEvaluations(childNode, depth)], []);
        }
        if ('source' in node) {
            const childSamples = node.source.script.reduce((all, childNode) => [
                ...all,
                ...extractEvaluations(childNode, depth + 1),
            ], []);
            const traceWithoutUnlockingPhase = node.trace.slice(1);
            const evaluationBeginToken = '$(';
            const evaluationEndToken = ')';
            const extracted = extractEvaluationSamples({
                evaluationRange: {
                    endColumn: node.range.endColumn - evaluationEndToken.length,
                    endLineNumber: node.range.endLineNumber,
                    startColumn: node.range.startColumn + evaluationBeginToken.length,
                    startLineNumber: node.range.startLineNumber,
                },
                nodes: node.source.script,
                trace: traceWithoutUnlockingPhase,
            });
            return [...extracted.samples, ...childSamples];
        }
        return [];
    };
    const { samples, unmatchedStates } = extractEvaluationSamples({
        evaluationRange,
        nodes,
        trace,
    });
    const childSamples = nodes.reduce((all, node) => [...all, ...extractEvaluations(node)], []);
    const endingOrderedSamples = [...samples, ...childSamples].sort((a, b) => {
        const linesOrdered = a.range.endLineNumber - b.range.endLineNumber;
        return linesOrdered === 0
            ? a.range.endColumn - b.range.endColumn
            : linesOrdered;
    });
    return {
        samples: endingOrderedSamples,
        unmatchedStates,
    };
};
const stateIsExecuting = (state) => state.executionStack.every((item) => item);
/**
 * Extract an array of ranges which were unused by an evaluation. This is useful
 * in development tooling for fading out or hiding code which is unimportant to
 * the current evaluation being tested.
 *
 * @remarks
 * Only ranges which are guaranteed to be unimportant to an evaluation are
 * returned by this method. These ranges are extracted from samples which:
 * - are preceded by a sample which ends with execution disabled (e.g. an
 * unsuccessful `OP_IF`)
 * - end with execution disabled, and
 * - contain no `internalStates` which enable execution.
 *
 * Note, internal states which temporarily re-enable and then disable execution
 * again can still have an effect on the parent evaluation, so this method
 * conservatively excludes such samples. For example, the hex literal
 * `0x675167`, which encodes `OP_ELSE OP_1 OP_ELSE`, could begin and end with
 * states in which execution is disabled, yet a `1` is pushed to the stack
 * during the sample's evaluation. (Samples like this are unusual, and can
 * almost always be reformatted to clearly separate the executed and unexecuted
 * instructions.)
 *
 * @param samples - an array of samples ordered by the ending position (line and
 * column) of their range.
 * @param evaluationBegins - the line and column at which the initial sample's
 * evaluation range begins (where the preceding state is assumed to be
 * executing), defaults to `1,1`
 */
const extractUnexecutedRanges = (samples, evaluationBegins = '1,1') => {
    const reduced = samples.reduce((all, sample) => {
        const { precedingStateSkipsByEvaluation, unexecutedRanges } = all;
        const currentEvaluationStartLineAndColumn = `${sample.evaluationRange.startLineNumber},${sample.evaluationRange.startColumn}`;
        const precedingStateSkips = precedingStateSkipsByEvaluation[currentEvaluationStartLineAndColumn];
        const endsWithSkip = !stateIsExecuting(sample.state);
        const sampleHasNoExecutedInstructions = endsWithSkip &&
            sample.internalStates.every((group) => !stateIsExecuting(group.state));
        if (precedingStateSkips && sampleHasNoExecutedInstructions) {
            return {
                precedingStateSkipsByEvaluation: {
                    ...precedingStateSkipsByEvaluation,
                    [currentEvaluationStartLineAndColumn]: true,
                },
                unexecutedRanges: [...unexecutedRanges, sample.range],
            };
        }
        return {
            precedingStateSkipsByEvaluation: {
                ...precedingStateSkipsByEvaluation,
                [currentEvaluationStartLineAndColumn]: endsWithSkip,
            },
            unexecutedRanges,
        };
    }, {
        precedingStateSkipsByEvaluation: {
            [evaluationBegins]: false,
        },
        unexecutedRanges: [],
    });
    const canHaveContainedRanges = 2;
    const containedRangesExcluded = reduced.unexecutedRanges.length < canHaveContainedRanges
        ? reduced.unexecutedRanges
        : reduced.unexecutedRanges.slice(0, -1).reduceRight((all, range) => {
            if (containsRange(all[0], range)) {
                return all;
            }
            return [range, ...all];
        }, [reduced.unexecutedRanges[reduced.unexecutedRanges.length - 1]]);
    return containedRangesExcluded;
};
//# sourceMappingURL=language-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/language.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export BuiltInVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .BuiltInVariables */
/*! export IdentifierResolutionErrorType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js .IdentifierResolutionErrorType */
/*! export IdentifierResolutionType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js .IdentifierResolutionType */
/*! export allErrorsAreRecoverable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .allErrorsAreRecoverable */
/*! export compileBtl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .compileBtl */
/*! export compileScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScript */
/*! export compileScriptContents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptContents */
/*! export compileScriptP2shLocking [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptP2shLocking */
/*! export compileScriptP2shUnlocking [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptP2shUnlocking */
/*! export compileScriptRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .compileScriptRaw */
/*! export containsRange [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .containsRange */
/*! export createIdentifierResolver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .createIdentifierResolver */
/*! export describeExpectedInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js .describeExpectedInput */
/*! export extractBytecodeResolutions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractBytecodeResolutions */
/*! export extractEvaluationSamples [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractEvaluationSamples */
/*! export extractEvaluationSamplesRecursive [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractEvaluationSamplesRecursive */
/*! export extractResolvedVariableBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractResolvedVariableBytecodeMap */
/*! export extractUnexecutedRanges [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .extractUnexecutedRanges */
/*! export getResolutionErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .getResolutionErrors */
/*! export mergeRanges [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .mergeRanges */
/*! export parseScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js .parseScript */
/*! export reduceScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js .reduceScript */
/*! export resolveScriptIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .resolveScriptIdentifier */
/*! export resolveScriptSegment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .resolveScriptSegment */
/*! export resolveVariableIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js .resolveVariableIdentifier */
/*! export stringifyErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js .stringifyErrors */
/*! export verifyBtlEvaluationState [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js .verifyBtlEvaluationState */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compileScript": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScript,
/* harmony export */   "compileScriptContents": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptContents,
/* harmony export */   "compileScriptP2shLocking": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptP2shLocking,
/* harmony export */   "compileScriptP2shUnlocking": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptP2shUnlocking,
/* harmony export */   "compileScriptRaw": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.compileScriptRaw,
/* harmony export */   "describeExpectedInput": () => /* reexport safe */ _compile__WEBPACK_IMPORTED_MODULE_0__.describeExpectedInput,
/* harmony export */   "allErrorsAreRecoverable": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.allErrorsAreRecoverable,
/* harmony export */   "compileBtl": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.compileBtl,
/* harmony export */   "containsRange": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.containsRange,
/* harmony export */   "extractBytecodeResolutions": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractBytecodeResolutions,
/* harmony export */   "extractEvaluationSamples": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamples,
/* harmony export */   "extractEvaluationSamplesRecursive": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamplesRecursive,
/* harmony export */   "extractResolvedVariableBytecodeMap": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractResolvedVariableBytecodeMap,
/* harmony export */   "extractUnexecutedRanges": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.extractUnexecutedRanges,
/* harmony export */   "getResolutionErrors": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.getResolutionErrors,
/* harmony export */   "mergeRanges": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.mergeRanges,
/* harmony export */   "stringifyErrors": () => /* reexport safe */ _language_utils__WEBPACK_IMPORTED_MODULE_1__.stringifyErrors,
/* harmony export */   "IdentifierResolutionErrorType": () => /* reexport safe */ _language_types__WEBPACK_IMPORTED_MODULE_2__.IdentifierResolutionErrorType,
/* harmony export */   "IdentifierResolutionType": () => /* reexport safe */ _language_types__WEBPACK_IMPORTED_MODULE_2__.IdentifierResolutionType,
/* harmony export */   "parseScript": () => /* reexport safe */ _parse__WEBPACK_IMPORTED_MODULE_3__.parseScript,
/* harmony export */   "reduceScript": () => /* reexport safe */ _reduce__WEBPACK_IMPORTED_MODULE_4__.reduceScript,
/* harmony export */   "verifyBtlEvaluationState": () => /* reexport safe */ _reduce__WEBPACK_IMPORTED_MODULE_4__.verifyBtlEvaluationState,
/* harmony export */   "BuiltInVariables": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.BuiltInVariables,
/* harmony export */   "createIdentifierResolver": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.createIdentifierResolver,
/* harmony export */   "resolveScriptIdentifier": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.resolveScriptIdentifier,
/* harmony export */   "resolveScriptSegment": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.resolveScriptSegment,
/* harmony export */   "resolveVariableIdentifier": () => /* reexport safe */ _resolve__WEBPACK_IMPORTED_MODULE_5__.resolveVariableIdentifier
/* harmony export */ });
/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");
/* harmony import */ var _language_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parse */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js");
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reduce */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js");
/* harmony import */ var _resolve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");






//# sourceMappingURL=language.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/parse.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export parseScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseScript": () => /* binding */ parseScript
/* harmony export */ });
/* harmony import */ var _parsimmon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsimmon */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parsimmon.js");

/* eslint-disable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */
const authenticationScriptParser = _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.createLanguage({
    script: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace, r.expression.sepBy(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.optWhitespace, (_, expressions) => expressions).node('Script'),
    expression: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.alt(r.comment, r.push, r.evaluation, r.utf8, r.binary, r.hex, r.bigint, r.identifier),
    comment: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.alt(r.singleLineComment, r.multiLineComment).node('Comment'),
    singleLineComment: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('//').desc("the start of a single-line comment ('//')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^\n]*/u), (__, comment) => comment.trim()),
    multiLineComment: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('/*').desc("the start of a multi-line comment ('/*')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[\s\S]*?\*\//u).desc("the end of this multi-line comment ('*/')"), (__, comment) => comment.slice(0, -'*/'.length).trim()),
    push: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('<').desc("the start of a push statement ('<')"), r.script, _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('>').desc("the end of this push statement ('>')"), (_, push) => push).node('Push'),
    evaluation: (r) => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('$').desc("the start of an evaluation ('$')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('(').desc("the opening parenthesis of this evaluation ('(')"), r.script, _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string(')').desc("the closing parenthesis of this evaluation (')')"), (_, __, evaluation) => evaluation).node('Evaluation'),
    identifier: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[a-zA-Z_][.a-zA-Z0-9_-]*/u)
        .desc('a valid identifier')
        .node('Identifier'),
    utf8: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.alt(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('"').desc('a double quote (")'), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^"]*/u), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('"').desc('a closing double quote (")'), (__, literal) => literal), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string("'").desc("a single quote (')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[^']*/u), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string("'").desc("a closing single quote (')"), (__, literal) => literal)).node('UTF8Literal'),
    hex: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('0x').desc("a hex literal ('0x...')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[0-9a-f]_*(?:_*[0-9a-f]_*[0-9a-f]_*)*[0-9a-f]/iu).desc('a valid hexadecimal string'), (__, literal) => literal).node('HexLiteral'),
    binary: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.seqMap(_parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.string('0b').desc("a binary literal ('0b...')"), _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/[01]+(?:[01_]*[01]+)*/iu).desc('a string of binary digits'), (__, literal) => literal).node('BinaryLiteral'),
    bigint: () => _parsimmon__WEBPACK_IMPORTED_MODULE_0__.P.regexp(/-?[0-9]+(?:[0-9_]*[0-9]+)*/u)
        .desc('an integer literal')
        .node('BigIntLiteral'),
});
/* eslint-enable sort-keys, @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access */
const parseScript = (script) => authenticationScriptParser.script.parse(script);
//# sourceMappingURL=parse.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/parsimmon.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/parsimmon.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export P [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": () => /* binding */ P
/* harmony export */ });
/**
 * This file is derived from https://github.com/jneen/parsimmon and
 * https://github.com/DefinitelyTyped/DefinitelyTyped.
 */
/* eslint-disable prefer-destructuring, @typescript-eslint/unified-signatures, functional/no-method-signature, functional/no-throw-statement, functional/no-conditional-statement, @typescript-eslint/no-this-alias, consistent-this, @typescript-eslint/ban-ts-comment, prefer-spread, @typescript-eslint/restrict-template-expressions, func-names, @typescript-eslint/init-declarations, new-cap, @typescript-eslint/require-array-sort-compare, guard-for-in, no-plusplus, functional/no-let, functional/no-loop-statement, @typescript-eslint/prefer-for-of, @typescript-eslint/restrict-plus-operands, functional/immutable-data, @typescript-eslint/no-use-before-define, @typescript-eslint/strict-boolean-expressions, no-param-reassign, functional/no-expression-statement, functional/no-this-expression, @typescript-eslint/no-explicit-any, func-style, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return, @typescript-eslint/naming-convention, @typescript-eslint/method-signature-style */
// cspell: ignore accum
function Parsimmon(action) {
    // @ts-expect-error
    if (!(this instanceof Parsimmon)) {
        // @ts-expect-error
        return new Parsimmon(action);
    }
    // @ts-expect-error
    this._ = action;
}
const _ = Parsimmon.prototype;
// -*- Helpers -*-
function makeSuccess(index, value) {
    return {
        expected: [],
        furthest: -1,
        index,
        status: true,
        value,
    };
}
function makeFailure(index, expected) {
    expected = [expected];
    return {
        expected,
        furthest: index,
        index: -1,
        status: false,
        value: null,
    };
}
function mergeReplies(result, last) {
    if (!last) {
        return result;
    }
    if (result.furthest > last.furthest) {
        return result;
    }
    const expected = result.furthest === last.furthest
        ? union(result.expected, last.expected)
        : last.expected;
    return {
        expected,
        furthest: last.furthest,
        index: result.index,
        status: result.status,
        value: result.value,
    };
}
function makeLineColumnIndex(input, i) {
    const lines = input.slice(0, i).split('\n');
    /*
     * Note that unlike the character offset, the line and column offsets are
     * 1-based.
     */
    const lineWeAreUpTo = lines.length;
    const columnWeAreUpTo = lines[lines.length - 1].length + 1;
    return {
        column: columnWeAreUpTo,
        line: lineWeAreUpTo,
        offset: i,
    };
}
// Returns the sorted set union of two arrays of strings
function union(xs, ys) {
    const obj = {};
    for (let i = 0; i < xs.length; i++) {
        // @ts-expect-error
        obj[xs[i]] = true;
    }
    for (let j = 0; j < ys.length; j++) {
        // @ts-expect-error
        obj[ys[j]] = true;
    }
    const keys = [];
    for (const k in obj) {
        keys.push(k);
    }
    keys.sort();
    return keys;
}
// -*- Error Formatting -*-
function flags(re) {
    const s = String(re);
    return s.slice(s.lastIndexOf('/') + 1);
}
function anchoredRegexp(re) {
    return RegExp(`^(?:${re.source})`, flags(re));
}
// -*- Combinators -*-
function seq(...params) {
    const parsers = [].slice.call(params);
    const numParsers = parsers.length;
    return Parsimmon(function (input, i) {
        let result;
        const accum = new Array(numParsers);
        for (let j = 0; j < numParsers; j += 1) {
            result = mergeReplies(parsers[j]._(input, i), result);
            if (!result.status) {
                return result;
            }
            accum[j] = result.value;
            i = result.index;
        }
        return mergeReplies(makeSuccess(i, accum), result);
    });
}
function seqMap(...params) {
    const args = [].slice.call(params);
    const mapper = args.pop();
    return seq.apply(null, args).map(function (results) {
        // @ts-expect-error
        return mapper.apply(null, results);
    });
}
function createLanguage(parsers) {
    const language = {};
    for (const key in parsers) {
        (function (rule) {
            const func = function () {
                // @ts-expect-error
                return parsers[rule](language);
            };
            // @ts-expect-error
            language[rule] = lazy(func);
        })(key);
    }
    return language;
}
function alt(...params) {
    const parsers = [].slice.call(params);
    return Parsimmon(function (input, i) {
        let result;
        for (let j = 0; j < parsers.length; j += 1) {
            result = mergeReplies(parsers[j]._(input, i), result);
            if (result.status) {
                return result;
            }
        }
        return result;
    });
}
function sepBy(parser, separator) {
    return sepBy1(parser, separator).or(succeed([]));
}
function sepBy1(parser, separator) {
    const pairs = separator.then(parser).many();
    return seqMap(parser, pairs, function (r, rs) {
        return [r].concat(rs);
    });
}
// -*- Core Parsing Methods -*-
_.parse = function (input) {
    const result = this.skip(eof)._(input, 0);
    if (result.status) {
        return {
            status: true,
            value: result.value,
        };
    }
    return {
        expected: result.expected,
        index: makeLineColumnIndex(input, result.furthest),
        status: false,
    };
};
// -*- Other Methods -*-
_.or = function (alternative) {
    return alt(this, alternative);
};
_.then = function (next) {
    return seq(this, next).map(function (results) {
        return results[1];
    });
};
_.many = function () {
    const self = this;
    return Parsimmon(function (input, i) {
        const accum = [];
        let result;
        for (;;) {
            result = mergeReplies(self._(input, i), result);
            if (result.status) {
                /* istanbul ignore if */ if (i === result.index) {
                    throw new Error('infinite loop detected in .many() parser --- calling .many() on ' +
                        'a parser which can accept zero characters is usually the cause');
                }
                i = result.index;
                accum.push(result.value);
            }
            else {
                return mergeReplies(makeSuccess(i, accum), result);
            }
        }
    });
};
_.map = function (fn) {
    const self = this;
    return Parsimmon(function (input, i) {
        const result = self._(input, i);
        if (!result.status) {
            return result;
        }
        return mergeReplies(makeSuccess(result.index, fn(result.value)), result);
    });
};
_.skip = function (next) {
    return seq(this, next).map(function (results) {
        return results[0];
    });
};
_.node = function (name) {
    return seqMap(index, this, index, function (start, value, end) {
        return {
            end,
            name,
            start,
            value,
        };
    });
};
_.sepBy = function (separator) {
    return sepBy(this, separator);
};
_.desc = function (expected) {
    expected = [expected];
    const self = this;
    return Parsimmon(function (input, i) {
        const reply = self._(input, i);
        if (!reply.status) {
            reply.expected = expected;
        }
        return reply;
    });
};
// -*- Constructors -*-
function string(str) {
    const expected = `'${str}'`;
    return Parsimmon(function (input, i) {
        const j = i + str.length;
        const head = input.slice(i, j);
        if (head === str) {
            return makeSuccess(j, head);
        }
        return makeFailure(i, expected);
    });
}
function regexp(re, group = 0) {
    const anchored = anchoredRegexp(re);
    const expected = String(re);
    return Parsimmon(function (input, i) {
        const match = anchored.exec(input.slice(i));
        if (match) {
            const fullMatch = match[0];
            const groupMatch = match[group];
            return makeSuccess(i + fullMatch.length, groupMatch);
        }
        return makeFailure(i, expected);
    });
}
function succeed(value) {
    return Parsimmon(function (__, i) {
        return makeSuccess(i, value);
    });
}
function lazy(f) {
    const parser = Parsimmon(function (input, i) {
        parser._ = f()._;
        return parser._(input, i);
    });
    return parser;
}
// -*- Base Parsers -*-
const index = Parsimmon(function (input, i) {
    return makeSuccess(i, makeLineColumnIndex(input, i));
});
const eof = Parsimmon(function (input, i) {
    if (i < input.length) {
        return makeFailure(i, 'EOF');
    }
    return makeSuccess(i, null);
});
const optWhitespace = regexp(/\s*/u).desc('optional whitespace');
const whitespace = regexp(/\s+/u).desc('whitespace');
const P = {
    alt,
    createLanguage,
    index,
    lazy,
    makeFailure,
    makeSuccess,
    of: succeed,
    optWhitespace,
    regexp,
    sepBy,
    sepBy1,
    seq,
    seqMap,
    string,
    succeed,
    whitespace,
};
//# sourceMappingURL=parsimmon.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/reduce.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export reduceScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export verifyBtlEvaluationState [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "verifyBtlEvaluationState": () => /* binding */ verifyBtlEvaluationState,
/* harmony export */   "reduceScript": () => /* binding */ reduceScript
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");



const emptyReductionTraceNode = (range) => ({
    bytecode: Uint8Array.of(),
    range,
});
/**
 * Perform the standard verification of BTL evaluation results. This ensures
 * that evaluations complete as expected: if an error occurs while computing an
 * evaluation, script compilation should fail.
 *
 * Three requirements are enforced:
 * - the evaluation may not produce an `error`
 * - the resulting stack must contain exactly 1 item
 * - the resulting execution stack must be empty (no missing `OP_ENDIF`s)
 *
 * This differs from the virtual machine's built-in `vm.verify` in that it is
 * often more lenient, for example, evaluations can succeed with an non-truthy
 * value on top of the stack.
 *
 * @param state - the final program state to verify
 */
const verifyBtlEvaluationState = (state) => {
    if (state.error !== undefined) {
        return state.error;
    }
    if (state.executionStack.length !== 0) {
        return _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.nonEmptyExecutionStack;
    }
    if (state.stack.length !== 1) {
        return _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.requiresCleanStack;
    }
    return true;
};
/**
 * Reduce a resolved script, returning the resulting bytecode and a trace of the
 * reduction process.
 *
 * This method will return an error if provided a `resolvedScript` with
 * resolution errors. To check for resolution errors, use `getResolutionErrors`.
 *
 * @param resolvedScript - the `CompiledScript` to reduce
 * @param vm - the `AuthenticationVirtualMachine` to use for evaluations
 * @param createEvaluationProgram - a method which accepts the compiled bytecode
 * of an evaluation and returns the authentication program used to evaluate it
 */
const reduceScript = (resolvedScript, vm, createEvaluationProgram) => {
    const script = resolvedScript.map((segment) => {
        switch (segment.type) {
            case 'bytecode':
                return { bytecode: segment.value, range: segment.range };
            case 'push': {
                const push = reduceScript(segment.value, vm, createEvaluationProgram);
                const bytecode = (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)(push.bytecode);
                return {
                    bytecode,
                    ...(push.errors === undefined ? undefined : { errors: push.errors }),
                    push,
                    range: segment.range,
                };
            }
            case 'evaluation': {
                if (typeof vm === 'undefined' ||
                    typeof createEvaluationProgram === 'undefined') {
                    return {
                        errors: [
                            {
                                error: 'Both a VM and a createState method are required to reduce evaluations.',
                                range: segment.range,
                            },
                        ],
                        ...emptyReductionTraceNode(segment.range),
                    };
                }
                const reductionTrace = reduceScript(segment.value, vm, createEvaluationProgram);
                if (reductionTrace.errors !== undefined) {
                    return {
                        ...emptyReductionTraceNode(segment.range),
                        errors: reductionTrace.errors,
                        source: reductionTrace,
                        trace: [],
                    };
                }
                const trace = vm.debug(createEvaluationProgram(reductionTrace.bytecode));
                /**
                 * `vm.debug` should always return at least one state.
                 */
                const lastState = trace[trace.length - 1];
                const result = verifyBtlEvaluationState(lastState);
                const bytecode = lastState.stack[lastState.stack.length - 1];
                return {
                    ...(typeof result === 'string'
                        ? {
                            bytecode: Uint8Array.of(),
                            errors: [
                                {
                                    error: `Failed to reduce evaluation: ${result}`,
                                    range: segment.range,
                                },
                            ],
                        }
                        : {
                            bytecode,
                        }),
                    range: segment.range,
                    source: reductionTrace,
                    trace,
                };
            }
            case 'comment':
                return emptyReductionTraceNode(segment.range);
            case 'error':
                return {
                    errors: [
                        {
                            error: `Tried to reduce a BTL script with resolution errors: ${segment.value}`,
                            range: segment.range,
                        },
                    ],
                    ...emptyReductionTraceNode(segment.range),
                };
            // eslint-disable-next-line functional/no-conditional-statement
            default:
                // eslint-disable-next-line functional/no-throw-statement, @typescript-eslint/no-throw-literal, no-throw-literal
                throw new Error(`"${segment.type}" is not a known segment type.`);
        }
    });
    const reduction = script.reduce((all, segment) => ({
        bytecode: [...all.bytecode, segment.bytecode],
        ranges: [...all.ranges, segment.range],
        ...(all.errors !== undefined || segment.errors !== undefined
            ? {
                errors: [
                    ...(all.errors === undefined ? [] : all.errors),
                    ...(segment.errors === undefined ? [] : segment.errors),
                ],
            }
            : undefined),
    }), { bytecode: [], ranges: [] });
    return {
        ...(reduction.errors === undefined
            ? undefined
            : { errors: reduction.errors }),
        bytecode: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(reduction.bytecode),
        range: (0,_language_utils__WEBPACK_IMPORTED_MODULE_2__.mergeRanges)(reduction.ranges, resolvedScript.length === 0 ? undefined : resolvedScript[0].range),
        script,
    };
};
//# sourceMappingURL=reduce.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export BuiltInVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createIdentifierResolver [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveScriptIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveScriptSegment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resolveVariableIdentifier [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveScriptSegment": () => /* binding */ resolveScriptSegment,
/* harmony export */   "BuiltInVariables": () => /* binding */ BuiltInVariables,
/* harmony export */   "resolveVariableIdentifier": () => /* binding */ resolveVariableIdentifier,
/* harmony export */   "resolveScriptIdentifier": () => /* binding */ resolveScriptIdentifier,
/* harmony export */   "createIdentifierResolver": () => /* binding */ createIdentifierResolver
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vm/instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _language_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-types.js");
/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");





const pluckRange = (node) => ({
    endColumn: node.end.column,
    endLineNumber: node.end.line,
    startColumn: node.start.column,
    startLineNumber: node.start.line,
});
const removeNumericSeparators = (numericLiteral) => numericLiteral.replace(/_/gu, '');
const resolveScriptSegment = (segment, resolveIdentifiers) => {
    // eslint-disable-next-line complexity
    const resolved = segment.value.map((child) => {
        const range = pluckRange(child);
        switch (child.name) {
            case 'Identifier': {
                const identifier = child.value;
                const result = resolveIdentifiers(identifier);
                const ret = result.status
                    ? {
                        range,
                        type: 'bytecode',
                        value: result.bytecode,
                        ...(result.type === _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.opcode
                            ? {
                                opcode: identifier,
                            }
                            : result.type === _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.variable
                                ? {
                                    ...('debug' in result ? { debug: result.debug } : {}),
                                    ...('signature' in result
                                        ? { signature: result.signature }
                                        : {}),
                                    variable: identifier,
                                }
                                : // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                                    result.type === _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.script
                                        ? { script: identifier, source: result.source }
                                        : { unknown: identifier }),
                    }
                    : {
                        ...('debug' in result ? { debug: result.debug } : {}),
                        ...('recoverable' in result && result.recoverable
                            ? {
                                missingIdentifier: identifier,
                                owningEntity: result.entityOwnership,
                            }
                            : {}),
                        range,
                        type: 'error',
                        value: result.error,
                    };
                return ret;
            }
            case 'Push':
                return {
                    range,
                    type: 'push',
                    value: resolveScriptSegment(child.value, resolveIdentifiers),
                };
            case 'Evaluation':
                return {
                    range,
                    type: 'evaluation',
                    value: resolveScriptSegment(child.value, resolveIdentifiers),
                };
            case 'BigIntLiteral':
                return {
                    literal: child.value,
                    literalType: 'BigIntLiteral',
                    range,
                    type: 'bytecode',
                    value: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.bigIntToScriptNumber)(BigInt(removeNumericSeparators(child.value))),
                };
            case 'BinaryLiteral':
                return {
                    literal: child.value,
                    literalType: 'BinaryLiteral',
                    range,
                    type: 'bytecode',
                    value: (0,_vm_instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_1__.bigIntToScriptNumber)(BigInt(`0b${removeNumericSeparators(child.value)}`)),
                };
            case 'HexLiteral':
                return {
                    literal: child.value,
                    literalType: 'HexLiteral',
                    range,
                    type: 'bytecode',
                    value: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(removeNumericSeparators(child.value)),
                };
            case 'UTF8Literal':
                return {
                    literal: child.value,
                    literalType: 'UTF8Literal',
                    range,
                    type: 'bytecode',
                    value: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(child.value),
                };
            case 'Comment':
                return {
                    range,
                    type: 'comment',
                    value: child.value,
                };
            default:
                return {
                    range,
                    type: 'error',
                    value: `Unrecognized segment: ${child.name}`,
                };
        }
    });
    return resolved.length === 0
        ? [{ range: pluckRange(segment), type: 'comment', value: '' }]
        : resolved;
};
var BuiltInVariables;
(function (BuiltInVariables) {
    BuiltInVariables["currentBlockTime"] = "current_block_time";
    BuiltInVariables["currentBlockHeight"] = "current_block_height";
    BuiltInVariables["signingSerialization"] = "signing_serialization";
})(BuiltInVariables || (BuiltInVariables = {}));
const attemptCompilerOperation = ({ data, environment, identifier, matchingOperations, operationExample = 'operation_identifier', operationId, variableId, variableType, }) => {
    if (matchingOperations === undefined) {
        return {
            error: `The "${variableId}" variable type can not be resolved because the "${variableType}" operation has not been included in this compiler's CompilationEnvironment.`,
            status: 'error',
        };
    }
    if (typeof matchingOperations === 'function') {
        const operation = matchingOperations;
        return operation(identifier, data, environment);
    }
    if (operationId === undefined) {
        return {
            error: `This "${variableId}" variable could not be resolved because this compiler's "${variableType}" operations require an operation identifier, e.g. '${variableId}.${operationExample}'.`,
            status: 'error',
        };
    }
    const operation = matchingOperations[operationId];
    if (operation === undefined) {
        return {
            error: `The identifier "${identifier}" could not be resolved because the "${variableId}.${operationId}" operation is not available to this compiler.`,
            status: 'error',
        };
    }
    return operation(identifier, data, environment);
};
/**
 * If the identifer can be successfully resolved as a variable, the result is
 * returned as a Uint8Array. If the identifier references a known variable, but
 * an error occurs in resolving it, the error is returned as a string.
 * Otherwise, the identifier is not recognized as a variable, and this method
 * simply returns `false`.
 *
 * @param identifier - The full identifier used to describe this operation, e.g.
 * `owner.signature.all_outputs`.
 * @param data - The `CompilationData` provided to the compiler
 * @param environment - The `CompilationEnvironment` provided to the compiler
 */
const resolveVariableIdentifier = ({ data, environment, identifier, }) => {
    const [variableId, operationId] = identifier.split('.');
    switch (variableId) {
        case BuiltInVariables.currentBlockHeight:
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                matchingOperations: environment.operations?.currentBlockHeight,
                operationId,
                variableId,
                variableType: 'currentBlockHeight',
            });
        case BuiltInVariables.currentBlockTime:
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                matchingOperations: environment.operations?.currentBlockTime,
                operationId,
                variableId,
                variableType: 'currentBlockTime',
            });
        case BuiltInVariables.signingSerialization:
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                matchingOperations: environment.operations?.signingSerialization,
                operationExample: 'version',
                operationId,
                variableId,
                variableType: 'signingSerialization',
            });
        default: {
            const expectedVariable = environment.variables?.[variableId];
            if (expectedVariable === undefined) {
                return { status: 'skip' };
            }
            return attemptCompilerOperation({
                data,
                environment,
                identifier,
                operationId,
                variableId,
                ...{
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    AddressData: {
                        matchingOperations: environment.operations?.addressData,
                        variableType: 'addressData',
                    },
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    HdKey: {
                        matchingOperations: environment.operations?.hdKey,
                        operationExample: 'public_key',
                        variableType: 'hdKey',
                    },
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    Key: {
                        matchingOperations: environment.operations?.key,
                        operationExample: 'public_key',
                        variableType: 'key',
                    },
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    WalletData: {
                        matchingOperations: environment.operations?.walletData,
                        variableType: 'walletData',
                    },
                }[expectedVariable.type],
            });
        }
    }
};
/**
 * Compile an internal script identifier.
 *
 * @remarks
 * If the identifer can be successfully resolved as a script, the script is
 * compiled and returned as a CompilationResultSuccess. If an error occurs in
 * compiling it, the error is returned as a string.
 *
 * Otherwise, the identifier is not recognized as a script, and this method
 * simply returns `false`.
 *
 * @param identifier - the identifier of the script to be resolved
 * @param data - the provided CompilationData
 * @param environment - the provided CompilationEnvironment
 * @param parentIdentifier - the identifier of the script which references the
 * script being resolved (for detecting circular dependencies)
 */
const resolveScriptIdentifier = ({ data, environment, identifier, }) => {
    if (environment.scripts[identifier] === undefined) {
        return false;
    }
    const result = (0,_compile__WEBPACK_IMPORTED_MODULE_2__.compileScriptRaw)({ data, environment, scriptId: identifier });
    if (result.success) {
        return result;
    }
    return `Compilation error in resolved script "${identifier}": ${(0,_language_utils__WEBPACK_IMPORTED_MODULE_4__.stringifyErrors)(result.errors)}`;
    /*
     * result.errors.reduce(
     *   (all, { error, range }) =>
     *     `${
     *       all === '' ? '' : `${all}; `
     *     } [${
     *       range.startLineNumber
     *     }, ${range.startColumn}]: ${error}`,
     *   ''
     * );
     */
};
/**
 * Return an `IdentifierResolutionFunction` for use in `resolveScriptSegment`.
 *
 * @param scriptId - the `id` of the script for which the resulting
 * `IdentifierResolutionFunction` will be used.
 * @param environment - a snapshot of the context around `scriptId`. See
 * `CompilationEnvironment` for details.
 * @param data - the actual variable values (private keys, shared wallet data,
 * shared address data, etc.) to use in resolving variables.
 */
const createIdentifierResolver = ({ data, environment, }) => 
// eslint-disable-next-line complexity
(identifier) => {
    const opcodeResult = environment.opcodes?.[identifier];
    if (opcodeResult !== undefined) {
        return {
            bytecode: opcodeResult,
            status: true,
            type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.opcode,
        };
    }
    const variableResult = resolveVariableIdentifier({
        data,
        environment,
        identifier,
    });
    if (variableResult.status !== 'skip') {
        return variableResult.status === 'error'
            ? {
                ...('debug' in variableResult
                    ? { debug: variableResult.debug }
                    : {}),
                error: variableResult.error,
                ...(environment.entityOwnership === undefined
                    ? {}
                    : {
                        entityOwnership: environment.entityOwnership[identifier.split('.')[0]],
                    }),
                recoverable: 'recoverable' in variableResult,
                status: false,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionErrorType.variable,
            }
            : {
                ...('debug' in variableResult
                    ? { debug: variableResult.debug }
                    : {}),
                bytecode: variableResult.bytecode,
                ...('signature' in variableResult
                    ? {
                        signature: variableResult.signature,
                    }
                    : {}),
                status: true,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.variable,
            };
    }
    const scriptResult = resolveScriptIdentifier({
        data,
        environment,
        identifier,
    });
    if (scriptResult !== false) {
        return typeof scriptResult === 'string'
            ? {
                error: scriptResult,
                scriptId: identifier,
                status: false,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionErrorType.script,
            }
            : {
                bytecode: scriptResult.bytecode,
                source: scriptResult.resolve,
                status: true,
                type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionType.script,
            };
    }
    return {
        error: `Unknown identifier "${identifier}".`,
        status: false,
        type: _language_types__WEBPACK_IMPORTED_MODULE_3__.IdentifierResolutionErrorType.unknown,
    };
};
//# sourceMappingURL=resolve.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export extendCompilationDataWithScenarioBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extendScenarioDefinition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extendScenarioDefinitionData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extendedScenarioDefinitionToCompilationData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateDefaultScenarioDefinition [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateExtendedScenario [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateScenarioCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "generateDefaultScenarioDefinition": () => /* binding */ generateDefaultScenarioDefinition,
/* harmony export */   "extendScenarioDefinitionData": () => /* binding */ extendScenarioDefinitionData,
/* harmony export */   "extendScenarioDefinition": () => /* binding */ extendScenarioDefinition,
/* harmony export */   "generateExtendedScenario": () => /* binding */ generateExtendedScenario,
/* harmony export */   "extendedScenarioDefinitionToCompilationData": () => /* binding */ extendedScenarioDefinitionToCompilationData,
/* harmony export */   "extendCompilationDataWithScenarioBytecode": () => /* binding */ extendCompilationDataWithScenarioBytecode,
/* harmony export */   "generateScenarioCommon": () => /* binding */ generateScenarioCommon
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _format_numbers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../format/numbers */ "./node_modules/@bitauth/libauth/build/module/lib/format/numbers.js");
/* harmony import */ var _key_hd_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../key/hd-key */ "./node_modules/@bitauth/libauth/build/module/lib/key/hd-key.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _language_compile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./language/compile */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/compile.js");
/* harmony import */ var _language_language_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./language/language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");






/*
 * & {
 *   value: Uint8Array;
 * };
 */
/**
 * Given a compilation environment, generate the default scenario which is
 * extended by all the environments scenarios.
 *
 * For details on default scenario generation, see
 * `AuthenticationTemplateScenario.extends`.
 *
 * @param environment - the compilation environment from which to generate the
 * default scenario
 */
// eslint-disable-next-line complexity
const generateDefaultScenarioDefinition = (environment) => {
    const { variables, entityOwnership } = environment;
    const keyVariableIds = variables === undefined
        ? []
        : Object.entries(variables)
            .filter((entry) => entry[1].type === 'Key')
            .map(([id]) => id);
    const entityIds = entityOwnership === undefined
        ? []
        : Object.keys(Object.values(entityOwnership).reduce((all, entityId) => ({ ...all, [entityId]: true }), {}));
    const valueMap = [...keyVariableIds, ...entityIds]
        .sort(([idA], [idB]) => idA.localeCompare(idB))
        .reduce((all, id, index) => ({
        ...all,
        [id]: (0,_format_numbers__WEBPACK_IMPORTED_MODULE_1__.bigIntToBinUint256BEClamped)(BigInt(index + 1)),
    }), {});
    const privateKeys = variables === undefined
        ? undefined
        : Object.entries(variables).reduce((all, [variableId, variable]) => variable.type === 'Key'
            ? {
                ...all,
                [variableId]: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.binToHex)(valueMap[variableId]),
            }
            : all, {});
    const defaultScenario = {
        data: {
            currentBlockHeight: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioCurrentBlockHeight,
            currentBlockTime: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioCurrentBlockTime,
            ...(privateKeys === undefined || Object.keys(privateKeys).length === 0
                ? {}
                : { keys: { privateKeys } }),
        },
        transaction: {
            inputs: [{ unlockingBytecode: null }],
            locktime: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioTransactionLocktime,
            outputs: [
                {
                    lockingBytecode: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioTransactionOutputsLockingBytecodeHex,
                },
            ],
            version: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioTransactionVersion,
        },
        value: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioValue,
    };
    const hasHdKeys = variables === undefined
        ? false
        : Object.values(variables).findIndex((variable) => variable.type === 'HdKey') !== -1;
    if (!hasHdKeys) {
        return defaultScenario;
    }
    const { sha256, sha512 } = environment;
    if (sha256 === undefined) {
        return 'An implementations of "sha256" is required to generate defaults for HD keys, but the "sha256" property is not included in this compilation environment.';
    }
    if (sha512 === undefined) {
        return 'An implementations of "sha512" is required to generate defaults for HD keys, but the "sha512" property is not included in this compilation environment.';
    }
    const crypto = { sha256, sha512 };
    const hdPrivateKeys = entityIds.reduce((all, entityId) => {
        /**
         * The first 5,000,000,000 seeds have been tested, scenarios are
         * unlikely to exceed this number of entities.
         */
        const assumeValid = true;
        const masterNode = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_2__.deriveHdPrivateNodeFromSeed)(crypto, valueMap[entityId], assumeValid);
        const hdPrivateKey = (0,_key_hd_key__WEBPACK_IMPORTED_MODULE_2__.encodeHdPrivateKey)(crypto, {
            network: 'mainnet',
            node: masterNode,
        });
        return { ...all, [entityId]: hdPrivateKey };
    }, {});
    return {
        ...defaultScenario,
        data: {
            ...defaultScenario.data,
            hdKeys: {
                addressIndex: _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioAddressIndex,
                hdPrivateKeys,
            },
        },
    };
};
/**
 * Extend the `data` property of a scenario definition with values from a parent
 * scenario definition. Returns the extended value for `data`.
 *
 * @param parentData - the scenario `data` which is extended by the child
 * scenario
 * @param childData - the scenario `data` which may override values from the
 * parent scenario
 */
// eslint-disable-next-line complexity
const extendScenarioDefinitionData = (parentData, childData) => {
    return {
        ...parentData,
        ...childData,
        ...(parentData.bytecode === undefined && childData.bytecode === undefined
            ? {}
            : {
                bytecode: {
                    ...parentData.bytecode,
                    ...childData.bytecode,
                },
            }),
        ...(parentData.hdKeys === undefined && childData.hdKeys === undefined
            ? {}
            : {
                hdKeys: {
                    ...parentData.hdKeys,
                    ...childData.hdKeys,
                    ...(parentData.hdKeys?.hdPrivateKeys === undefined &&
                        childData.hdKeys?.hdPrivateKeys === undefined
                        ? {}
                        : {
                            hdPrivateKeys: {
                                ...parentData.hdKeys?.hdPrivateKeys,
                                ...childData.hdKeys?.hdPrivateKeys,
                            },
                        }),
                    ...(parentData.hdKeys?.hdPublicKeys === undefined &&
                        childData.hdKeys?.hdPublicKeys === undefined
                        ? {}
                        : {
                            hdPublicKeys: {
                                ...parentData.hdKeys?.hdPublicKeys,
                                ...childData.hdKeys?.hdPublicKeys,
                            },
                        }),
                },
            }),
        ...(parentData.keys === undefined && childData.keys === undefined
            ? {}
            : {
                keys: {
                    privateKeys: {
                        ...parentData.keys?.privateKeys,
                        ...childData.keys?.privateKeys,
                    },
                },
            }),
    };
};
/**
 * Extend a child scenario definition with values from a parent scenario
 * definition. Returns the extended values for `data`, `transaction`, and
 * `value`.
 *
 * @param parentScenario - the scenario which is extended by the child scenario
 * @param childScenario - the scenario which may override values from the parent
 * scenario
 */
// eslint-disable-next-line complexity
const extendScenarioDefinition = (parentScenario, childScenario) => {
    return {
        ...(parentScenario.data === undefined && childScenario.data === undefined
            ? {}
            : {
                data: extendScenarioDefinitionData(parentScenario.data ?? {}, childScenario.data ?? {}),
            }),
        ...(parentScenario.transaction === undefined &&
            childScenario.transaction === undefined
            ? {}
            : {
                transaction: {
                    ...parentScenario.transaction,
                    ...childScenario.transaction,
                },
            }),
        ...(parentScenario.value === undefined && childScenario.value === undefined
            ? {}
            : { value: childScenario.value ?? parentScenario.value }),
    };
};
/**
 * Generate the full scenario which is extended by the provided scenario
 * identifier. Scenarios for which `extends` is `undefined` extend the default
 * scenario for the provided compilation environment.
 *
 * @param scenarioId - the identifier of the scenario for from which to select
 * the extended scenario
 * @param environment - the compilation environment from which to generate the
 * extended scenario
 * @param sourceScenarioIds - an array of scenario identifiers indicating the
 * path taken to arrive at the current scenario - used to detect and prevent
 * cycles in extending scenarios (defaults to `[]`)
 */
// eslint-disable-next-line complexity
const generateExtendedScenario = ({ environment, scenarioId, sourceScenarioIds = [], }) => {
    if (scenarioId === undefined) {
        return generateDefaultScenarioDefinition(environment);
    }
    if (sourceScenarioIds.includes(scenarioId)) {
        return `Cannot extend scenario "${scenarioId}": scenario "${scenarioId}" extends itself. Scenario inheritance path: ${sourceScenarioIds.join(' → ')}`;
    }
    const scenario = environment.scenarios?.[scenarioId];
    if (scenario === undefined) {
        return `Cannot extend scenario "${scenarioId}": a scenario with the identifier ${scenarioId} is not included in this compilation environment.`;
    }
    const parentScenario = scenario.extends === undefined
        ? generateDefaultScenarioDefinition(environment)
        : generateExtendedScenario({
            environment,
            scenarioId: scenario.extends,
            sourceScenarioIds: [...sourceScenarioIds, scenarioId],
        });
    if (typeof parentScenario === 'string') {
        return parentScenario;
    }
    return extendScenarioDefinition(parentScenario, scenario);
};
/**
 * Derive standard `CompilationData` properties from an extended scenario
 * definition.
 * @param definition - a scenario definition which has been extended by the
 * default scenario definition
 */
// eslint-disable-next-line complexity
const extendedScenarioDefinitionToCompilationData = (definition) => ({
    ...(definition.data.currentBlockHeight === undefined
        ? {}
        : {
            currentBlockHeight: definition.data.currentBlockHeight,
        }),
    ...(definition.data.currentBlockTime === undefined
        ? {}
        : {
            currentBlockTime: definition.data.currentBlockTime,
        }),
    ...(definition.data.hdKeys === undefined
        ? {}
        : {
            hdKeys: {
                ...(definition.data.hdKeys.addressIndex === undefined
                    ? {}
                    : {
                        addressIndex: definition.data.hdKeys.addressIndex,
                    }),
                ...(definition.data.hdKeys.hdPrivateKeys !== undefined &&
                    Object.keys(definition.data.hdKeys.hdPrivateKeys).length > 0
                    ? {
                        hdPrivateKeys: definition.data.hdKeys.hdPrivateKeys,
                    }
                    : {}),
                ...(definition.data.hdKeys.hdPublicKeys === undefined
                    ? {}
                    : {
                        hdPublicKeys: definition.data.hdKeys.hdPublicKeys,
                    }),
            },
        }),
    ...(definition.data.keys?.privateKeys !== undefined &&
        Object.keys(definition.data.keys.privateKeys).length > 0
        ? {
            keys: {
                privateKeys: Object.entries(definition.data.keys.privateKeys).reduce((all, [id, hex]) => ({ ...all, [id]: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(hex) }), {}),
            },
        }
        : {}),
});
/**
 * Extend a `CompilationData` object with the compiled result of the bytecode
 * scripts provided by a `AuthenticationTemplateScenarioData`.
 *
 * @param compilationData - the compilation data to extend
 * @param environment - the compilation environment in which to compile the
 * scripts
 * @param scenarioDataBytecodeScripts - the `data.bytecode` property of an
 * `AuthenticationTemplateScenarioData`
 */
const extendCompilationDataWithScenarioBytecode = ({ compilationData, environment, scenarioDataBytecodeScripts, }) => {
    const prefixBytecodeScriptId = (id) => `${_compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.scenarioBytecodeScriptPrefix}${id}`;
    const bytecodeScripts = Object.entries(scenarioDataBytecodeScripts).reduce((all, [id, script]) => {
        return {
            ...all,
            [prefixBytecodeScriptId(id)]: script,
        };
    }, {});
    const bytecodeScriptExtendedEnvironment = {
        ...environment,
        scripts: {
            ...environment.scripts,
            ...bytecodeScripts,
        },
    };
    const bytecodeCompilations = Object.keys(scenarioDataBytecodeScripts).map((id) => {
        const result = (0,_language_compile__WEBPACK_IMPORTED_MODULE_4__.compileScriptRaw)({
            data: compilationData,
            environment: bytecodeScriptExtendedEnvironment,
            scriptId: prefixBytecodeScriptId(id),
        });
        if (result.success) {
            return {
                bytecode: result.bytecode,
                id,
            };
        }
        return {
            errors: result.errors,
            id,
        };
    });
    const failedResults = bytecodeCompilations.filter((result) => 'errors' in result);
    if (failedResults.length > 0) {
        return `${failedResults
            .map((result) => `Compilation error while generating bytecode for "${result.id}": ${(0,_language_language_utils__WEBPACK_IMPORTED_MODULE_5__.stringifyErrors)(result.errors)}`)
            .join('; ')}`;
    }
    const compiledBytecode = bytecodeCompilations.reduce((all, result) => ({ ...all, [result.id]: result.bytecode }), {});
    return {
        ...(Object.keys(compiledBytecode).length > 0
            ? { bytecode: compiledBytecode }
            : {}),
        ...compilationData,
    };
};
/**
 * The default `lockingBytecode` value for scenario outputs is a new empty
 * object (`{}`).
 */
const getScenarioOutputDefaultLockingBytecode = () => ({});
/**
 * Generate a scenario given a compilation environment. If neither `scenarioId`
 * or `unlockingScriptId` are provided, the default scenario for the compilation
 * environment will be generated.
 *
 * Returns either the full `CompilationData` for the selected scenario or an
 * error message (as a `string`).
 *
 * @param scenarioId - the ID of the scenario to generate – if `undefined`, the
 * default scenario
 * @param unlockingScriptId - the ID of the unlocking script under test by this
 * scenario – if `undefined` but required by the scenario, an error will be
 * produced
 * @param environment - the compilation environment from which to generate the
 * scenario
 */
// eslint-disable-next-line complexity
const generateScenarioCommon = ({ environment, scenarioId, unlockingScriptId, }) => {
    const { scenario, scenarioName } = scenarioId === undefined
        ? { scenario: {}, scenarioName: `the default scenario` }
        : {
            scenario: environment.scenarios?.[scenarioId],
            scenarioName: `scenario "${scenarioId}"`,
        };
    if (scenario === undefined) {
        return `Cannot generate ${scenarioName}: a scenario with the identifier ${scenarioId} is not included in this compilation environment.`;
    }
    const parentScenario = generateExtendedScenario({ environment, scenarioId });
    if (typeof parentScenario === 'string') {
        return `Cannot generate ${scenarioName}: ${parentScenario}`;
    }
    const extendedScenario = extendScenarioDefinition(parentScenario, scenario);
    const partialCompilationData = extendedScenarioDefinitionToCompilationData(extendedScenario);
    const fullCompilationData = extendCompilationDataWithScenarioBytecode({
        compilationData: partialCompilationData,
        environment,
        scenarioDataBytecodeScripts: extendedScenario.data.bytecode ?? {},
    });
    if (typeof fullCompilationData === 'string') {
        return `Cannot generate ${scenarioName}: ${fullCompilationData}`;
    }
    const testedInputs = extendedScenario.transaction.inputs.filter((input) => input.unlockingBytecode === null);
    if (testedInputs.length !== 1) {
        return `Cannot generate ${scenarioName}: the specific input under test in this scenario is ambiguous – "transaction.inputs" must include exactly one input which has "unlockingBytecode" set to "null".`;
    }
    const testedInputIndex = extendedScenario.transaction.inputs.findIndex((input) => input.unlockingBytecode === null);
    const outputs = extendedScenario.transaction.outputs.map((output) => ({
        lockingBytecode: output.lockingBytecode ?? getScenarioOutputDefaultLockingBytecode(),
        satoshis: output.satoshis ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioOutputSatoshis,
    }));
    const compiledOutputResults = outputs.map(
    // eslint-disable-next-line complexity
    (output, index) => {
        const satoshis = typeof output.satoshis === 'string'
            ? (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(output.satoshis)
            : (0,_format_numbers__WEBPACK_IMPORTED_MODULE_1__.bigIntToBinUint64LE)(BigInt(output.satoshis));
        if (typeof output.lockingBytecode === 'string') {
            return {
                lockingBytecode: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(output.lockingBytecode),
                satoshis,
            };
        }
        const specifiedLockingScriptId = output.lockingBytecode.script;
        const impliedLockingScriptId = unlockingScriptId === undefined
            ? undefined
            : environment.unlockingScripts?.[unlockingScriptId];
        const scriptId = typeof specifiedLockingScriptId === 'string'
            ? specifiedLockingScriptId
            : impliedLockingScriptId;
        if (scriptId === undefined) {
            if (unlockingScriptId === undefined) {
                return `Cannot generate locking bytecode for output ${index}: this output is set to use the script unlocked by the unlocking script under test, but an unlocking script ID was not provided for scenario generation.`;
            }
            return `Cannot generate locking bytecode for output ${index}: the locking script unlocked by "${unlockingScriptId}" is not provided in this compilation environment.`;
        }
        const overriddenDataDefinition = output.lockingBytecode.overrides === undefined
            ? undefined
            : extendScenarioDefinitionData(extendedScenario.data, output.lockingBytecode.overrides);
        const overriddenCompilationData = overriddenDataDefinition === undefined
            ? undefined
            : extendCompilationDataWithScenarioBytecode({
                compilationData: extendedScenarioDefinitionToCompilationData({
                    data: overriddenDataDefinition,
                }),
                environment,
                scenarioDataBytecodeScripts: overriddenDataDefinition.bytecode ?? {},
            });
        if (typeof overriddenCompilationData === 'string') {
            return `Cannot generate locking bytecode for output ${index}: ${overriddenCompilationData}`;
        }
        const data = overriddenCompilationData === undefined
            ? fullCompilationData
            : overriddenCompilationData;
        const result = (0,_language_compile__WEBPACK_IMPORTED_MODULE_4__.compileScript)(scriptId, data, environment);
        if (!result.success) {
            return `Cannot generate locking bytecode for output ${index}: ${(0,_language_language_utils__WEBPACK_IMPORTED_MODULE_5__.stringifyErrors)(result.errors)}`;
        }
        return { lockingBytecode: result.bytecode, satoshis };
    });
    const outputCompilationErrors = compiledOutputResults.filter((result) => typeof result === 'string');
    if (outputCompilationErrors.length > 0) {
        return `Cannot generate ${scenarioName}: ${outputCompilationErrors.join('; ')}`;
    }
    const compiledOutputs = compiledOutputResults;
    const sourceSatoshis = typeof extendedScenario.value === 'number'
        ? (0,_format_numbers__WEBPACK_IMPORTED_MODULE_1__.bigIntToBinUint64LE)(BigInt(extendedScenario.value))
        : (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(extendedScenario.value);
    const unlockingBytecodeUnderTest = undefined;
    return {
        data: fullCompilationData,
        program: {
            inputIndex: testedInputIndex,
            sourceOutput: { satoshis: sourceSatoshis },
            spendingTransaction: {
                // eslint-disable-next-line complexity
                inputs: extendedScenario.transaction.inputs.map((input) => ({
                    outpointIndex: input.outpointIndex ??
                        _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputOutpointIndex,
                    outpointTransactionHash: (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(input.outpointTransactionHash ??
                        _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputOutpointTransactionHash),
                    sequenceNumber: input.sequenceNumber ??
                        _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputSequenceNumber,
                    unlockingBytecode: input.unlockingBytecode === null
                        ? unlockingBytecodeUnderTest
                        : (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(typeof input.unlockingBytecode === 'string'
                            ? input.unlockingBytecode
                            : _compiler_defaults__WEBPACK_IMPORTED_MODULE_3__.CompilerDefaults.defaultScenarioInputUnlockingBytecodeHex),
                })),
                locktime: extendedScenario.transaction.locktime,
                outputs: compiledOutputs,
                version: extendedScenario.transaction.version,
            },
        },
    };
};
//# sourceMappingURL=scenarios.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export authenticationTemplateP2pkh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationTemplateP2pkhNonHd [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "authenticationTemplateP2pkhNonHd": () => /* binding */ authenticationTemplateP2pkhNonHd,
/* harmony export */   "authenticationTemplateP2pkh": () => /* binding */ authenticationTemplateP2pkh
/* harmony export */ });
/**
 * A standard single-factor authentication template which uses
 * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use
 * on the network.
 *
 * This P2PKH template uses BCH Schnorr signatures, reducing the size of
 * transactions.
 *
 * Note, this authentication template uses only a single `Key`. For HD key
 * support, see `authenticationTemplateP2pkhHd`.
 */
const authenticationTemplateP2pkhNonHd = {
    $schema: 'https://bitauth.com/schemas/authentication-template-v0.schema.json',
    description: 'A standard single-factor authentication template which uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\n\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions.',
    entities: {
        owner: {
            description: 'The individual who can spend from this wallet.',
            name: 'Owner',
            scripts: ['lock', 'unlock'],
            variables: {
                key: {
                    description: 'The private key which controls this wallet.',
                    name: 'Key',
                    type: 'Key',
                },
            },
        },
    },
    name: 'Single Signature (P2PKH)',
    scripts: {
        lock: {
            lockingType: 'standard',
            name: 'P2PKH Lock',
            script: 'OP_DUP\nOP_HASH160 <$(<key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG',
        },
        unlock: {
            name: 'Unlock',
            script: '<key.schnorr_signature.all_outputs>\n<key.public_key>',
            unlocks: 'lock',
        },
    },
    supported: ['BCH_2019_05', 'BCH_2019_11', 'BCH_2020_05'],
    version: 0,
};
/**
 * A standard single-factor authentication template which uses
 * Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use
 * on the network.
 *
 * This P2PKH template uses BCH Schnorr signatures, reducing the size of
 * transactions.
 *
 * Because the template uses a Hierarchical Deterministic (HD) key, it also
 * supports an "Observer (Watch-Only)" entity.
 */
const authenticationTemplateP2pkh = {
    $schema: 'https://bitauth.com/schemas/authentication-template-v0.schema.json',
    description: 'A standard single-factor authentication template which uses Pay-to-Public-Key-Hash (P2PKH), the most common authentication scheme in use on the network.\n\nThis P2PKH template uses BCH Schnorr signatures, reducing the size of transactions. Because the template uses a Hierarchical Deterministic (HD) key, it also supports an "Observer (Watch-Only)" entity.',
    entities: {
        observer: {
            description: 'An entity which can generate addresses but cannot spend funds from this wallet.',
            name: 'Observer (Watch-Only)',
            scripts: ['lock'],
        },
        owner: {
            description: 'The individual who can spend from this wallet.',
            name: 'Owner',
            scripts: ['lock', 'unlock'],
            variables: {
                key: {
                    description: 'The private key which controls this wallet.',
                    name: 'Key',
                    type: 'HdKey',
                },
            },
        },
    },
    name: 'Single Signature (P2PKH)',
    scripts: {
        lock: {
            lockingType: 'standard',
            name: 'P2PKH Lock',
            script: 'OP_DUP\nOP_HASH160 <$(<key.public_key> OP_HASH160\n)> OP_EQUALVERIFY\nOP_CHECKSIG',
        },
        unlock: {
            name: 'Unlock',
            script: '<key.schnorr_signature.all_outputs>\n<key.public_key>',
            unlocks: 'lock',
        },
    },
    supported: ['BCH_2019_05', 'BCH_2019_11', 'BCH_2020_05'],
    version: 0,
};
//# sourceMappingURL=p2pkh.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/standard.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/standard/standard.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export authenticationTemplateP2pkh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js .authenticationTemplateP2pkh */
/*! export authenticationTemplateP2pkhNonHd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js .authenticationTemplateP2pkhNonHd */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "authenticationTemplateP2pkh": () => /* reexport safe */ _p2pkh__WEBPACK_IMPORTED_MODULE_0__.authenticationTemplateP2pkh,
/* harmony export */   "authenticationTemplateP2pkhNonHd": () => /* reexport safe */ _p2pkh__WEBPACK_IMPORTED_MODULE_0__.authenticationTemplateP2pkhNonHd
/* harmony export */ });
/* harmony import */ var _p2pkh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./p2pkh */ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/p2pkh.js");

//# sourceMappingURL=standard.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/template-types.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/template-types.js ***!
  \***********************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* eslint-disable max-lines */
/**
 * Because this file is consumed by the `doc:generate-json-schema` package
 * script to produce a JSON schema, large sections of the below documentation
 * are copied from this libraries `Transaction` and `CompilationData` types.
 *
 * This is preferable to importing those types, as most documentation needs to
 * be slightly modified for this context, and avoiding imports in this file
 * makes it easier to provide a stable API.
 */
//# sourceMappingURL=template-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/template-validation.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/template-validation.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export parseAuthenticationTemplateEntities [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioDataHdKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioDataKeys [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransactionInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScenarios [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateScripts [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAuthenticationTemplateVariable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateAuthenticationTemplate [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseAuthenticationTemplateScripts": () => /* binding */ parseAuthenticationTemplateScripts,
/* harmony export */   "parseAuthenticationTemplateVariable": () => /* binding */ parseAuthenticationTemplateVariable,
/* harmony export */   "parseAuthenticationTemplateEntities": () => /* binding */ parseAuthenticationTemplateEntities,
/* harmony export */   "parseAuthenticationTemplateScenarioDataHdKeys": () => /* binding */ parseAuthenticationTemplateScenarioDataHdKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioDataKeys": () => /* binding */ parseAuthenticationTemplateScenarioDataKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioData": () => /* binding */ parseAuthenticationTemplateScenarioData,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionInputs": () => /* binding */ parseAuthenticationTemplateScenarioTransactionInputs,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode": () => /* binding */ parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputs": () => /* binding */ parseAuthenticationTemplateScenarioTransactionOutputs,
/* harmony export */   "parseAuthenticationTemplateScenarioTransaction": () => /* binding */ parseAuthenticationTemplateScenarioTransaction,
/* harmony export */   "parseAuthenticationTemplateScenarios": () => /* binding */ parseAuthenticationTemplateScenarios,
/* harmony export */   "validateAuthenticationTemplate": () => /* binding */ validateAuthenticationTemplate
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _key_key_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../key/key-utils */ "./node_modules/@bitauth/libauth/build/module/lib/key/key-utils.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _language_resolve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language/resolve */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/resolve.js");
/* eslint-disable max-lines, @typescript-eslint/ban-types */




const listIds = (ids) => ids
    .map((id) => `"${id}"`)
    .sort((a, b) => a.localeCompare(b))
    .join(', ');
/**
 * Verify that the provided value is an array which is not sparse.
 */
const isDenseArray = (maybeArray) => Array.isArray(maybeArray) && !maybeArray.includes(undefined);
/**
 * Check that a value is an array which contains only strings and has no empty
 * items (is not a sparse array, e.g. `[1, , 3]`).
 */
const isStringArray = (maybeArray) => isDenseArray(maybeArray) &&
    !maybeArray.some((item) => typeof item !== 'string');
const isObject = (maybeObject) => typeof maybeObject === 'object' && maybeObject !== null;
const isStringObject = (maybeStringObject) => !Object.values(maybeStringObject).some((value) => typeof value !== 'string');
const hasNonHexCharacter = /[^a-fA-F0-9]/u;
const isHexString = (maybeHexString) => typeof maybeHexString === 'string' &&
    !hasNonHexCharacter.test(maybeHexString);
const characterLength32BytePrivateKey = 64;
const isObjectOfValidPrivateKeys = (maybePrivateKeysObject) => !Object.values(maybePrivateKeysObject).some((value) => !isHexString(value) ||
    value.length !== characterLength32BytePrivateKey ||
    !(0,_key_key_utils__WEBPACK_IMPORTED_MODULE_1__.validateSecp256k1PrivateKey)((0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(value)));
const isInteger = (value) => typeof value === 'number' && Number.isInteger(value);
const isPositiveInteger = (value) => isInteger(value) && value >= 0;
const isRangedInteger = (value, minimum, maximum) => isInteger(value) && value >= minimum && value <= maximum;
/**
 * Verify that a value is a valid `satoshi` value: either a number between `0`
 * and `Number.MAX_SAFE_INTEGER` or a 16-character, hexadecimal-encoded string.
 *
 * @param maybeSatoshis - the value to verify
 */
const isValidSatoshisValue = (maybeSatoshis) => {
    const uint64HexLength = 16;
    if (maybeSatoshis === undefined ||
        isRangedInteger(maybeSatoshis, 0, Number.MAX_SAFE_INTEGER) ||
        (isHexString(maybeSatoshis) && maybeSatoshis.length === uint64HexLength)) {
        return true;
    }
    return false;
};
/**
 * Parse an authentication template `scripts` object into its component scripts,
 * validating the shape of each script object. Returns either an error message
 * as a string or an object of cloned and sorted scripts.
 *
 * @param scripts - the `scripts` property of an `AuthenticationTemplate`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScripts = (scripts) => {
    const unknownScripts = Object.entries(scripts).map(([id, script]) => ({ id, script }));
    const nonObjectScripts = unknownScripts
        .filter(({ script }) => typeof script !== 'object' || script === null)
        .map(({ id }) => id);
    if (nonObjectScripts.length > 0) {
        return `All authentication template scripts must be objects, but the following scripts are not objects: ${listIds(nonObjectScripts)}.`;
    }
    const allScripts = unknownScripts;
    const unlockingResults = allScripts
        .filter(({ script }) => 'unlocks' in script)
        // eslint-disable-next-line complexity
        .map(({ id, script }) => {
        const { ageLock, estimate, fails, invalid, name, passes, script: scriptContents, timeLockType, unlocks, } = script;
        if (typeof unlocks !== 'string') {
            return `The "unlocks" property of unlocking script "${id}" must be a string.`;
        }
        if (typeof scriptContents !== 'string') {
            return `The "script" property of unlocking script "${id}" must be a string.`;
        }
        if (ageLock !== undefined && typeof ageLock !== 'string') {
            return `If defined, the "ageLock" property of unlocking script "${id}" must be a string.`;
        }
        if (estimate !== undefined && typeof estimate !== 'string') {
            return `If defined, the "estimate" property of unlocking script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of unlocking script "${id}" must be a string.`;
        }
        if (fails !== undefined && !isStringArray(fails)) {
            return `If defined, the "fails" property of unlocking script "${id}" must be an array containing only scenario identifiers (strings).`;
        }
        if (invalid !== undefined && !isStringArray(invalid)) {
            return `If defined, the "invalid" property of unlocking script "${id}" must be an array containing only scenario identifiers (strings).`;
        }
        if (passes !== undefined && !isStringArray(passes)) {
            return `If defined, the "passes" property of unlocking script "${id}" must be an array containing only scenario identifiers (strings).`;
        }
        if (timeLockType !== undefined &&
            timeLockType !== 'timestamp' &&
            timeLockType !== 'height') {
            return `If defined, the "timeLockType" property of unlocking script "${id}" must be either "timestamp" or "height".`;
        }
        return {
            id,
            script: {
                ...(ageLock === undefined ? {} : { ageLock }),
                ...(estimate === undefined ? {} : { estimate }),
                ...(fails === undefined ? {} : { fails }),
                ...(invalid === undefined ? {} : { invalid }),
                ...(passes === undefined ? {} : { passes }),
                ...(name === undefined ? {} : { name }),
                script: scriptContents,
                ...(timeLockType === undefined ? {} : { timeLockType }),
                unlocks,
            },
        };
    });
    const invalidUnlockingResults = unlockingResults.filter((result) => typeof result === 'string');
    if (invalidUnlockingResults.length > 0) {
        return invalidUnlockingResults.join(' ');
    }
    const validUnlockingResults = unlockingResults;
    const unlocking = validUnlockingResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    const unlockingIds = validUnlockingResults.map(({ id }) => id);
    const impliedLockingIds = validUnlockingResults.map(({ script }) => script.unlocks);
    const lockingResults = allScripts
        .filter(({ id, script }) => 'lockingType' in script || impliedLockingIds.includes(id))
        // eslint-disable-next-line complexity
        .map(({ id, script }) => {
        const { lockingType, script: scriptContents, name } = script;
        if (lockingType !== 'standard' && lockingType !== 'p2sh') {
            return `The "lockingType" property of locking script "${id}" must be either "standard" or "p2sh".`;
        }
        if (typeof scriptContents !== 'string') {
            return `The "script" property of locking script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of locking script "${id}" must be a string.`;
        }
        return {
            id,
            script: {
                lockingType,
                ...(name === undefined ? {} : { name }),
                script: scriptContents,
            },
        };
    });
    const invalidLockingResults = lockingResults.filter((result) => typeof result === 'string');
    if (invalidLockingResults.length > 0) {
        return invalidLockingResults.join(' ');
    }
    const validLockingResults = lockingResults;
    const locking = validLockingResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    const lockingIds = validLockingResults.map(({ id }) => id);
    const unknownLockingIds = Object.values(unlocking)
        .map((script) => script.unlocks)
        .filter((unlocks) => !lockingIds.includes(unlocks));
    if (unknownLockingIds.length > 0) {
        return `The following locking scripts (referenced in "unlocks" properties) were not provided: ${listIds(unknownLockingIds)}.`;
    }
    const testedResults = allScripts
        .filter(({ script }) => 'tests' in script)
        // eslint-disable-next-line complexity
        .map(({ id, script }) => {
        const { tests, script: scriptContents, name, pushed } = script;
        if (typeof scriptContents !== 'string') {
            return `The "script" property of tested script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of tested script "${id}" must be a string.`;
        }
        if (pushed !== undefined && pushed !== true && pushed !== false) {
            return `If defined, the "pushed" property of tested script "${id}" must be a boolean value.`;
        }
        if (!Array.isArray(tests)) {
            return `If defined, the "tests" property of tested script "${id}" must be an array.`;
        }
        const extractedTests = 
        // eslint-disable-next-line complexity
        tests.map((test) => {
            const { check, fails, invalid, name: testName, passes, setup, } = test;
            if (typeof check !== 'string') {
                return `The "check" properties of all tests in tested script "${id}" must be a strings.`;
            }
            if (testName !== undefined && typeof testName !== 'string') {
                return `If defined, the "name" properties of all tests in tested script "${id}" must be strings.`;
            }
            if (setup !== undefined && typeof setup !== 'string') {
                return `If defined, the "setup" properties of all tests in tested script "${id}" must be strings.`;
            }
            if (fails !== undefined && !isStringArray(fails)) {
                return `If defined, the "fails" property of each test in tested script "${id}" must be an array containing only scenario identifiers (strings).`;
            }
            if (invalid !== undefined && !isStringArray(invalid)) {
                return `If defined, the "invalid" property of each test in tested script "${id}" must be an array containing only scenario identifiers (strings).`;
            }
            if (passes !== undefined && !isStringArray(passes)) {
                return `If defined, the "passes" property of each test in tested script "${id}" must be an array containing only scenario identifiers (strings).`;
            }
            return {
                check,
                ...(fails === undefined ? {} : { fails }),
                ...(invalid === undefined ? {} : { invalid }),
                ...(passes === undefined ? {} : { passes }),
                ...(testName === undefined ? {} : { name: testName }),
                ...(setup === undefined ? {} : { setup }),
            };
        });
        const invalidTests = extractedTests.filter((result) => typeof result === 'string');
        if (invalidTests.length > 0) {
            return invalidTests.join(' ');
        }
        const validTests = extractedTests;
        return {
            id,
            script: {
                ...(name === undefined ? {} : { name }),
                ...(pushed === undefined ? {} : { pushed }),
                script: scriptContents,
                tests: validTests,
            },
        };
    });
    const invalidTestedResults = testedResults.filter((result) => typeof result === 'string');
    if (invalidTestedResults.length > 0) {
        return invalidTestedResults.join(' ');
    }
    const validTestedResults = testedResults;
    const tested = validTestedResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    const testedIds = validTestedResults.map(({ id }) => id);
    const lockingAndUnlockingIds = [...lockingIds, ...unlockingIds];
    const lockingAndUnlockingIdsWithTests = lockingAndUnlockingIds.filter((id) => testedIds.includes(id));
    if (lockingAndUnlockingIdsWithTests.length > 0) {
        return `Locking and unlocking scripts may not have tests, but the following scripts include a "tests" property: ${listIds(lockingAndUnlockingIdsWithTests)}`;
    }
    const alreadySortedIds = [...lockingAndUnlockingIds, testedIds];
    const otherResults = allScripts
        .filter(({ id }) => !alreadySortedIds.includes(id))
        .map(({ id, script }) => {
        const { script: scriptContents, name } = script;
        if (typeof scriptContents !== 'string') {
            return `The "script" property of script "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of script "${id}" must be a string.`;
        }
        return {
            id,
            script: {
                ...(name === undefined ? {} : { name }),
                script: scriptContents,
            },
        };
    });
    const invalidOtherResults = otherResults.filter((result) => typeof result === 'string');
    if (invalidOtherResults.length > 0) {
        return invalidOtherResults.join(' ');
    }
    const validOtherResults = otherResults;
    const other = validOtherResults.reduce((all, result) => ({ ...all, [result.id]: result.script }), {});
    return {
        locking,
        other,
        tested,
        unlocking,
    };
};
const authenticationTemplateVariableTypes = [
    'AddressData',
    'HdKey',
    'Key',
    'WalletData',
];
const isAuthenticationTemplateVariableType = (type) => authenticationTemplateVariableTypes.includes(type);
/**
 * Parse an authentication template entity `variables` object into its component
 * variables, validating the shape of each variable object. Returns either an
 * error message as a string or the cloned variables object.
 *
 * @param scripts - the `scripts` property of an `AuthenticationTemplate`
 */
const parseAuthenticationTemplateVariable = (variables, entityId) => {
    const unknownVariables = Object.entries(variables).map(([id, variable]) => ({ id, variable }));
    const nonObjectVariables = unknownVariables
        .filter(({ variable }) => typeof variable !== 'object' || variable === null)
        .map(({ id }) => id);
    if (nonObjectVariables.length > 0) {
        return `All authentication template variables must be objects, but the following variables owned by entity "${entityId}" are not objects: ${listIds(nonObjectVariables)}.`;
    }
    const allEntities = unknownVariables;
    const variableResults = allEntities
        // eslint-disable-next-line complexity
        .map(({ id, variable }) => {
        const { description, name, type } = variable;
        if (!isAuthenticationTemplateVariableType(type)) {
            return `The "type" property of variable "${id}" must be a valid authentication template variable type. Available types are: ${listIds(authenticationTemplateVariableTypes)}.`;
        }
        if (description !== undefined && typeof description !== 'string') {
            return `If defined, the "description" property of variable "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of variable "${id}" must be a string.`;
        }
        if (type === 'HdKey') {
            const { addressOffset, hdPublicKeyDerivationPath, privateDerivationPath, publicDerivationPath, } = variable;
            if (addressOffset !== undefined && typeof addressOffset !== 'number') {
                return `If defined, the "addressOffset" property of HdKey "${id}" must be a number.`;
            }
            if (hdPublicKeyDerivationPath !== undefined &&
                typeof hdPublicKeyDerivationPath !== 'string') {
                return `If defined, the "hdPublicKeyDerivationPath" property of HdKey "${id}" must be a string.`;
            }
            if (privateDerivationPath !== undefined &&
                typeof privateDerivationPath !== 'string') {
                return `If defined, the "privateDerivationPath" property of HdKey "${id}" must be a string.`;
            }
            if (publicDerivationPath !== undefined &&
                typeof publicDerivationPath !== 'string') {
                return `If defined, the "publicDerivationPath" property of HdKey "${id}" must be a string.`;
            }
            const hdPublicKeyPath = hdPublicKeyDerivationPath ??
                _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.hdKeyHdPublicKeyDerivationPath;
            const privatePath = privateDerivationPath ?? _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults.hdKeyPrivateDerivationPath;
            const publicPath = publicDerivationPath ?? privatePath.replace('m', 'M');
            const validPrivatePathWithIndex = /^m(?:\/(?:[0-9]+|i)'?)*$/u;
            const validPrivatePath = /^m(?:\/[0-9]+'?)*$/u;
            const replacedPrivatePath = privatePath.replace('i', '0');
            if (!validPrivatePathWithIndex.test(privatePath) &&
                !validPrivatePath.test(replacedPrivatePath)) {
                return `If defined, the "privateDerivationPath" property of HdKey "${id}" must be a valid private derivation path, but the provided value is "${hdPublicKeyPath}". A valid path must begin with "m" and include only "/", "'", a single "i" address index character, and numbers.`;
            }
            if (!validPrivatePath.test(hdPublicKeyPath)) {
                return `If defined, the "hdPublicKeyDerivationPath" property of an HdKey must be a valid private derivation path for the HdKey's HD public node, but the provided value for HdKey "${id}" is "${hdPublicKeyPath}". A valid path must begin with "m" and include only "/", "'", and numbers (the "i" character cannot be used in "hdPublicKeyDerivationPath").`;
            }
            const validPublicPathWithIndex = /^M(?:\/(?:[0-9]+|i))*$/u;
            const validPublicPath = /^M(?:\/[0-9]+)*$/u;
            const replacedPublicPath = publicPath.replace('i', '0');
            if (!validPublicPathWithIndex.test(publicPath) &&
                !validPublicPath.test(replacedPublicPath)) {
                return `The "publicDerivationPath" property of HdKey "${id}" must be a valid public derivation path, but the current value is "${publicPath}". Public derivation paths must begin with "M" and include only "/", a single "i" address index character, and numbers. If the "privateDerivationPath" uses hardened derivation, the "publicDerivationPath" should be set to enable public derivation from the "hdPublicKeyDerivationPath".`;
            }
            const publicPathSuffix = publicPath.replace('M/', '');
            const impliedPrivatePath = `${hdPublicKeyPath}/${publicPathSuffix}`;
            if (impliedPrivatePath !== privatePath) {
                return `The "privateDerivationPath" property of HdKey "${id}" is "${privatePath}", but the implied private derivation path of "hdPublicKeyDerivationPath" and "publicDerivationPath" is "${impliedPrivatePath}". The "publicDerivationPath" property must be set to allow for public derivation of the same HD node derived by "privateDerivationPath" beginning from the HD public key derived at "hdPublicKeyDerivationPath".`;
            }
            return {
                id,
                variable: {
                    ...(addressOffset === undefined ? {} : { addressOffset }),
                    ...(description === undefined ? {} : { description }),
                    ...(hdPublicKeyDerivationPath === undefined
                        ? {}
                        : { hdPublicKeyDerivationPath }),
                    ...(name === undefined ? {} : { name }),
                    ...(privateDerivationPath === undefined
                        ? {}
                        : { privateDerivationPath }),
                    ...(publicDerivationPath === undefined
                        ? {}
                        : { publicDerivationPath }),
                    type,
                },
            };
        }
        return {
            id,
            variable: {
                ...(description === undefined ? {} : { description }),
                ...(name === undefined ? {} : { name }),
                type,
            },
        };
    });
    const invalidVariableResults = variableResults.filter((result) => typeof result === 'string');
    if (invalidVariableResults.length > 0) {
        return invalidVariableResults.join(' ');
    }
    const validVariableResults = variableResults;
    const clonedVariables = validVariableResults.reduce((all, result) => ({ ...all, [result.id]: result.variable }), {});
    return clonedVariables;
};
/**
 * Parse an authentication template `entities` object into its component
 * entities, validating the shape of each entity object. Returns either an error
 * message as a string or the cloned entities object.
 *
 * @param scripts - the `scripts` property of an `AuthenticationTemplate`
 */
const parseAuthenticationTemplateEntities = (entities) => {
    const unknownEntities = Object.entries(entities).map(([id, entity]) => ({ entity, id }));
    const nonObjectEntities = unknownEntities
        .filter(({ entity }) => typeof entity !== 'object' || entity === null)
        .map(({ id }) => id);
    if (nonObjectEntities.length > 0) {
        return `All authentication template entities must be objects, but the following entities are not objects: ${listIds(nonObjectEntities)}.`;
    }
    const allEntities = unknownEntities;
    const entityResults = allEntities
        // eslint-disable-next-line complexity
        .map(({ id, entity }) => {
        const { description, name, scripts, variables } = entity;
        if (description !== undefined && typeof description !== 'string') {
            return `If defined, the "description" property of entity "${id}" must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of entity "${id}" must be a string.`;
        }
        if (scripts !== undefined && !isStringArray(scripts)) {
            return `If defined, the "scripts" property of entity "${id}" must be an array containing only script identifiers (strings).`;
        }
        if (variables !== undefined && !isObject(variables)) {
            return `If defined, the "variables" property of entity "${id}" must be an object.`;
        }
        const variableResult = variables === undefined
            ? undefined
            : parseAuthenticationTemplateVariable(variables, id);
        if (typeof variableResult === 'string') {
            return variableResult;
        }
        return {
            entity: {
                ...(description === undefined ? {} : { description }),
                ...(name === undefined ? {} : { name }),
                ...(scripts === undefined ? {} : { scripts }),
                ...(variableResult === undefined
                    ? {}
                    : { variables: variableResult }),
            },
            id,
        };
    });
    const invalidEntityResults = entityResults.filter((result) => typeof result === 'string');
    if (invalidEntityResults.length > 0) {
        return invalidEntityResults.join(' ');
    }
    const validEntityResults = entityResults;
    const clonedEntities = validEntityResults.reduce((all, result) => ({ ...all, [result.id]: result.entity }), {});
    return clonedEntities;
};
/**
 * Validate and clone an Authentication Template Scenario `data.hdKeys` object.
 *
 * @param hdKeys - the `data.hdKeys` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"` or
 * `'lockingBytecode.override' in output 2 of scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioDataHdKeys = (hdKeys, location) => {
    const { addressIndex, hdPublicKeys, hdPrivateKeys } = hdKeys;
    const maximumAddressIndex = 2147483648;
    if (addressIndex !== undefined &&
        !isRangedInteger(addressIndex, 0, maximumAddressIndex)) {
        return `If defined, the "data.hdKeys.addressIndex" property of ${location} must be a positive integer between 0 and 2,147,483,648 (inclusive).`;
    }
    if (hdPublicKeys !== undefined &&
        !(isObject(hdPublicKeys) && isStringObject(hdPublicKeys))) {
        return `If defined, the "data.hdKeys.hdPublicKeys" property of ${location} must be an object, and each value must be a string.`;
    }
    if (hdPrivateKeys !== undefined &&
        !(isObject(hdPrivateKeys) && isStringObject(hdPrivateKeys))) {
        return `If defined, the "data.hdKeys.hdPrivateKeys" property of ${location} must be an object, and each value must be a string.`;
    }
    return {
        ...(addressIndex === undefined ? {} : { addressIndex }),
        ...(hdPublicKeys === undefined
            ? {}
            : { hdPublicKeys: { ...hdPublicKeys } }),
        ...(hdPrivateKeys === undefined
            ? {}
            : { hdPrivateKeys: { ...hdPrivateKeys } }),
    };
};
/**
 * Validate and clone an Authentication Template Scenario `data.keys` object.
 *
 * @param keys - the `data.keys` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"` or
 * `'lockingBytecode.override' in output 2 of scenario "test"`
 */
const parseAuthenticationTemplateScenarioDataKeys = (keys, location) => {
    const { privateKeys } = keys;
    if (privateKeys !== undefined &&
        !(isObject(privateKeys) && isObjectOfValidPrivateKeys(privateKeys))) {
        return `If defined, the "data.keys.privateKeys" property of ${location} must be an object, and each value must be a 32-byte, hexadecimal-encoded private key.`;
    }
    return { ...(privateKeys === undefined ? {} : { privateKeys }) };
};
/**
 * Validate and clone an Authentication Template Scenario `data` object.
 *
 * @param data - the `data` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"` or
 * `'lockingBytecode.override' in output 2 of scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioData = (data, location) => {
    const { bytecode, currentBlockHeight, currentBlockTime, hdKeys, keys, } = data;
    if (bytecode !== undefined &&
        (!isObject(bytecode) || !isStringObject(bytecode))) {
        return `If defined, the "data.bytecode" property of ${location} must be an object, and each value must be a string.`;
    }
    const minimumBlockTime = 500000000;
    const maximumBlockTime = 4294967295;
    if (currentBlockHeight !== undefined &&
        !isRangedInteger(currentBlockHeight, 0, minimumBlockTime - 1)) {
        return `If defined, the "currentBlockHeight" property of ${location} must be a positive integer from 0 to 499,999,999 (inclusive).`;
    }
    if (currentBlockTime !== undefined &&
        !isRangedInteger(currentBlockTime, minimumBlockTime, maximumBlockTime)) {
        return `If defined, the "currentBlockTime" property of ${location} must be a positive integer from 500,000,000 to 4,294,967,295 (inclusive).`;
    }
    const hdKeysResult = hdKeys === undefined
        ? undefined
        : isObject(hdKeys)
            ? parseAuthenticationTemplateScenarioDataHdKeys(hdKeys, location)
            : `If defined, the "data.hdKeys" property of ${location} must be an object.`;
    if (typeof hdKeysResult === 'string') {
        return hdKeysResult;
    }
    const keysResult = keys === undefined
        ? undefined
        : isObject(keys)
            ? parseAuthenticationTemplateScenarioDataKeys(keys, location)
            : `If defined, the "data.keys" property of ${location} must be an object.`;
    if (typeof keysResult === 'string') {
        return keysResult;
    }
    return {
        ...(bytecode === undefined ? {} : { bytecode: { ...bytecode } }),
        ...(currentBlockHeight === undefined ? {} : { currentBlockHeight }),
        ...(currentBlockTime === undefined ? {} : { currentBlockTime }),
        ...(hdKeysResult === undefined ? {} : { hdKeys: hdKeysResult }),
        ...(keysResult === undefined ? {} : { keys: keysResult }),
    };
};
/**
 * Validate and clone an Authentication Template Scenario `transaction.inputs`
 * array.
 *
 * @param inputs - the `transaction.inputs` array to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `scenario "test"`
 */
const parseAuthenticationTemplateScenarioTransactionInputs = (inputs, location) => {
    if (inputs === undefined) {
        return undefined;
    }
    if (!isDenseArray(inputs)) {
        return `If defined, the "transaction.inputs" property of ${location} must be an array of scenario input objects.`;
    }
    const inputResults = inputs
        // eslint-disable-next-line complexity
        .map((maybeInput, inputIndex) => {
        const { outpointIndex, outpointTransactionHash, sequenceNumber, unlockingBytecode, } = maybeInput;
        const newLocation = `input ${inputIndex} in ${location}`;
        if (outpointIndex !== undefined && !isPositiveInteger(outpointIndex)) {
            return `If defined, the "outpointIndex" property of ${newLocation} must be a positive integer.`;
        }
        const characterLength32ByteHash = 64;
        if (outpointTransactionHash !== undefined &&
            !(isHexString(outpointTransactionHash) &&
                outpointTransactionHash.length === characterLength32ByteHash)) {
            return `If defined, the "outpointTransactionHash" property of ${newLocation} must be a 32-byte, hexadecimal-encoded hash (string).`;
        }
        const maxSequenceNumber = 0xffffffff;
        if (sequenceNumber !== undefined &&
            !isRangedInteger(sequenceNumber, 0, maxSequenceNumber)) {
            return `If defined, the "sequenceNumber" property of ${newLocation} must be a number between 0 and 4294967295 (inclusive).`;
        }
        if (unlockingBytecode !== undefined &&
            unlockingBytecode !== null &&
            !isHexString(unlockingBytecode)) {
            return `If defined, the "unlockingBytecode" property of ${newLocation} must be either a null value or a hexadecimal-encoded string.`;
        }
        return {
            ...(outpointIndex === undefined ? {} : { outpointIndex }),
            ...(outpointTransactionHash === undefined
                ? {}
                : { outpointTransactionHash }),
            ...(sequenceNumber === undefined ? {} : { sequenceNumber }),
            ...(unlockingBytecode === undefined ? {} : { unlockingBytecode }),
        };
    });
    const invalidInputResults = inputResults.filter((result) => typeof result === 'string');
    if (invalidInputResults.length > 0) {
        return invalidInputResults.join(' ');
    }
    const clonedInputs = inputResults;
    return clonedInputs;
};
/**
 * Validate and clone an Authentication Template Scenario transaction output
 * `lockingBytecode` object.
 *
 * @param outputs - the `transaction.outputs[outputIndex].lockingBytecode`
 * object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `output 2 in scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode = (lockingBytecode, location) => {
    const { overrides, script } = lockingBytecode;
    if (script !== undefined && script !== null && !isHexString(script)) {
        return `If defined, the "script" property of ${location} must be a hexadecimal-encoded string or "null".`;
    }
    const clonedOverrides = overrides === undefined
        ? undefined
        : isObject(overrides)
            ? parseAuthenticationTemplateScenarioData(overrides, `'lockingBytecode.override' in ${location}`)
            : `If defined, the "overrides" property of ${location} must be an object.`;
    if (typeof clonedOverrides === 'string') {
        return clonedOverrides;
    }
    return {
        ...(script === undefined ? {} : { script }),
        ...(clonedOverrides === undefined ? {} : { overrides: clonedOverrides }),
    };
};
/**
 * Validate and clone an Authentication Template Scenario `transaction.outputs`
 * array.
 *
 * @param outputs - the `transaction.outputs` array to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `of output 2 in scenario "test"`
 */
const parseAuthenticationTemplateScenarioTransactionOutputs = (outputs, location) => {
    if (outputs === undefined) {
        return undefined;
    }
    if (!isDenseArray(outputs)) {
        return `If defined, the "transaction.outputs" property of ${location} must be an array of scenario output objects.`;
    }
    const outputResults = outputs
        // eslint-disable-next-line complexity
        .map((maybeOutput, outputIndex) => {
        const { lockingBytecode, satoshis } = maybeOutput;
        const newLocation = `output ${outputIndex} in ${location}`;
        if (lockingBytecode !== undefined &&
            typeof lockingBytecode !== 'string' &&
            !isObject(lockingBytecode)) {
            return `If defined, the "lockingBytecode" property of ${newLocation} must be a string or an object.`;
        }
        if (typeof lockingBytecode === 'string' &&
            !isHexString(lockingBytecode)) {
            return `If the "lockingBytecode" property of ${newLocation} is a string, it must be a valid, hexadecimal-encoded locking bytecode.`;
        }
        const clonedLockingBytecode = lockingBytecode === undefined || typeof lockingBytecode === 'string'
            ? undefined
            : parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode(lockingBytecode, newLocation);
        if (typeof clonedLockingBytecode === 'string') {
            return clonedLockingBytecode;
        }
        if (!isValidSatoshisValue(satoshis)) {
            return `If defined, the "satoshis" property of ${newLocation} must be either a number or a little-endian, unsigned 64-bit integer as a hexadecimal-encoded string (16 characters).`;
        }
        return {
            ...(lockingBytecode === undefined
                ? {}
                : typeof lockingBytecode === 'string'
                    ? { lockingBytecode }
                    : { lockingBytecode: clonedLockingBytecode }),
            ...(satoshis === undefined ? {} : { satoshis }),
        };
    });
    const invalidOutputResults = outputResults.filter((result) => typeof result === 'string');
    if (invalidOutputResults.length > 0) {
        return invalidOutputResults.join(' ');
    }
    const clonedOutputs = outputResults;
    if (clonedOutputs.length === 0) {
        return `If defined, the "transaction.outputs" property of ${location} must be have at least one output.`;
    }
    return clonedOutputs;
};
/**
 * Validate and clone an Authentication Template Scenario `transaction` object.
 *
 * @param transaction - the `transaction` object to validate and clone
 * @param location - the location of the error to specify in error messages,
 * e.g. `of output 2 in scenario "test"`
 */
// eslint-disable-next-line complexity
const parseAuthenticationTemplateScenarioTransaction = (transaction, location) => {
    const { inputs, locktime, outputs, version } = transaction;
    const maximumLocktime = 4294967295;
    if (locktime !== undefined &&
        !isRangedInteger(locktime, 0, maximumLocktime)) {
        return `If defined, the "locktime" property of ${location} must be an integer between 0 and 4,294,967,295 (inclusive).`;
    }
    const maximumVersion = 4294967295;
    if (version !== undefined && !isRangedInteger(version, 0, maximumVersion)) {
        return `If defined, the "version" property of ${location} must be an integer between 0 and 4,294,967,295 (inclusive).`;
    }
    const clonedInputs = parseAuthenticationTemplateScenarioTransactionInputs(inputs, location);
    if (typeof clonedInputs === 'string') {
        return clonedInputs;
    }
    const clonedOutputs = parseAuthenticationTemplateScenarioTransactionOutputs(outputs, location);
    if (typeof clonedOutputs === 'string') {
        return clonedOutputs;
    }
    return {
        ...(locktime === undefined ? {} : { locktime }),
        ...(clonedInputs === undefined ? {} : { inputs: clonedInputs }),
        ...(clonedOutputs === undefined ? {} : { outputs: clonedOutputs }),
        ...(version === undefined ? {} : { version }),
    };
};
/**
 * Validate and clone an object of Authentication Template scenarios.
 *
 * @param scenarios - the scenarios object to validate and clone
 */
const parseAuthenticationTemplateScenarios = (scenarios) => {
    const unknownScenarios = Object.entries(scenarios).map(([id, scenario]) => ({ id, scenario }));
    const nonObjectScenarios = unknownScenarios
        .filter(({ scenario }) => typeof scenario !== 'object' || scenario === null)
        .map(({ id }) => id);
    if (nonObjectScenarios.length > 0) {
        return `All authentication template scenarios must be objects, but the following scenarios are not objects: ${listIds(nonObjectScenarios)}.`;
    }
    const allScenarios = unknownScenarios;
    const scenarioResults = allScenarios
        // eslint-disable-next-line complexity
        .map(({ id, scenario }) => {
        const { data, description, extends: extendsProp, name, transaction, value, } = scenario;
        const location = `scenario "${id}"`;
        if (description !== undefined && typeof description !== 'string') {
            return `If defined, the "description" property of ${location} must be a string.`;
        }
        if (name !== undefined && typeof name !== 'string') {
            return `If defined, the "name" property of ${location} must be a string.`;
        }
        if (extendsProp !== undefined && typeof extendsProp !== 'string') {
            return `If defined, the "extends" property of ${location} must be a string.`;
        }
        if (!isValidSatoshisValue(value)) {
            return `If defined, the "value" property of ${location} must be either a number or a little-endian, unsigned 64-bit integer as a hexadecimal-encoded string (16 characters).`;
        }
        if (data !== undefined && !isObject(data)) {
            return `If defined, the "data" property of ${location} must be an object.`;
        }
        if (transaction !== undefined && !isObject(transaction)) {
            return `If defined, the "transaction" property of ${location} must be an object.`;
        }
        const dataResult = data === undefined
            ? undefined
            : parseAuthenticationTemplateScenarioData(data, location);
        if (typeof dataResult === 'string') {
            return dataResult;
        }
        const transactionResult = transaction === undefined
            ? undefined
            : parseAuthenticationTemplateScenarioTransaction(transaction, location);
        if (typeof transactionResult === 'string') {
            return transactionResult;
        }
        const inputsUnderTest = transactionResult?.inputs?.filter((input) => input.unlockingBytecode === undefined ||
            input.unlockingBytecode === null);
        if (inputsUnderTest !== undefined && inputsUnderTest.length !== 1) {
            return `If defined, the "transaction.inputs" array of ${location} must have exactly one input under test (an "unlockingBytecode" set to "null").`;
        }
        return {
            id,
            scenario: {
                ...(dataResult === undefined ? {} : { data: dataResult }),
                ...(description === undefined ? {} : { description }),
                ...(extendsProp === undefined ? {} : { extends: extendsProp }),
                ...(name === undefined ? {} : { name }),
                ...(transactionResult === undefined
                    ? {}
                    : { transaction: transactionResult }),
                ...(value === undefined ? {} : { value }),
            },
        };
    });
    const invalidScenarioResults = scenarioResults.filter((result) => typeof result === 'string');
    if (invalidScenarioResults.length > 0) {
        return invalidScenarioResults.join(' ');
    }
    const validScenarioResults = scenarioResults;
    const clonedScenarios = validScenarioResults.reduce((all, result) => ({ ...all, [result.id]: result.scenario }), {});
    const unknownExtends = Object.values(clonedScenarios).reduce((all, scenario) => scenario.extends !== undefined &&
        clonedScenarios[scenario.extends] === undefined
        ? [...all, scenario.extends]
        : all, []);
    if (unknownExtends.length > 0) {
        return `If defined, each scenario ID referenced by another scenario's "extends" property must exist. Unknown scenario IDs: ${listIds(unknownExtends)}.`;
    }
    return clonedScenarios;
};
const isVersion0 = (maybeTemplate) => maybeTemplate.version === 0;
const schemaIsOptionalString = (maybeTemplate) => {
    const property = maybeTemplate.$schema;
    return property === undefined || typeof property === 'string';
};
const nameIsOptionalString = (maybeTemplate) => {
    const property = maybeTemplate.name;
    return property === undefined || typeof property === 'string';
};
const descriptionIsOptionalString = (maybeTemplate) => {
    const property = maybeTemplate.description;
    return property === undefined || typeof property === 'string';
};
const supportsOnlyValidVmIdentifiers = (maybeTemplate, availableIdentifiers) => {
    const { supported } = maybeTemplate;
    return (Array.isArray(supported) &&
        supported.every((value) => availableIdentifiers.includes(value)));
};
/**
 * Parse and validate an authentication template, returning either an error
 * message as a string or a valid, safely-cloned `AuthenticationTemplate`.
 *
 * This method validates both the structure and the contents of a template:
 * - All properties and sub-properties are verified to be of the expected type.
 * - The ID of each entity, script, and scenario is confirmed to be unique.
 * - Script IDs referenced by entities and other scripts (via `unlocks`) are
 * confirmed to exist.
 * - The derivation paths of each HdKey are validated against each other.
 *
 * This method does not validate the BTL contents of scripts (by attempting
 * compilation, evaluate `AuthenticationTemplateScriptTest`s, or test scenario
 * generation. Unknown properties are ignored and excluded from the final
 * result.
 *
 * @param maybeTemplate - object to validate as an authentication template
 */
// eslint-disable-next-line complexity
const validateAuthenticationTemplate = (maybeTemplate) => {
    if (typeof maybeTemplate !== 'object' || maybeTemplate === null) {
        return 'A valid authentication template must be an object.';
    }
    if (!isVersion0(maybeTemplate)) {
        return 'Only version 0 authentication templates are currently supported.';
    }
    const vmIdentifiers = [
        'BCH_2022_11_SPEC',
        'BCH_2022_11',
        'BCH_2022_05_SPEC',
        'BCH_2022_05',
        'BCH_2021_11_SPEC',
        'BCH_2021_11',
        'BCH_2021_05_SPEC',
        'BCH_2021_05',
        'BCH_2020_11_SPEC',
        'BCH_2020_11',
        'BCH_2020_05',
        'BCH_2019_11',
        'BCH_2019_05',
        'BSV_2018_11',
        'BTC_2017_08',
    ];
    if (!supportsOnlyValidVmIdentifiers(maybeTemplate, vmIdentifiers) ||
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        maybeTemplate.supported.includes(undefined)) {
        return `Version 0 authentication templates must include a "supported" list of authentication virtual machine versions. Available identifiers are: ${vmIdentifiers.join(', ')}.`;
    }
    if (!schemaIsOptionalString(maybeTemplate)) {
        return 'The "$schema" property of an authentication template must be a string.';
    }
    if (!nameIsOptionalString(maybeTemplate)) {
        return 'The "name" property of an authentication template must be a string.';
    }
    if (!descriptionIsOptionalString(maybeTemplate)) {
        return 'The "description" property of an authentication template must be a string.';
    }
    const { entities, scenarios, scripts } = maybeTemplate;
    if (typeof entities !== 'object' || entities === null) {
        return `The "entities" property of an authentication template must be an object.`;
    }
    if (typeof scripts !== 'object' || scripts === null) {
        return `The "scripts" property of an authentication template must be an object.`;
    }
    if (scenarios !== undefined &&
        (typeof scenarios !== 'object' || scenarios === null)) {
        return `If defined, the "scenarios" property of an authentication template must be an object.`;
    }
    const parsedScripts = parseAuthenticationTemplateScripts(scripts);
    if (typeof parsedScripts === 'string') {
        return parsedScripts;
    }
    const clonedScripts = [
        ...Object.entries(parsedScripts.locking),
        ...Object.entries(parsedScripts.other),
        ...Object.entries(parsedScripts.tested),
        ...Object.entries(parsedScripts.unlocking),
    ].reduce((all, [id, script]) => ({ ...all, [id]: script }), {});
    const clonedEntities = parseAuthenticationTemplateEntities(entities);
    if (typeof clonedEntities === 'string') {
        return clonedEntities;
    }
    const clonedScenarios = scenarios === undefined
        ? undefined
        : parseAuthenticationTemplateScenarios(scenarios);
    if (typeof clonedScenarios === 'string') {
        return clonedScenarios;
    }
    const variableIds = Object.values(clonedEntities).reduce((all, entity) => entity.variables === undefined
        ? all
        : [...all, ...Object.keys(entity.variables)], []);
    const entityIds = Object.keys(clonedEntities);
    const scriptIds = Object.keys(clonedScripts);
    const scenarioIds = clonedScenarios === undefined ? [] : Object.keys(clonedScenarios);
    const usedIds = [...variableIds, ...entityIds, ...scriptIds, ...scenarioIds];
    const builtInIds = [
        _language_resolve__WEBPACK_IMPORTED_MODULE_3__.BuiltInVariables.currentBlockHeight,
        _language_resolve__WEBPACK_IMPORTED_MODULE_3__.BuiltInVariables.currentBlockTime,
        _language_resolve__WEBPACK_IMPORTED_MODULE_3__.BuiltInVariables.signingSerialization,
    ];
    const usedBuiltInIds = builtInIds.filter((builtInIdentifier) => usedIds.includes(builtInIdentifier));
    if (usedBuiltInIds.length > 0) {
        return `Built-in identifiers may not be re-used by any entity, variable, script, or scenario. The following built-in identifiers are re-used: ${listIds(usedBuiltInIds)}.`;
    }
    const idUsageCount = usedIds.reduce((count, id) => ({
        ...count,
        [id]: (count[id] ?? 0) + 1,
    }), {});
    const duplicateIds = Object.entries(idUsageCount)
        .filter(([, count]) => count > 1)
        .map(([id]) => id);
    if (duplicateIds.length > 0) {
        return `The ID of each entity, variable, script, and scenario in an authentication template must be unique. The following IDs are re-used: ${listIds(duplicateIds)}.`;
    }
    const unknownScriptIds = Object.values(clonedEntities)
        .reduce((all, entity) => entity.scripts === undefined ? all : [...all, ...entity.scripts], [])
        .reduce((unique, id) => scriptIds.includes(id) || unique.includes(id)
        ? unique
        : [...unique, id], []);
    if (unknownScriptIds.length > 0) {
        return `Only known scripts may be assigned to entities. The following script IDs are not provided in this template: ${listIds(unknownScriptIds)}.`;
    }
    const unknownScenarioIds = [
        ...Object.values(parsedScripts.unlocking).reduce((all, script) => [
            ...all,
            ...(script.estimate === undefined ? [] : [script.estimate]),
            ...(script.fails === undefined ? [] : script.fails),
            ...(script.invalid === undefined ? [] : script.invalid),
            ...(script.passes === undefined ? [] : script.passes),
        ], []),
        ...Object.values(parsedScripts.tested).reduce((all, script) => [
            ...all,
            ...script.tests.reduce((fromScript, test) => [
                ...fromScript,
                ...(test.fails === undefined ? [] : test.fails),
                ...(test.invalid === undefined ? [] : test.invalid),
                ...(test.passes === undefined ? [] : test.passes),
            ], []),
        ], []),
    ].reduce((unique, id) => scenarioIds.includes(id) || unique.includes(id)
        ? unique
        : [...unique, id], []);
    if (unknownScenarioIds.length > 0) {
        return `Only known scenarios may be referenced by scripts. The following scenario IDs are not provided in this template: ${listIds(unknownScenarioIds)}.`;
    }
    const entityIdsReferencedByScenarioData = (data) => {
        const hdPublicKeyEntityIds = data?.hdKeys?.hdPublicKeys === undefined
            ? []
            : Object.keys(data.hdKeys.hdPublicKeys);
        const hdPrivateKeyEntityIds = data?.hdKeys?.hdPrivateKeys === undefined
            ? []
            : Object.keys(data.hdKeys.hdPrivateKeys);
        return [...hdPublicKeyEntityIds, ...hdPrivateKeyEntityIds];
    };
    const unknownEntityIds = clonedScenarios === undefined
        ? []
        : Object.values(clonedScenarios)
            .reduce((all, scenario) => [
            ...all,
            ...entityIdsReferencedByScenarioData(scenario.data),
            ...(scenario.transaction?.outputs ?? []).reduce((fromOverrides, output) => isObject(output.lockingBytecode)
                ? [
                    ...fromOverrides,
                    ...entityIdsReferencedByScenarioData(output.lockingBytecode.overrides),
                ]
                : fromOverrides, []),
        ], [])
            .reduce((unique, id) => entityIds.includes(id) || unique.includes(id)
            ? unique
            : [...unique, id], []);
    if (unknownEntityIds.length > 0) {
        return `Only known entities may be referenced by hdKeys properties within scenarios. The following entity IDs are not provided in this template: ${listIds(unknownEntityIds)}.`;
    }
    return {
        ...(maybeTemplate.$schema === undefined
            ? {}
            : { $schema: maybeTemplate.$schema }),
        ...(maybeTemplate.description === undefined
            ? {}
            : { description: maybeTemplate.description }),
        entities: clonedEntities,
        ...(maybeTemplate.name === undefined ? {} : { name: maybeTemplate.name }),
        scenarios: clonedScenarios,
        scripts: clonedScripts,
        supported: maybeTemplate.supported,
        version: maybeTemplate.version,
    };
};
//# sourceMappingURL=template-validation.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/template/template.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/template/template.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export BuiltInVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompilerDefaults [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js .CompilerDefaults */
/*! export IdentifierResolutionErrorType [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export IdentifierResolutionType [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export SigningSerializationAlgorithmIdentifier [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .SigningSerializationAlgorithmIdentifier */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export allErrorsAreRecoverable [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export attemptCompilerOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .attemptCompilerOperations */
/*! export authenticationTemplateP2pkh [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateP2pkhNonHd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilationEnvironment [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilationEnvironmentVirtualizedTests [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .authenticationTemplateToCompilerBCH */
/*! export compileBtl [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptContents [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptP2shLocking [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptP2shUnlocking [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileScriptRaw [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAddressData [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationAddressData */
/*! export compilerOperationAttemptBytecodeResolution [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationAttemptBytecodeResolution */
/*! export compilerOperationCurrentBlockHeight [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationCurrentBlockHeight */
/*! export compilerOperationCurrentBlockTime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationCurrentBlockTime */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeyEcdsaDataSignatureBCH */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeyEcdsaSignatureBCH */
/*! export compilerOperationHdKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationHdKeyPublicKeyCommon */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeySchnorrDataSignatureBCH */
/*! export compilerOperationHdKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHdKeySchnorrSignatureBCH */
/*! export compilerOperationHelperAddressIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperAddressIndex */
/*! export compilerOperationHelperCompileScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperCompileScript */
/*! export compilerOperationHelperComputeDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperComputeDataSignatureBCH */
/*! export compilerOperationHelperComputeSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperComputeSignatureBCH */
/*! export compilerOperationHelperDeriveHdKeyPrivate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperDeriveHdKeyPrivate */
/*! export compilerOperationHelperDeriveHdPrivateNode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperDeriveHdPrivateNode */
/*! export compilerOperationHelperGenerateCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperGenerateCoveredBytecode */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperHdKeyDataSignatureBCH */
/*! export compilerOperationHelperHdKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperHdKeySignatureBCH */
/*! export compilerOperationHelperKeyDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperKeyDataSignatureBCH */
/*! export compilerOperationHelperKeySignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationHelperKeySignatureBCH */
/*! export compilerOperationHelperUnknownEntity [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationHelperUnknownEntity */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeyEcdsaDataSignatureBCH */
/*! export compilerOperationKeyEcdsaSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeyEcdsaSignatureBCH */
/*! export compilerOperationKeyPublicKeyCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationKeyPublicKeyCommon */
/*! export compilerOperationKeySchnorrDataSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeySchnorrDataSignatureBCH */
/*! export compilerOperationKeySchnorrSignatureBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationKeySchnorrSignatureBCH */
/*! export compilerOperationRequires [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js .compilerOperationRequires */
/*! export compilerOperationSigningSerializationCorrespondingOutput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCorrespondingOutput */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCorrespondingOutputHash */
/*! export compilerOperationSigningSerializationCoveredBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCoveredBytecode */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationCoveredBytecodeLength */
/*! export compilerOperationSigningSerializationFullBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationSigningSerializationFullBCH */
/*! export compilerOperationSigningSerializationLocktime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationLocktime */
/*! export compilerOperationSigningSerializationOutpointIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationOutpointIndex */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationOutpointTransactionHash */
/*! export compilerOperationSigningSerializationOutputValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationOutputValue */
/*! export compilerOperationSigningSerializationSequenceNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationSequenceNumber */
/*! export compilerOperationSigningSerializationTransactionOutpoints [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutpoints */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutpointsHash */
/*! export compilerOperationSigningSerializationTransactionOutputs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutputs */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionOutputsHash */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionSequenceNumbers */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationTransactionSequenceNumbersHash */
/*! export compilerOperationSigningSerializationVersion [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationSigningSerializationVersion */
/*! export compilerOperationWalletData [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationWalletData */
/*! export compilerOperationsBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .compilerOperationsBCH */
/*! export compilerOperationsCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js .compilerOperationsCommon */
/*! export containsRange [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramEvaluationCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompiler [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompilerBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js .createCompilerBCH */
/*! export createCompilerCommonSynchronous [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createIdentifierResolver [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export describeExpectedInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendCompilationDataWithScenarioBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendScenarioDefinition [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendScenarioDefinitionData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extendedScenarioDefinitionToCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractBytecodeResolutions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractEvaluationSamples [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractEvaluationSamplesRecursive [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariableBytecodeMap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractUnexecutedRanges [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateDefaultScenarioDefinition [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateExtendedScenario [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateScenarioCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getResolutionErrors [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export mergeRanges [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateEntities [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioDataHdKeys [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioDataKeys [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransactionInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarioTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScenarios [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateScripts [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseAuthenticationTemplateVariable [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export reduceScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export resolveScriptIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export resolveScriptSegment [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export resolveVariableIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export stringifyErrors [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateAuthenticationTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyBtlEvaluationState [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningSerializationAlgorithmIdentifier": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.SigningSerializationAlgorithmIdentifier,
/* harmony export */   "authenticationTemplateToCompilerBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.authenticationTemplateToCompilerBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeyEcdsaSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationHdKeySchnorrSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHdKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationHelperComputeDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperComputeDataSignatureBCH,
/* harmony export */   "compilerOperationHelperComputeSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperComputeSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeyDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperHdKeyDataSignatureBCH,
/* harmony export */   "compilerOperationHelperHdKeySignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperHdKeySignatureBCH,
/* harmony export */   "compilerOperationHelperKeyDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperKeyDataSignatureBCH,
/* harmony export */   "compilerOperationHelperKeySignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationHelperKeySignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeyEcdsaDataSignatureBCH,
/* harmony export */   "compilerOperationKeyEcdsaSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeyEcdsaSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrDataSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeySchnorrDataSignatureBCH,
/* harmony export */   "compilerOperationKeySchnorrSignatureBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationKeySchnorrSignatureBCH,
/* harmony export */   "compilerOperationSigningSerializationFullBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationSigningSerializationFullBCH,
/* harmony export */   "compilerOperationsBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.compilerOperationsBCH,
/* harmony export */   "createCompilerBCH": () => /* reexport safe */ _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__.createCompilerBCH,
/* harmony export */   "BuiltInVariables": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.BuiltInVariables,
/* harmony export */   "IdentifierResolutionErrorType": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.IdentifierResolutionErrorType,
/* harmony export */   "IdentifierResolutionType": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.IdentifierResolutionType,
/* harmony export */   "allErrorsAreRecoverable": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.allErrorsAreRecoverable,
/* harmony export */   "compileBtl": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileBtl,
/* harmony export */   "compileScript": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScript,
/* harmony export */   "compileScriptContents": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptContents,
/* harmony export */   "compileScriptP2shLocking": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptP2shLocking,
/* harmony export */   "compileScriptP2shUnlocking": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptP2shUnlocking,
/* harmony export */   "compileScriptRaw": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.compileScriptRaw,
/* harmony export */   "containsRange": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.containsRange,
/* harmony export */   "createIdentifierResolver": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.createIdentifierResolver,
/* harmony export */   "describeExpectedInput": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.describeExpectedInput,
/* harmony export */   "extractBytecodeResolutions": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractBytecodeResolutions,
/* harmony export */   "extractEvaluationSamples": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamples,
/* harmony export */   "extractEvaluationSamplesRecursive": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractEvaluationSamplesRecursive,
/* harmony export */   "extractResolvedVariableBytecodeMap": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractResolvedVariableBytecodeMap,
/* harmony export */   "extractUnexecutedRanges": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.extractUnexecutedRanges,
/* harmony export */   "getResolutionErrors": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.getResolutionErrors,
/* harmony export */   "mergeRanges": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.mergeRanges,
/* harmony export */   "parseScript": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.parseScript,
/* harmony export */   "reduceScript": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.reduceScript,
/* harmony export */   "resolveScriptIdentifier": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.resolveScriptIdentifier,
/* harmony export */   "resolveScriptSegment": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.resolveScriptSegment,
/* harmony export */   "resolveVariableIdentifier": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.resolveVariableIdentifier,
/* harmony export */   "stringifyErrors": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.stringifyErrors,
/* harmony export */   "verifyBtlEvaluationState": () => /* reexport safe */ _language_language__WEBPACK_IMPORTED_MODULE_1__.verifyBtlEvaluationState,
/* harmony export */   "CompilerDefaults": () => /* reexport safe */ _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__.CompilerDefaults,
/* harmony export */   "attemptCompilerOperations": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.attemptCompilerOperations,
/* harmony export */   "compilerOperationAttemptBytecodeResolution": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationAttemptBytecodeResolution,
/* harmony export */   "compilerOperationHelperAddressIndex": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperAddressIndex,
/* harmony export */   "compilerOperationHelperCompileScript": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperCompileScript,
/* harmony export */   "compilerOperationHelperDeriveHdKeyPrivate": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperDeriveHdKeyPrivate,
/* harmony export */   "compilerOperationHelperDeriveHdPrivateNode": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperDeriveHdPrivateNode,
/* harmony export */   "compilerOperationHelperGenerateCoveredBytecode": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperGenerateCoveredBytecode,
/* harmony export */   "compilerOperationHelperUnknownEntity": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationHelperUnknownEntity,
/* harmony export */   "compilerOperationRequires": () => /* reexport safe */ _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__.compilerOperationRequires,
/* harmony export */   "compilerOperationAddressData": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationAddressData,
/* harmony export */   "compilerOperationCurrentBlockHeight": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationCurrentBlockHeight,
/* harmony export */   "compilerOperationCurrentBlockTime": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationCurrentBlockTime,
/* harmony export */   "compilerOperationHdKeyPublicKeyCommon": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationHdKeyPublicKeyCommon,
/* harmony export */   "compilerOperationKeyPublicKeyCommon": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationKeyPublicKeyCommon,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutput": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCorrespondingOutput,
/* harmony export */   "compilerOperationSigningSerializationCorrespondingOutputHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCorrespondingOutputHash,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecode": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCoveredBytecode,
/* harmony export */   "compilerOperationSigningSerializationCoveredBytecodeLength": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationCoveredBytecodeLength,
/* harmony export */   "compilerOperationSigningSerializationLocktime": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationLocktime,
/* harmony export */   "compilerOperationSigningSerializationOutpointIndex": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationOutpointIndex,
/* harmony export */   "compilerOperationSigningSerializationOutpointTransactionHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationOutpointTransactionHash,
/* harmony export */   "compilerOperationSigningSerializationOutputValue": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationOutputValue,
/* harmony export */   "compilerOperationSigningSerializationSequenceNumber": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationSequenceNumber,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpoints": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutpoints,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutpointsHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutpointsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputs": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutputs,
/* harmony export */   "compilerOperationSigningSerializationTransactionOutputsHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionOutputsHash,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbers": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionSequenceNumbers,
/* harmony export */   "compilerOperationSigningSerializationTransactionSequenceNumbersHash": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationTransactionSequenceNumbersHash,
/* harmony export */   "compilerOperationSigningSerializationVersion": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationSigningSerializationVersion,
/* harmony export */   "compilerOperationWalletData": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationWalletData,
/* harmony export */   "compilerOperationsCommon": () => /* reexport safe */ _compiler_operations__WEBPACK_IMPORTED_MODULE_4__.compilerOperationsCommon,
/* harmony export */   "authenticationTemplateToCompilationEnvironment": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.authenticationTemplateToCompilationEnvironment,
/* harmony export */   "authenticationTemplateToCompilationEnvironmentVirtualizedTests": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.authenticationTemplateToCompilationEnvironmentVirtualizedTests,
/* harmony export */   "createAuthenticationProgramEvaluationCommon": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.createAuthenticationProgramEvaluationCommon,
/* harmony export */   "createCompiler": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.createCompiler,
/* harmony export */   "createCompilerCommonSynchronous": () => /* reexport safe */ _compiler__WEBPACK_IMPORTED_MODULE_6__.createCompilerCommonSynchronous,
/* harmony export */   "extendCompilationDataWithScenarioBytecode": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendCompilationDataWithScenarioBytecode,
/* harmony export */   "extendScenarioDefinition": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendScenarioDefinition,
/* harmony export */   "extendScenarioDefinitionData": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendScenarioDefinitionData,
/* harmony export */   "extendedScenarioDefinitionToCompilationData": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.extendedScenarioDefinitionToCompilationData,
/* harmony export */   "generateDefaultScenarioDefinition": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.generateDefaultScenarioDefinition,
/* harmony export */   "generateExtendedScenario": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.generateExtendedScenario,
/* harmony export */   "generateScenarioCommon": () => /* reexport safe */ _scenarios__WEBPACK_IMPORTED_MODULE_7__.generateScenarioCommon,
/* harmony export */   "authenticationTemplateP2pkh": () => /* reexport safe */ _standard_standard__WEBPACK_IMPORTED_MODULE_8__.authenticationTemplateP2pkh,
/* harmony export */   "authenticationTemplateP2pkhNonHd": () => /* reexport safe */ _standard_standard__WEBPACK_IMPORTED_MODULE_8__.authenticationTemplateP2pkhNonHd,
/* harmony export */   "parseAuthenticationTemplateEntities": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateEntities,
/* harmony export */   "parseAuthenticationTemplateScenarioData": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioData,
/* harmony export */   "parseAuthenticationTemplateScenarioDataHdKeys": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioDataHdKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioDataKeys": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioDataKeys,
/* harmony export */   "parseAuthenticationTemplateScenarioTransaction": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransaction,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionInputs": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransactionInputs,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransactionOutputLockingBytecode,
/* harmony export */   "parseAuthenticationTemplateScenarioTransactionOutputs": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarioTransactionOutputs,
/* harmony export */   "parseAuthenticationTemplateScenarios": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScenarios,
/* harmony export */   "parseAuthenticationTemplateScripts": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateScripts,
/* harmony export */   "parseAuthenticationTemplateVariable": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticationTemplateVariable,
/* harmony export */   "validateAuthenticationTemplate": () => /* reexport safe */ _template_validation__WEBPACK_IMPORTED_MODULE_10__.validateAuthenticationTemplate
/* harmony export */ });
/* harmony import */ var _compiler_bch_compiler_bch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compiler-bch/compiler-bch */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-bch/compiler-bch.js");
/* harmony import */ var _language_language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language/language */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language.js");
/* harmony import */ var _compiler_defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compiler-defaults */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-defaults.js");
/* harmony import */ var _compiler_operation_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compiler-operation-helpers */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operation-helpers.js");
/* harmony import */ var _compiler_operations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compiler-operations */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-operations.js");
/* harmony import */ var _compiler_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compiler-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler-types.js");
/* harmony import */ var _compiler_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_compiler_types__WEBPACK_IMPORTED_MODULE_5__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _compiler_types__WEBPACK_IMPORTED_MODULE_5__) if(["default","SigningSerializationAlgorithmIdentifier","authenticationTemplateToCompilerBCH","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperComputeSignatureBCH","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHelperHdKeySignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationSigningSerializationFullBCH","compilerOperationsBCH","createCompilerBCH","BuiltInVariables","IdentifierResolutionErrorType","IdentifierResolutionType","allErrorsAreRecoverable","compileBtl","compileScript","compileScriptContents","compileScriptP2shLocking","compileScriptP2shUnlocking","compileScriptRaw","containsRange","createIdentifierResolver","describeExpectedInput","extractBytecodeResolutions","extractEvaluationSamples","extractEvaluationSamplesRecursive","extractResolvedVariableBytecodeMap","extractUnexecutedRanges","getResolutionErrors","mergeRanges","parseScript","reduceScript","resolveScriptIdentifier","resolveScriptSegment","resolveVariableIdentifier","stringifyErrors","verifyBtlEvaluationState","CompilerDefaults","attemptCompilerOperations","compilerOperationAttemptBytecodeResolution","compilerOperationHelperAddressIndex","compilerOperationHelperCompileScript","compilerOperationHelperDeriveHdKeyPrivate","compilerOperationHelperDeriveHdPrivateNode","compilerOperationHelperGenerateCoveredBytecode","compilerOperationHelperUnknownEntity","compilerOperationRequires","compilerOperationAddressData","compilerOperationCurrentBlockHeight","compilerOperationCurrentBlockTime","compilerOperationHdKeyPublicKeyCommon","compilerOperationKeyPublicKeyCommon","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationWalletData","compilerOperationsCommon"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _compiler_types__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _compiler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _scenarios__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scenarios */ "./node_modules/@bitauth/libauth/build/module/lib/template/scenarios.js");
/* harmony import */ var _standard_standard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./standard/standard */ "./node_modules/@bitauth/libauth/build/module/lib/template/standard/standard.js");
/* harmony import */ var _template_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./template-types */ "./node_modules/@bitauth/libauth/build/module/lib/template/template-types.js");
/* harmony import */ var _template_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_template_types__WEBPACK_IMPORTED_MODULE_9__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _template_types__WEBPACK_IMPORTED_MODULE_9__) if(["default","SigningSerializationAlgorithmIdentifier","authenticationTemplateToCompilerBCH","compilerOperationHdKeyEcdsaDataSignatureBCH","compilerOperationHdKeyEcdsaSignatureBCH","compilerOperationHdKeySchnorrDataSignatureBCH","compilerOperationHdKeySchnorrSignatureBCH","compilerOperationHelperComputeDataSignatureBCH","compilerOperationHelperComputeSignatureBCH","compilerOperationHelperHdKeyDataSignatureBCH","compilerOperationHelperHdKeySignatureBCH","compilerOperationHelperKeyDataSignatureBCH","compilerOperationHelperKeySignatureBCH","compilerOperationKeyEcdsaDataSignatureBCH","compilerOperationKeyEcdsaSignatureBCH","compilerOperationKeySchnorrDataSignatureBCH","compilerOperationKeySchnorrSignatureBCH","compilerOperationSigningSerializationFullBCH","compilerOperationsBCH","createCompilerBCH","BuiltInVariables","IdentifierResolutionErrorType","IdentifierResolutionType","allErrorsAreRecoverable","compileBtl","compileScript","compileScriptContents","compileScriptP2shLocking","compileScriptP2shUnlocking","compileScriptRaw","containsRange","createIdentifierResolver","describeExpectedInput","extractBytecodeResolutions","extractEvaluationSamples","extractEvaluationSamplesRecursive","extractResolvedVariableBytecodeMap","extractUnexecutedRanges","getResolutionErrors","mergeRanges","parseScript","reduceScript","resolveScriptIdentifier","resolveScriptSegment","resolveVariableIdentifier","stringifyErrors","verifyBtlEvaluationState","CompilerDefaults","attemptCompilerOperations","compilerOperationAttemptBytecodeResolution","compilerOperationHelperAddressIndex","compilerOperationHelperCompileScript","compilerOperationHelperDeriveHdKeyPrivate","compilerOperationHelperDeriveHdPrivateNode","compilerOperationHelperGenerateCoveredBytecode","compilerOperationHelperUnknownEntity","compilerOperationRequires","compilerOperationAddressData","compilerOperationCurrentBlockHeight","compilerOperationCurrentBlockTime","compilerOperationHdKeyPublicKeyCommon","compilerOperationKeyPublicKeyCommon","compilerOperationSigningSerializationCorrespondingOutput","compilerOperationSigningSerializationCorrespondingOutputHash","compilerOperationSigningSerializationCoveredBytecode","compilerOperationSigningSerializationCoveredBytecodeLength","compilerOperationSigningSerializationLocktime","compilerOperationSigningSerializationOutpointIndex","compilerOperationSigningSerializationOutpointTransactionHash","compilerOperationSigningSerializationOutputValue","compilerOperationSigningSerializationSequenceNumber","compilerOperationSigningSerializationTransactionOutpoints","compilerOperationSigningSerializationTransactionOutpointsHash","compilerOperationSigningSerializationTransactionOutputs","compilerOperationSigningSerializationTransactionOutputsHash","compilerOperationSigningSerializationTransactionSequenceNumbers","compilerOperationSigningSerializationTransactionSequenceNumbersHash","compilerOperationSigningSerializationVersion","compilerOperationWalletData","compilerOperationsCommon","authenticationTemplateToCompilationEnvironment","authenticationTemplateToCompilationEnvironmentVirtualizedTests","createAuthenticationProgramEvaluationCommon","createCompiler","createCompilerCommonSynchronous","extendCompilationDataWithScenarioBytecode","extendScenarioDefinition","extendScenarioDefinitionData","extendedScenarioDefinitionToCompilationData","generateDefaultScenarioDefinition","generateExtendedScenario","generateScenarioCommon","authenticationTemplateP2pkh","authenticationTemplateP2pkhNonHd"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _template_types__WEBPACK_IMPORTED_MODULE_9__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _template_validation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./template-validation */ "./node_modules/@bitauth/libauth/build/module/lib/template/template-validation.js");











//# sourceMappingURL=template.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export compileInputTemplate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export compileOutputTemplate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractMissingVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export extractResolvedVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export safelyExtendCompilationData [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compileOutputTemplate": () => /* binding */ compileOutputTemplate,
/* harmony export */   "compileInputTemplate": () => /* binding */ compileInputTemplate,
/* harmony export */   "generateTransaction": () => /* binding */ generateTransaction,
/* harmony export */   "extractResolvedVariables": () => /* binding */ extractResolvedVariables,
/* harmony export */   "extractMissingVariables": () => /* binding */ extractMissingVariables,
/* harmony export */   "safelyExtendCompilationData": () => /* binding */ safelyExtendCompilationData
/* harmony export */ });
/* harmony import */ var _template_language_language_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../template/language/language-utils */ "./node_modules/@bitauth/libauth/build/module/lib/template/language/language-utils.js");
/* harmony import */ var _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");


const returnFailedCompilationDirective = ({ index, result, type, }) => {
    return {
        errors: result.errors.map((error) => ({
            ...error,
            error: `Failed compilation of ${type} directive at index "${index}": ${error.error}`,
        })),
        index,
        ...(result.errorType === 'parse' ? {} : { resolved: result.resolve }),
        type,
    };
};
const compileOutputTemplate = ({ outputTemplate, index, }) => {
    if ('script' in outputTemplate.lockingBytecode) {
        const directive = outputTemplate.lockingBytecode;
        const data = directive.data === undefined ? {} : directive.data;
        const result = directive.compiler.generateBytecode(directive.script, data, true);
        return result.success
            ? {
                lockingBytecode: result.bytecode,
                satoshis: outputTemplate.satoshis,
            }
            : returnFailedCompilationDirective({ index, result, type: 'locking' });
    }
    return {
        lockingBytecode: outputTemplate.lockingBytecode.slice(),
        satoshis: outputTemplate.satoshis,
    };
};
const compileInputTemplate = ({ inputTemplate, index, outputs, template, transactionOutpoints, transactionSequenceNumbers, }) => {
    if ('script' in inputTemplate.unlockingBytecode) {
        const directive = inputTemplate.unlockingBytecode;
        const correspondingOutput = outputs[index];
        const result = directive.compiler.generateBytecode(directive.script, {
            ...directive.data,
            transactionContext: {
                correspondingOutput: correspondingOutput === undefined
                    ? undefined
                    : (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutput)(correspondingOutput),
                locktime: template.locktime,
                outpointIndex: inputTemplate.outpointIndex,
                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
                outputValue: directive.satoshis,
                sequenceNumber: inputTemplate.sequenceNumber,
                transactionOutpoints: transactionOutpoints.slice(),
                transactionOutputs: (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutputsForSigning)(outputs),
                transactionSequenceNumbers: transactionSequenceNumbers.slice(),
                version: template.version,
            },
        }, true);
        return result.success
            ? {
                outpointIndex: inputTemplate.outpointIndex,
                outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
                sequenceNumber: inputTemplate.sequenceNumber,
                unlockingBytecode: result.bytecode,
            }
            : returnFailedCompilationDirective({ index, result, type: 'unlocking' });
    }
    return {
        outpointIndex: inputTemplate.outpointIndex,
        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
        sequenceNumber: inputTemplate.sequenceNumber,
        unlockingBytecode: inputTemplate.unlockingBytecode.slice(),
    };
};
/**
 * Generate a `Transaction` given a `TransactionTemplate` and any applicable
 * compilers and compilation data.
 *
 * Returns either a `Transaction` or an array of compilation errors.
 *
 * For each `CompilationDirective`, the `transactionContext` property will be
 * automatically provided to the compiler. All other necessary `CompilationData`
 * properties must be specified in the `TransactionTemplate`.
 *
 * @param template - the `TransactionTemplate` from which to create the
 * `Transaction`
 */
const generateTransaction = (template) => {
    const outputResults = template.outputs.map((outputTemplate, index) => compileOutputTemplate({
        index,
        outputTemplate,
    }));
    const outputCompilationErrors = outputResults.filter((result) => 'errors' in result);
    if (outputCompilationErrors.length > 0) {
        const outputCompletions = outputResults
            .map((result, index) => 'lockingBytecode' in result
            ? { index, output: result, type: 'output' }
            : result)
            .filter((result) => 'output' in result);
        return {
            completions: outputCompletions,
            errors: outputCompilationErrors,
            stage: 'outputs',
            success: false,
        };
    }
    const outputs = outputResults;
    const inputSerializationElements = template.inputs.map((inputTemplate) => ({
        outpointIndex: inputTemplate.outpointIndex,
        outpointTransactionHash: inputTemplate.outpointTransactionHash.slice(),
        sequenceNumber: inputTemplate.sequenceNumber,
    }));
    const transactionOutpoints = (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutpoints)(inputSerializationElements);
    const transactionSequenceNumbers = (0,_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeSequenceNumbersForSigning)(inputSerializationElements);
    const inputResults = template.inputs.map((inputTemplate, index) => compileInputTemplate({
        index,
        inputTemplate,
        outputs,
        template,
        transactionOutpoints,
        transactionSequenceNumbers,
    }));
    const inputCompilationErrors = inputResults.filter((result) => 'errors' in result);
    if (inputCompilationErrors.length > 0) {
        const inputCompletions = inputResults
            .map((result, index) => 'unlockingBytecode' in result
            ? { index, input: result, type: 'input' }
            : result)
            .filter((result) => 'input' in result);
        return {
            completions: inputCompletions,
            errors: inputCompilationErrors,
            stage: 'inputs',
            success: false,
        };
    }
    const inputs = inputResults;
    return {
        success: true,
        transaction: {
            inputs,
            locktime: template.locktime,
            outputs,
            version: template.version,
        },
    };
};
/**
 * TODO: fundamentally unsound, migrate to PST format
 *
 * Extract a map of successfully resolved variables to their resolved bytecode.
 *
 * @param transactionGenerationError - a transaction generation attempt where
 * `success` is `false`
 */
const extractResolvedVariables = (transactionGenerationError) => transactionGenerationError.errors.reduce((all, error) => error.resolved === undefined
    ? all
    : { ...all, ...(0,_template_language_language_utils__WEBPACK_IMPORTED_MODULE_0__.extractResolvedVariableBytecodeMap)(error.resolved) }, {});
/**
 * TODO: fundamentally unsound, migrate to PST format
 *
 * Given an unsuccessful transaction generation result, extract a map of the
 * identifiers missing from the compilation mapped to the entity which owns each
 * variable.
 *
 * Returns `false` if any errors are fatal (the error either cannot be resolved
 * by providing a variable, or the entity ownership of the required variable was
 * not provided in the compilation data).
 *
 * @param transactionGenerationError - a transaction generation result where
 * `success` is `false`
 */
const extractMissingVariables = (transactionGenerationError) => {
    const allErrors = transactionGenerationError.errors.reduce((all, error) => [...all, ...error.errors], []);
    if (!(0,_template_language_language_utils__WEBPACK_IMPORTED_MODULE_0__.allErrorsAreRecoverable)(allErrors)) {
        return false;
    }
    return allErrors.reduce((all, error) => ({
        ...all,
        [error.missingIdentifier]: error.owningEntity,
    }), {});
};
/**
 * TODO: fundamentally unsound, migrate to PST format
 *
 * Safely extend a compilation data with resolutions provided by other entities
 * (via `extractResolvedVariables`).
 *
 * It is security-critical that compilation data only be extended with expected
 * identifiers from the proper owning entity of each variable. See
 * `CompilationData.bytecode` for details.
 *
 * Returns `false` if any errors are fatal (the error either cannot be resolved
 * by providing a variable, or the entity ownership of the required variable was
 * not provided in the compilation data).
 *
 * @remarks
 * To determine which identifiers are required by a given compilation, the
 * compilation is first attempted with only trusted variables: variables owned
 * or previously verified (like `WalletData`) by the compiling entity. If this
 * compilation produces a `TransactionGenerationError`, the error can be
 * provided to `safelyExtendCompilationData`, along with the trusted compilation
 * data and a mapping of untrusted resolutions (where the result of
 * `extractResolvedVariables` is assigned to the entity ID of the entity from
 * which they were received).
 *
 * The first compilation must use only trusted compilation data
 */
const safelyExtendCompilationData = (transactionGenerationError, trustedCompilationData, untrustedResolutions) => {
    const missing = extractMissingVariables(transactionGenerationError);
    if (missing === false)
        return false;
    const selectedResolutions = Object.entries(missing).reduce((all, [identifier, entityId]) => {
        const entityResolution = untrustedResolutions[entityId];
        if (entityResolution === undefined) {
            return all;
        }
        const resolution = entityResolution[identifier];
        if (resolution === undefined) {
            return all;
        }
        return { ...all, [identifier]: resolution };
    }, {});
    return {
        ...trustedCompilationData,
        bytecode: {
            ...selectedResolutions,
            ...trustedCompilationData.bytecode,
        },
    };
};
//# sourceMappingURL=generate-transaction.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export TransactionDecodingError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeTransactionUnsafe [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeInputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutpoints [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutputsForSigning [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeOutputsForTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeSequenceNumbersForSigning [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransactionHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransactionHashBE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTransactionHashLE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readTransactionInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readTransactionOutput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readTransactionInput": () => /* binding */ readTransactionInput,
/* harmony export */   "encodeInput": () => /* binding */ encodeInput,
/* harmony export */   "encodeInputs": () => /* binding */ encodeInputs,
/* harmony export */   "readTransactionOutput": () => /* binding */ readTransactionOutput,
/* harmony export */   "encodeOutput": () => /* binding */ encodeOutput,
/* harmony export */   "encodeOutputsForTransaction": () => /* binding */ encodeOutputsForTransaction,
/* harmony export */   "decodeTransactionUnsafe": () => /* binding */ decodeTransactionUnsafe,
/* harmony export */   "TransactionDecodingError": () => /* binding */ TransactionDecodingError,
/* harmony export */   "decodeTransaction": () => /* binding */ decodeTransaction,
/* harmony export */   "encodeTransaction": () => /* binding */ encodeTransaction,
/* harmony export */   "getTransactionHashBE": () => /* binding */ getTransactionHashBE,
/* harmony export */   "getTransactionHashLE": () => /* binding */ getTransactionHashLE,
/* harmony export */   "getTransactionHash": () => /* binding */ getTransactionHash,
/* harmony export */   "encodeOutpoints": () => /* binding */ encodeOutpoints,
/* harmony export */   "encodeOutputsForSigning": () => /* binding */ encodeOutputsForSigning,
/* harmony export */   "encodeSequenceNumbersForSigning": () => /* binding */ encodeSequenceNumbersForSigning
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * @param bin - the raw transaction from which to read the input
 * @param offset - the offset at which the input begins
 */
const readTransactionInput = (bin, offset) => {
    const sha256HashBytes = 32;
    const uint32Bytes = 4;
    const offsetAfterTxHash = offset + sha256HashBytes;
    const outpointTransactionHash = bin
        .slice(offset, offsetAfterTxHash)
        .reverse();
    const offsetAfterOutpointIndex = offsetAfterTxHash + uint32Bytes;
    const outpointIndex = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(offsetAfterTxHash, offsetAfterOutpointIndex));
    const { nextOffset: offsetAfterBytecodeLength, value: bytecodeLength, } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, offsetAfterOutpointIndex);
    const offsetAfterBytecode = offsetAfterBytecodeLength + Number(bytecodeLength);
    const unlockingBytecode = bin.slice(offsetAfterBytecodeLength, offsetAfterBytecode);
    const nextOffset = offsetAfterBytecode + uint32Bytes;
    const sequenceNumber = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(offsetAfterBytecode, nextOffset));
    return {
        input: {
            outpointIndex,
            outpointTransactionHash,
            sequenceNumber,
            unlockingBytecode,
        },
        nextOffset,
    };
};
/**
 * Encode a single input for inclusion in an encoded transaction.
 *
 * @param output - the input to encode
 */
const encodeInput = (input) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    input.outpointTransactionHash.slice().reverse(),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(input.outpointIndex),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(input.unlockingBytecode.length)),
    input.unlockingBytecode,
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(input.sequenceNumber),
]);
/**
 * Encode a set of inputs for inclusion in an encoded transaction including
 * the prefixed number of inputs.
 *
 * Format: [BitcoinVarInt: input count] [encoded inputs]
 *
 * @param inputs - the set of inputs to encode
 */
const encodeInputs = (inputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(inputs.length)),
    ...inputs.map(encodeInput),
]);
/**
 * Read a single transaction output from an encoded transaction.
 *
 * @param bin - the raw transaction from which to read the output
 * @param offset - the offset at which the output begins
 */
const readTransactionOutput = (bin, offset) => {
    const uint64Bytes = 8;
    const offsetAfterSatoshis = offset + uint64Bytes;
    const satoshis = bin.slice(offset, offsetAfterSatoshis);
    const { nextOffset: offsetAfterScriptLength, value } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, offsetAfterSatoshis);
    const bytecodeLength = Number(value);
    const nextOffset = offsetAfterScriptLength + bytecodeLength;
    const lockingBytecode = bytecodeLength === 0
        ? new Uint8Array()
        : bin.slice(offsetAfterScriptLength, nextOffset);
    return {
        nextOffset,
        output: {
            lockingBytecode,
            satoshis,
        },
    };
};
/**
 * Encode a single output for inclusion in an encoded transaction.
 *
 * @param output - the output to encode
 */
const encodeOutput = (output) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    output.satoshis,
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(output.lockingBytecode.length)),
    output.lockingBytecode,
]);
/**
 * Encode a set of outputs for inclusion in an encoded transaction
 * including the prefixed number of outputs.
 *
 * Format: [BitcoinVarInt: output count] [encoded outputs]
 *
 * @param outputs - the set of outputs to encode
 */
const encodeOutputsForTransaction = (outputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(outputs.length)),
    ...outputs.map(encodeOutput),
]);
/**
 * Decode a `Uint8Array` using the version 1 or 2 raw transaction format.
 *
 * Note: this method throws runtime errors when attempting to decode messages
 * which do not properly follow the transaction format. If the input is
 * untrusted, use `decodeTransaction`.
 *
 * @param bin - the raw message to decode
 */
const decodeTransactionUnsafe = (bin) => {
    const uint32Bytes = 4;
    const version = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(0, uint32Bytes));
    const offsetAfterVersion = uint32Bytes;
    const { nextOffset: offsetAfterInputCount, value: inputCount, } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, offsetAfterVersion);
    // eslint-disable-next-line functional/no-let
    let cursor = offsetAfterInputCount;
    const inputs = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < Number(inputCount); i++) {
        const { input, nextOffset } = readTransactionInput(bin, cursor);
        // eslint-disable-next-line functional/no-expression-statement
        cursor = nextOffset;
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        inputs.push(input);
    }
    const { nextOffset: offsetAfterOutputCount, value: outputCount, } = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.readBitcoinVarInt)(bin, cursor);
    // eslint-disable-next-line functional/no-expression-statement
    cursor = offsetAfterOutputCount;
    const outputs = [];
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < Number(outputCount); i++) {
        const { output, nextOffset } = readTransactionOutput(bin, cursor);
        // eslint-disable-next-line functional/no-expression-statement
        cursor = nextOffset;
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        outputs.push(output);
    }
    const locktime = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToNumberUint32LE)(bin.subarray(cursor, cursor + uint32Bytes));
    return {
        inputs,
        locktime,
        outputs,
        version,
    };
};
var TransactionDecodingError;
(function (TransactionDecodingError) {
    TransactionDecodingError["invalidFormat"] = "Transaction decoding error: message does not follow the version 1 or version 2 transaction format.";
})(TransactionDecodingError || (TransactionDecodingError = {}));
/**
 * Decode a `Uint8Array` using the version 1 or 2 raw transaction format.
 *
 * @param bin - the raw message to decode
 */
const decodeTransaction = (bin) => {
    // eslint-disable-next-line functional/no-try-statement
    try {
        return decodeTransactionUnsafe(bin);
    }
    catch {
        return TransactionDecodingError.invalidFormat;
    }
};
/**
 * Encode a `Transaction` using the standard P2P network format. This
 * serialization is also used when computing the transaction's hash (A.K.A.
 * "transaction ID" or "TXID").
 */
const encodeTransaction = (tx) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(tx.version),
    encodeInputs(tx.inputs),
    encodeOutputsForTransaction(tx.outputs),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(tx.locktime),
]);
/**
 * Compute a transaction hash (A.K.A. "transaction ID" or "TXID") from an
 * encoded transaction in big-endian byte order. This is the byte order
 * typically used by block explorers and other user interfaces.
 *
 * @returns the transaction hash as a string
 *
 * @param transaction - the encoded transaction
 * @param sha256 - an implementation of sha256
 */
const getTransactionHashBE = (sha256, transaction) => sha256.hash(sha256.hash(transaction));
/**
 * Compute a transaction hash (A.K.A. "transaction ID" or "TXID") from an
 * encoded transaction in little-endian byte order. This is the byte order
 * used in P2P network messages.
 *
 * @remarks
 * The result of sha256 is defined by its specification as big-endian, but
 * bitcoin message formats always reverse the order of this result for
 * serialization in P2P network messages.
 *
 * @returns the transaction hash in little-endian byte order
 *
 * @param transaction - the encoded transaction
 * @param sha256 - an implementation of sha256
 */
const getTransactionHashLE = (sha256, transaction) => getTransactionHashBE(sha256, transaction).reverse();
/**
 * Return a `Transaction`'s hash as a string (in big-endian byte order as is
 * common for user interfaces).
 *
 * @param transaction - the encoded transaction
 * @param sha256 - an implementation of sha256
 */
const getTransactionHash = (sha256, transaction) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToHex)(getTransactionHashBE(sha256, transaction));
/**
 * Get the hash of all outpoints in a series of inputs. (For use in
 * `hashTransactionOutpoints`.)
 *
 * @param inputs - the series of inputs from which to extract the outpoints
 * @param sha256 - an implementation of sha256
 */
const encodeOutpoints = (inputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(inputs.map((i) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    i.outpointTransactionHash.slice().reverse(),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(i.outpointIndex),
])));
/**
 * Encode an array of transaction outputs for use in transaction signing
 * serializations.
 *
 * @param outputs - the array of outputs to encode
 */
const encodeOutputsForSigning = (outputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(outputs.map(encodeOutput));
/**
 * Encode an array of input sequence numbers for use in transaction signing
 * serializations.
 *
 * @param inputs - the array of inputs from which to extract the sequence
 * numbers
 */
const encodeSequenceNumbersForSigning = (inputs) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(inputs.map((i) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(i.sequenceNumber)));
//# sourceMappingURL=transaction-serialization.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export invalidSatoshis [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "invalidSatoshis": () => /* binding */ invalidSatoshis
/* harmony export */ });
/**
 * The maximum uint64 value – an impossibly large, intentionally invalid value
 * for `satoshis`. See `Transaction.satoshis` for details.
 */
// prettier-ignore
// eslint-disable-next-line @typescript-eslint/no-magic-numbers
const invalidSatoshis = Uint8Array.from([255, 255, 255, 255, 255, 255, 255, 255]);
//# sourceMappingURL=transaction-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export TransactionDecodingError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .TransactionDecodingError */
/*! export compileInputTemplate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .compileInputTemplate */
/*! export compileOutputTemplate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .compileOutputTemplate */
/*! export decodeTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .decodeTransaction */
/*! export decodeTransactionUnsafe [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .decodeTransactionUnsafe */
/*! export encodeInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeInput */
/*! export encodeInputs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeInputs */
/*! export encodeOutpoints [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutpoints */
/*! export encodeOutput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutput */
/*! export encodeOutputsForSigning [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutputsForSigning */
/*! export encodeOutputsForTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeOutputsForTransaction */
/*! export encodeSequenceNumbersForSigning [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeSequenceNumbersForSigning */
/*! export encodeTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .encodeTransaction */
/*! export extractMissingVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .extractMissingVariables */
/*! export extractResolvedVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .extractResolvedVariables */
/*! export generateTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .generateTransaction */
/*! export getTransactionHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .getTransactionHash */
/*! export getTransactionHashBE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .getTransactionHashBE */
/*! export getTransactionHashLE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .getTransactionHashLE */
/*! export invalidSatoshis [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js .invalidSatoshis */
/*! export readTransactionInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .readTransactionInput */
/*! export readTransactionOutput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js .readTransactionOutput */
/*! export safelyExtendCompilationData [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js .safelyExtendCompilationData */
/*! export verifyTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js .verifyTransaction */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compileInputTemplate": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.compileInputTemplate,
/* harmony export */   "compileOutputTemplate": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.compileOutputTemplate,
/* harmony export */   "extractMissingVariables": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.extractMissingVariables,
/* harmony export */   "extractResolvedVariables": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.extractResolvedVariables,
/* harmony export */   "generateTransaction": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.generateTransaction,
/* harmony export */   "safelyExtendCompilationData": () => /* reexport safe */ _generate_transaction__WEBPACK_IMPORTED_MODULE_0__.safelyExtendCompilationData,
/* harmony export */   "TransactionDecodingError": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.TransactionDecodingError,
/* harmony export */   "decodeTransaction": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.decodeTransaction,
/* harmony export */   "decodeTransactionUnsafe": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.decodeTransactionUnsafe,
/* harmony export */   "encodeInput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeInput,
/* harmony export */   "encodeInputs": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeInputs,
/* harmony export */   "encodeOutpoints": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutpoints,
/* harmony export */   "encodeOutput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutput,
/* harmony export */   "encodeOutputsForSigning": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutputsForSigning,
/* harmony export */   "encodeOutputsForTransaction": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeOutputsForTransaction,
/* harmony export */   "encodeSequenceNumbersForSigning": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeSequenceNumbersForSigning,
/* harmony export */   "encodeTransaction": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeTransaction,
/* harmony export */   "getTransactionHash": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHash,
/* harmony export */   "getTransactionHashBE": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHashBE,
/* harmony export */   "getTransactionHashLE": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHashLE,
/* harmony export */   "readTransactionInput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.readTransactionInput,
/* harmony export */   "readTransactionOutput": () => /* reexport safe */ _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.readTransactionOutput,
/* harmony export */   "invalidSatoshis": () => /* reexport safe */ _transaction_types__WEBPACK_IMPORTED_MODULE_2__.invalidSatoshis,
/* harmony export */   "verifyTransaction": () => /* reexport safe */ _verify_transaction__WEBPACK_IMPORTED_MODULE_3__.verifyTransaction
/* harmony export */ });
/* harmony import */ var _generate_transaction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generate-transaction */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/generate-transaction.js");
/* harmony import */ var _transaction_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");
/* harmony import */ var _transaction_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction-types */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-types.js");
/* harmony import */ var _verify_transaction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verify-transaction */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js");




//# sourceMappingURL=transaction.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/transaction/verify-transaction.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export verifyTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "verifyTransaction": () => /* binding */ verifyTransaction
/* harmony export */ });
/**
 * Statelessly verify a transaction given an `AuthenticationVirtualMachine` and
 * a list of spent outputs (the `lockingBytecode` and `satoshis` being spent by
 * each input).
 *
 * Note, while the virtual machine will evaluate locktime-related operations
 * against the transactions own `locktime`, this method does not verify the
 * transaction's `locktime` property itself (allowing verification to be
 * stateless).
 *
 * Before a statelessly verified transaction can be added to the blockchain,
 * node implementations must confirm that:
 * - all `spentOutputs` are still unspent, and
 * - both relative and absolute locktime consensus requirements have been met.
 * (See BIP65, BIP68, and BIP112 for details.)
 *
 * @param spentOutputs - an array of the `Output`s spent by the transaction's
 * `inputs` in matching order (`inputs[0]` spends `spentOutputs[0]`, etc.)
 * @param transaction - the transaction to verify
 * @param vm - the authentication virtual machine to use in validation
 */
const verifyTransaction = ({ spentOutputs, transaction, vm, }) => {
    if (transaction.inputs.length !== spentOutputs.length) {
        return [
            'Unable to verify transaction: a spent output must be provided for each transaction input.',
        ];
    }
    const errors = transaction.inputs.reduce((all, _, index) => {
        const program = {
            inputIndex: index,
            sourceOutput: spentOutputs[index],
            spendingTransaction: transaction,
        };
        const state = vm.evaluate(program);
        const verify = vm.verify(state);
        if (verify === true) {
            return all;
        }
        return [...all, `Error in evaluating input index "${index}": ${verify}`];
    }, []);
    return errors.length === 0 ? true : errors;
};
//# sourceMappingURL=verify-transaction.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js ***!
  \****************************************************************************************************/
/*! namespace exports */
/*! export OpcodeDescriptionsBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodeDescriptionsUniqueBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodeDescriptionsUniqueBCH": () => /* binding */ OpcodeDescriptionsUniqueBCH,
/* harmony export */   "OpcodeDescriptionsBCH": () => /* binding */ OpcodeDescriptionsBCH
/* harmony export */ });
/* harmony import */ var _common_descriptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/descriptions */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js");

var OpcodeDescriptionsUniqueBCH;
(function (OpcodeDescriptionsUniqueBCH) {
    OpcodeDescriptionsUniqueBCH["OP_CAT"] = "Pop the top 2 items from the stack and concatenate them, pushing the result.";
    OpcodeDescriptionsUniqueBCH["OP_SPLIT"] = "Pop the top item from the stack as an index (Script Number) and the next item as a byte array. Split the byte array into two stack items at the index (zero-based), pushing the results.";
    OpcodeDescriptionsUniqueBCH["OP_NUM2BIN"] = "Pop the top item from the stack as an item length (Script Number) and the next item as a Script Number (without encoding restrictions). Re-encode the number using a byte array of the provided length, filling any unused bytes with zeros. (If the requested length is too short to encode the number, error.)";
    OpcodeDescriptionsUniqueBCH["OP_BIN2NUM"] = "Pop the top item from the stack as a Script Number without encoding restrictions. Minimally-encode the number and push the result. (If the number can't be encoded in 4 bytes or less, error.)";
    OpcodeDescriptionsUniqueBCH["OP_AND"] = "Pop the top 2 items from the stack and perform a bitwise AND on each byte, pushing the result. If the length of the items are not equal, error.";
    OpcodeDescriptionsUniqueBCH["OP_OR"] = "Pop the top 2 items from the stack and perform a bitwise OR on each byte, pushing the result. If the length of the items are not equal, error.";
    OpcodeDescriptionsUniqueBCH["OP_XOR"] = "Pop the top 2 items from the stack and perform a bitwise XOR on each byte, pushing the result. If the length of the items are not equal, error.";
    OpcodeDescriptionsUniqueBCH["OP_DIV"] = "Pop the top item from the stack as a denominator (Script Number) and the next as a numerator (Script Number). Divide and push the result to the stack.";
    OpcodeDescriptionsUniqueBCH["OP_MOD"] = "Pop the top item from the stack as a denominator (Script Number) and the next as a numerator (Script Number). Divide and push the remainder to the stack.";
    OpcodeDescriptionsUniqueBCH["OP_CHECKDATASIG"] = "Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsUniqueBCH["OP_CHECKDATASIGVERIFY"] = "Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is not valid, error. (This operation is a combination of OP_CHECKDATASIG followed by OP_VERIFY.)";
    OpcodeDescriptionsUniqueBCH["OP_REVERSEBYTES"] = "Pop the top item from the stack and reverse it, pushing the result.";
})(OpcodeDescriptionsUniqueBCH || (OpcodeDescriptionsUniqueBCH = {}));
/**
 * A map of descriptions for each Bitcoin Cash opcode.
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
const OpcodeDescriptionsBCH = {
    ..._common_descriptions__WEBPACK_IMPORTED_MODULE_0__.OpcodeDescriptionsCommon,
    ...OpcodeDescriptionsUniqueBCH,
};
//# sourceMappingURL=bch-descriptions.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthenticationErrorBCH": () => /* binding */ AuthenticationErrorBCH
/* harmony export */ });
var AuthenticationErrorBCH;
(function (AuthenticationErrorBCH) {
    AuthenticationErrorBCH["exceededMaximumOperationCount"] = "Program exceeded the maximum operation count (201 operations).";
    AuthenticationErrorBCH["exceededMaximumStackItemLength"] = "Program attempted to push a stack item which exceeded the maximum stack item length (520 bytes).";
    AuthenticationErrorBCH["exceededMaximumScriptNumberLength"] = "Program attempted an OP_BIN2NUM operation on a byte sequence which cannot be encoded within the maximum Script Number length (4 bytes).";
    AuthenticationErrorBCH["divisionByZero"] = "Program attempted to divide a number by zero.";
    AuthenticationErrorBCH["insufficientLength"] = "Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number.";
    AuthenticationErrorBCH["invalidSplitIndex"] = "Program called an OP_SPLIT operation with an invalid index.";
    AuthenticationErrorBCH["malformedP2shBytecode"] = "Redeem bytecode was malformed prior to P2SH evaluation.";
    AuthenticationErrorBCH["mismatchedBitwiseOperandLength"] = "Program attempted a bitwise operation on operands of different lengths.";
    AuthenticationErrorBCH["requiresPushOnly"] = "Unlocking bytecode may contain only push operations.";
})(AuthenticationErrorBCH || (AuthenticationErrorBCH = {}));
//# sourceMappingURL=bch-errors.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export InstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodesBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js .OpcodesBCH */
/*! export createInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFlagsForInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instructionSetBCHCurrentStrict [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isPayToScriptHash [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isWitnessProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBCH": () => /* reexport safe */ _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH,
/* harmony export */   "isPayToScriptHash": () => /* binding */ isPayToScriptHash,
/* harmony export */   "isWitnessProgram": () => /* binding */ isWitnessProgram,
/* harmony export */   "InstructionSetBCH": () => /* binding */ InstructionSetBCH,
/* harmony export */   "instructionSetBCHCurrentStrict": () => /* binding */ instructionSetBCHCurrentStrict,
/* harmony export */   "getFlagsForInstructionSetBCH": () => /* binding */ getFlagsForInstructionSetBCH,
/* harmony export */   "createInstructionSetBCH": () => /* binding */ createInstructionSetBCH
/* harmony export */ });
/* harmony import */ var _common_combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _bch_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bch-errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");
/* harmony import */ var _bch_operations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bch-operations */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js");







const isPayToScriptHash = (verificationInstructions) => verificationInstructions.length === 3 /* length */ &&
    verificationInstructions[0].opcode ===
        _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_HASH160 &&
    verificationInstructions[1].opcode ===
        _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_PUSHBYTES_20 &&
    verificationInstructions[2 /* lastElement */]
        .opcode === _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_EQUAL;
/**
 * Test a stack item for the SegWit Recovery Rules activated in `BCH_2019_05`.
 *
 * @param bytecode - the stack item to test
 */
// eslint-disable-next-line complexity
const isWitnessProgram = (bytecode) => {
    const correctLength = bytecode.length >= 4 /* minimumLength */ &&
        bytecode.length <= 42 /* maximumLength */;
    const validVersionPush = bytecode[0] === 0 /* OP_0 */ ||
        (bytecode[0] >= 81 /* OP_1 */ && bytecode[0] <= 96 /* OP_16 */);
    const correctLengthByte = bytecode[1] + 2 /* versionAndLengthBytes */ === bytecode.length;
    return correctLength && validVersionPush && correctLengthByte;
};
/**
 * From C++ implementation:
 * Note that IsPushOnly() *does* consider OP_RESERVED to be a push-type
 * opcode, however execution of OP_RESERVED fails, so it's not relevant to
 * P2SH/BIP62 as the scriptSig would fail prior to the P2SH special
 * validation code being executed.
 */
const isPushOperation = (opcode) => opcode < _bch_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesBCH.OP_16;
/**
 * This library's supported versions of the BCH virtual machine. "Strict"
 * versions (A.K.A. `isStandard` from the C++ implementations) enable additional
 * validation which is commonly used on the P2P network before relaying
 * transactions. Transactions which fail these rules are often called
 * "non-standard" – the transactions can technically be included by miners in
 * valid blocks, but most network nodes will refuse to relay them.
 *
 * BCH instruction sets marked `SPEC` ("specification") have not yet been
 * deployed on the main network and are subject to change. After deployment, the
 * `SPEC` suffix is removed. This change only effects the name of the TypeScript
 * enum member – the value remains the same. E.g.
 * `InstructionSetBCH.BCH_2020_05_SPEC` became `InstructionSetBCH.BCH_2020_05`,
 * but the value remained `BCH_2020_05`.
 *
 * This allows consumers to select an upgrade policy: when a version of Libauth
 * is released in which compatibility with a deployed virtual machine is
 * confirmed, this change can help to identify downstream code which requires
 * review.
 *  - Consumers which prefer to upgrade manually should specify a `SPEC` type,
 * e.g. `InstructionSetBCH.BCH_2020_05_SPEC`.
 *  - Consumers which prefer full compatibility between Libauth version should
 * specify a precise instruction set value (e.g. `BCH_2020_05`) or use the
 * dedicated "current" value: `instructionSetBCHCurrentStrict`.
 */
var InstructionSetBCH;
(function (InstructionSetBCH) {
    InstructionSetBCH["BCH_2019_05"] = "BCH_2019_05";
    InstructionSetBCH["BCH_2019_05_STRICT"] = "BCH_2019_05_STRICT";
    InstructionSetBCH["BCH_2019_11"] = "BCH_2019_11";
    InstructionSetBCH["BCH_2019_11_STRICT"] = "BCH_2019_11_STRICT";
    InstructionSetBCH["BCH_2020_05"] = "BCH_2020_05";
    InstructionSetBCH["BCH_2020_05_STRICT"] = "BCH_2020_05_STRICT";
    InstructionSetBCH["BCH_2020_11_SPEC"] = "BCH_2020_11";
    InstructionSetBCH["BCH_2020_11_STRICT_SPEC"] = "BCH_2020_11_STRICT";
    InstructionSetBCH["BCH_2021_05_SPEC"] = "BCH_2021_05";
    InstructionSetBCH["BCH_2021_05_STRICT_SPEC"] = "BCH_2021_05_STRICT";
    InstructionSetBCH["BCH_2021_11_SPEC"] = "BCH_2021_11";
    InstructionSetBCH["BCH_2021_11_STRICT_SPEC"] = "BCH_2021_11_STRICT";
    InstructionSetBCH["BCH_2022_05_SPEC"] = "BCH_2022_05";
    InstructionSetBCH["BCH_2022_05_STRICT_SPEC"] = "BCH_2022_05_STRICT";
    InstructionSetBCH["BCH_2022_11_SPEC"] = "BCH_2022_11";
    InstructionSetBCH["BCH_2022_11_STRICT_SPEC"] = "BCH_2022_11_STRICT";
})(InstructionSetBCH || (InstructionSetBCH = {}));
/**
 * The current strict virtual machine version used by the Bitcoin Cash (BCH)
 * network.
 */
const instructionSetBCHCurrentStrict = InstructionSetBCH.BCH_2020_05_STRICT;
// eslint-disable-next-line complexity
const getFlagsForInstructionSetBCH = (instructionSet) => {
    switch (instructionSet) {
        case InstructionSetBCH.BCH_2019_05:
            return {
                disallowUpgradableNops: false,
                opReverseBytes: false,
                requireBugValueZero: false,
                requireMinimalEncoding: false,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2019_05_STRICT:
            return {
                disallowUpgradableNops: true,
                opReverseBytes: false,
                requireBugValueZero: false,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2019_11:
            return {
                disallowUpgradableNops: false,
                opReverseBytes: false,
                requireBugValueZero: true,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2019_11_STRICT:
            return {
                disallowUpgradableNops: true,
                opReverseBytes: false,
                requireBugValueZero: true,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2020_05:
            return {
                disallowUpgradableNops: false,
                opReverseBytes: true,
                requireBugValueZero: false,
                requireMinimalEncoding: false,
                requireNullSignatureFailures: true,
            };
        case InstructionSetBCH.BCH_2020_05_STRICT:
            return {
                disallowUpgradableNops: true,
                opReverseBytes: true,
                requireBugValueZero: true,
                requireMinimalEncoding: true,
                requireNullSignatureFailures: true,
            };
        default:
            return new Error(`${instructionSet} is not a known instruction set.`);
    }
};
/**
 * Initialize a new instruction set for the BCH virtual machine.
 *
 * @param flags - an object configuring the flags for this vm (see
 * `getFlagsForInstructionSetBCH`)
 * @param sha1 - a Sha1 implementation
 * @param sha256 - a Sha256 implementation
 * @param ripemd160 - a Ripemd160 implementation
 * @param secp256k1 - a Secp256k1 implementation
 */
const createInstructionSetBCH = ({ flags, ripemd160, secp256k1, sha1, sha256, }) => ({
    clone: _common_common__WEBPACK_IMPORTED_MODULE_1__.cloneAuthenticationProgramStateCommon,
    continue: (state) => state.error === undefined && state.ip < state.instructions.length,
    // eslint-disable-next-line complexity
    evaluate: (program, stateEvaluate) => {
        const { unlockingBytecode } = program.spendingTransaction.inputs[program.inputIndex];
        const { lockingBytecode } = program.sourceOutput;
        const unlockingInstructions = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.parseBytecode)(unlockingBytecode);
        const lockingInstructions = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.parseBytecode)(lockingBytecode);
        const externalState = (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createTransactionContextCommon)(program);
        const initialState = (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationProgramStateCommon)({
            instructions: unlockingInstructions,
            stack: [],
            transactionContext: externalState,
        });
        const unlockingResult = unlockingBytecode.length > _common_common__WEBPACK_IMPORTED_MODULE_1__.ConsensusCommon.maximumBytecodeLength
            ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.exceededMaximumBytecodeLengthUnlocking, initialState)
            : (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.authenticationInstructionsAreMalformed)(unlockingInstructions)
                ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.malformedUnlockingBytecode, initialState)
                : lockingBytecode.length > _common_common__WEBPACK_IMPORTED_MODULE_1__.ConsensusCommon.maximumBytecodeLength
                    ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.exceededMaximumBytecodeLengthLocking, initialState)
                    : (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.authenticationInstructionsAreMalformed)(lockingInstructions)
                        ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.malformedLockingBytecode, initialState)
                        : initialState.instructions.every((instruction) => isPushOperation(instruction.opcode))
                            ? stateEvaluate(initialState)
                            : (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorBCH.requiresPushOnly, initialState);
        if (unlockingResult.error !== undefined) {
            return unlockingResult;
        }
        const lockingResult = stateEvaluate((0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationProgramStateCommon)({
            instructions: lockingInstructions,
            stack: unlockingResult.stack,
            transactionContext: externalState,
        }));
        if (!isPayToScriptHash(lockingInstructions)) {
            return lockingResult;
        }
        const p2shStack = (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.cloneStack)(unlockingResult.stack);
        // eslint-disable-next-line functional/immutable-data
        const p2shScript = p2shStack.pop() ?? Uint8Array.of();
        if (p2shStack.length === 0 && isWitnessProgram(p2shScript)) {
            return lockingResult;
        }
        const p2shInstructions = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.parseBytecode)(p2shScript);
        return (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.authenticationInstructionsAreMalformed)(p2shInstructions)
            ? {
                ...lockingResult,
                error: _bch_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorBCH.malformedP2shBytecode,
            }
            : stateEvaluate((0,_common_common__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationProgramStateCommon)({
                instructions: p2shInstructions,
                stack: p2shStack,
                transactionContext: externalState,
            }));
    },
    operations: {
        ...(0,_common_common__WEBPACK_IMPORTED_MODULE_1__.commonOperations)({ flags, ripemd160, secp256k1, sha1, sha256 }),
        ...(0,_common_combinators__WEBPACK_IMPORTED_MODULE_0__.mapOverOperations)((0,_bch_operations__WEBPACK_IMPORTED_MODULE_5__.bitcoinCashOperations)({
            flags,
            secp256k1,
            sha256,
        }), _common_combinators__WEBPACK_IMPORTED_MODULE_0__.conditionallyEvaluate, _common_combinators__WEBPACK_IMPORTED_MODULE_0__.incrementOperationCount, _common_common__WEBPACK_IMPORTED_MODULE_1__.checkLimitsCommon),
    },
    ...(0,_common_common__WEBPACK_IMPORTED_MODULE_1__.undefinedOperation)(),
    verify: (state) => {
        if (state.error !== undefined) {
            return state.error;
        }
        if (state.executionStack.length !== 0) {
            return _common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.nonEmptyExecutionStack;
        }
        if (state.stack.length !== 1) {
            return _common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.requiresCleanStack;
        }
        if (!(0,_common_common__WEBPACK_IMPORTED_MODULE_1__.stackItemIsTruthy)(state.stack[0])) {
            return _common_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unsuccessfulEvaluation;
        }
        return true;
    },
});
//# sourceMappingURL=bch-instruction-sets.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export OpcodeAlternateNamesBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodesBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBCH": () => /* binding */ OpcodesBCH,
/* harmony export */   "OpcodeAlternateNamesBCH": () => /* binding */ OpcodeAlternateNamesBCH
/* harmony export */ });
var OpcodesBCH;
(function (OpcodesBCH) {
    /**
     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`
     */
    OpcodesBCH[OpcodesBCH["OP_0"] = 0] = "OP_0";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_1"] = 1] = "OP_PUSHBYTES_1";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_2"] = 2] = "OP_PUSHBYTES_2";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_3"] = 3] = "OP_PUSHBYTES_3";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_4"] = 4] = "OP_PUSHBYTES_4";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_5"] = 5] = "OP_PUSHBYTES_5";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_6"] = 6] = "OP_PUSHBYTES_6";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_7"] = 7] = "OP_PUSHBYTES_7";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_8"] = 8] = "OP_PUSHBYTES_8";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_9"] = 9] = "OP_PUSHBYTES_9";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_10"] = 10] = "OP_PUSHBYTES_10";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_11"] = 11] = "OP_PUSHBYTES_11";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_12"] = 12] = "OP_PUSHBYTES_12";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_13"] = 13] = "OP_PUSHBYTES_13";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_14"] = 14] = "OP_PUSHBYTES_14";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_15"] = 15] = "OP_PUSHBYTES_15";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_16"] = 16] = "OP_PUSHBYTES_16";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_17"] = 17] = "OP_PUSHBYTES_17";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_18"] = 18] = "OP_PUSHBYTES_18";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_19"] = 19] = "OP_PUSHBYTES_19";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_20"] = 20] = "OP_PUSHBYTES_20";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_21"] = 21] = "OP_PUSHBYTES_21";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_22"] = 22] = "OP_PUSHBYTES_22";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_23"] = 23] = "OP_PUSHBYTES_23";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_24"] = 24] = "OP_PUSHBYTES_24";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_25"] = 25] = "OP_PUSHBYTES_25";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_26"] = 26] = "OP_PUSHBYTES_26";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_27"] = 27] = "OP_PUSHBYTES_27";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_28"] = 28] = "OP_PUSHBYTES_28";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_29"] = 29] = "OP_PUSHBYTES_29";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_30"] = 30] = "OP_PUSHBYTES_30";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_31"] = 31] = "OP_PUSHBYTES_31";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_32"] = 32] = "OP_PUSHBYTES_32";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_33"] = 33] = "OP_PUSHBYTES_33";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_34"] = 34] = "OP_PUSHBYTES_34";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_35"] = 35] = "OP_PUSHBYTES_35";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_36"] = 36] = "OP_PUSHBYTES_36";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_37"] = 37] = "OP_PUSHBYTES_37";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_38"] = 38] = "OP_PUSHBYTES_38";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_39"] = 39] = "OP_PUSHBYTES_39";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_40"] = 40] = "OP_PUSHBYTES_40";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_41"] = 41] = "OP_PUSHBYTES_41";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_42"] = 42] = "OP_PUSHBYTES_42";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_43"] = 43] = "OP_PUSHBYTES_43";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_44"] = 44] = "OP_PUSHBYTES_44";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_45"] = 45] = "OP_PUSHBYTES_45";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_46"] = 46] = "OP_PUSHBYTES_46";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_47"] = 47] = "OP_PUSHBYTES_47";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_48"] = 48] = "OP_PUSHBYTES_48";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_49"] = 49] = "OP_PUSHBYTES_49";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_50"] = 50] = "OP_PUSHBYTES_50";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_51"] = 51] = "OP_PUSHBYTES_51";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_52"] = 52] = "OP_PUSHBYTES_52";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_53"] = 53] = "OP_PUSHBYTES_53";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_54"] = 54] = "OP_PUSHBYTES_54";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_55"] = 55] = "OP_PUSHBYTES_55";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_56"] = 56] = "OP_PUSHBYTES_56";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_57"] = 57] = "OP_PUSHBYTES_57";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_58"] = 58] = "OP_PUSHBYTES_58";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_59"] = 59] = "OP_PUSHBYTES_59";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_60"] = 60] = "OP_PUSHBYTES_60";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_61"] = 61] = "OP_PUSHBYTES_61";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_62"] = 62] = "OP_PUSHBYTES_62";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_63"] = 63] = "OP_PUSHBYTES_63";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_64"] = 64] = "OP_PUSHBYTES_64";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_65"] = 65] = "OP_PUSHBYTES_65";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_66"] = 66] = "OP_PUSHBYTES_66";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_67"] = 67] = "OP_PUSHBYTES_67";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_68"] = 68] = "OP_PUSHBYTES_68";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_69"] = 69] = "OP_PUSHBYTES_69";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_70"] = 70] = "OP_PUSHBYTES_70";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_71"] = 71] = "OP_PUSHBYTES_71";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_72"] = 72] = "OP_PUSHBYTES_72";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_73"] = 73] = "OP_PUSHBYTES_73";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_74"] = 74] = "OP_PUSHBYTES_74";
    OpcodesBCH[OpcodesBCH["OP_PUSHBYTES_75"] = 75] = "OP_PUSHBYTES_75";
    OpcodesBCH[OpcodesBCH["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    OpcodesBCH[OpcodesBCH["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    OpcodesBCH[OpcodesBCH["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    OpcodesBCH[OpcodesBCH["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    OpcodesBCH[OpcodesBCH["OP_RESERVED"] = 80] = "OP_RESERVED";
    /**
     * A.K.A. `OP_TRUE`
     */
    OpcodesBCH[OpcodesBCH["OP_1"] = 81] = "OP_1";
    OpcodesBCH[OpcodesBCH["OP_2"] = 82] = "OP_2";
    OpcodesBCH[OpcodesBCH["OP_3"] = 83] = "OP_3";
    OpcodesBCH[OpcodesBCH["OP_4"] = 84] = "OP_4";
    OpcodesBCH[OpcodesBCH["OP_5"] = 85] = "OP_5";
    OpcodesBCH[OpcodesBCH["OP_6"] = 86] = "OP_6";
    OpcodesBCH[OpcodesBCH["OP_7"] = 87] = "OP_7";
    OpcodesBCH[OpcodesBCH["OP_8"] = 88] = "OP_8";
    OpcodesBCH[OpcodesBCH["OP_9"] = 89] = "OP_9";
    OpcodesBCH[OpcodesBCH["OP_10"] = 90] = "OP_10";
    OpcodesBCH[OpcodesBCH["OP_11"] = 91] = "OP_11";
    OpcodesBCH[OpcodesBCH["OP_12"] = 92] = "OP_12";
    OpcodesBCH[OpcodesBCH["OP_13"] = 93] = "OP_13";
    OpcodesBCH[OpcodesBCH["OP_14"] = 94] = "OP_14";
    OpcodesBCH[OpcodesBCH["OP_15"] = 95] = "OP_15";
    OpcodesBCH[OpcodesBCH["OP_16"] = 96] = "OP_16";
    OpcodesBCH[OpcodesBCH["OP_NOP"] = 97] = "OP_NOP";
    OpcodesBCH[OpcodesBCH["OP_VER"] = 98] = "OP_VER";
    OpcodesBCH[OpcodesBCH["OP_IF"] = 99] = "OP_IF";
    OpcodesBCH[OpcodesBCH["OP_NOTIF"] = 100] = "OP_NOTIF";
    OpcodesBCH[OpcodesBCH["OP_VERIF"] = 101] = "OP_VERIF";
    OpcodesBCH[OpcodesBCH["OP_VERNOTIF"] = 102] = "OP_VERNOTIF";
    OpcodesBCH[OpcodesBCH["OP_ELSE"] = 103] = "OP_ELSE";
    OpcodesBCH[OpcodesBCH["OP_ENDIF"] = 104] = "OP_ENDIF";
    OpcodesBCH[OpcodesBCH["OP_VERIFY"] = 105] = "OP_VERIFY";
    OpcodesBCH[OpcodesBCH["OP_RETURN"] = 106] = "OP_RETURN";
    OpcodesBCH[OpcodesBCH["OP_TOALTSTACK"] = 107] = "OP_TOALTSTACK";
    OpcodesBCH[OpcodesBCH["OP_FROMALTSTACK"] = 108] = "OP_FROMALTSTACK";
    OpcodesBCH[OpcodesBCH["OP_2DROP"] = 109] = "OP_2DROP";
    OpcodesBCH[OpcodesBCH["OP_2DUP"] = 110] = "OP_2DUP";
    OpcodesBCH[OpcodesBCH["OP_3DUP"] = 111] = "OP_3DUP";
    OpcodesBCH[OpcodesBCH["OP_2OVER"] = 112] = "OP_2OVER";
    OpcodesBCH[OpcodesBCH["OP_2ROT"] = 113] = "OP_2ROT";
    OpcodesBCH[OpcodesBCH["OP_2SWAP"] = 114] = "OP_2SWAP";
    OpcodesBCH[OpcodesBCH["OP_IFDUP"] = 115] = "OP_IFDUP";
    OpcodesBCH[OpcodesBCH["OP_DEPTH"] = 116] = "OP_DEPTH";
    OpcodesBCH[OpcodesBCH["OP_DROP"] = 117] = "OP_DROP";
    OpcodesBCH[OpcodesBCH["OP_DUP"] = 118] = "OP_DUP";
    OpcodesBCH[OpcodesBCH["OP_NIP"] = 119] = "OP_NIP";
    OpcodesBCH[OpcodesBCH["OP_OVER"] = 120] = "OP_OVER";
    OpcodesBCH[OpcodesBCH["OP_PICK"] = 121] = "OP_PICK";
    OpcodesBCH[OpcodesBCH["OP_ROLL"] = 122] = "OP_ROLL";
    OpcodesBCH[OpcodesBCH["OP_ROT"] = 123] = "OP_ROT";
    OpcodesBCH[OpcodesBCH["OP_SWAP"] = 124] = "OP_SWAP";
    OpcodesBCH[OpcodesBCH["OP_TUCK"] = 125] = "OP_TUCK";
    OpcodesBCH[OpcodesBCH["OP_CAT"] = 126] = "OP_CAT";
    OpcodesBCH[OpcodesBCH["OP_SPLIT"] = 127] = "OP_SPLIT";
    OpcodesBCH[OpcodesBCH["OP_NUM2BIN"] = 128] = "OP_NUM2BIN";
    OpcodesBCH[OpcodesBCH["OP_BIN2NUM"] = 129] = "OP_BIN2NUM";
    OpcodesBCH[OpcodesBCH["OP_SIZE"] = 130] = "OP_SIZE";
    OpcodesBCH[OpcodesBCH["OP_INVERT"] = 131] = "OP_INVERT";
    OpcodesBCH[OpcodesBCH["OP_AND"] = 132] = "OP_AND";
    OpcodesBCH[OpcodesBCH["OP_OR"] = 133] = "OP_OR";
    OpcodesBCH[OpcodesBCH["OP_XOR"] = 134] = "OP_XOR";
    OpcodesBCH[OpcodesBCH["OP_EQUAL"] = 135] = "OP_EQUAL";
    OpcodesBCH[OpcodesBCH["OP_EQUALVERIFY"] = 136] = "OP_EQUALVERIFY";
    OpcodesBCH[OpcodesBCH["OP_RESERVED1"] = 137] = "OP_RESERVED1";
    OpcodesBCH[OpcodesBCH["OP_RESERVED2"] = 138] = "OP_RESERVED2";
    OpcodesBCH[OpcodesBCH["OP_1ADD"] = 139] = "OP_1ADD";
    OpcodesBCH[OpcodesBCH["OP_1SUB"] = 140] = "OP_1SUB";
    OpcodesBCH[OpcodesBCH["OP_2MUL"] = 141] = "OP_2MUL";
    OpcodesBCH[OpcodesBCH["OP_2DIV"] = 142] = "OP_2DIV";
    OpcodesBCH[OpcodesBCH["OP_NEGATE"] = 143] = "OP_NEGATE";
    OpcodesBCH[OpcodesBCH["OP_ABS"] = 144] = "OP_ABS";
    OpcodesBCH[OpcodesBCH["OP_NOT"] = 145] = "OP_NOT";
    OpcodesBCH[OpcodesBCH["OP_0NOTEQUAL"] = 146] = "OP_0NOTEQUAL";
    OpcodesBCH[OpcodesBCH["OP_ADD"] = 147] = "OP_ADD";
    OpcodesBCH[OpcodesBCH["OP_SUB"] = 148] = "OP_SUB";
    OpcodesBCH[OpcodesBCH["OP_MUL"] = 149] = "OP_MUL";
    OpcodesBCH[OpcodesBCH["OP_DIV"] = 150] = "OP_DIV";
    OpcodesBCH[OpcodesBCH["OP_MOD"] = 151] = "OP_MOD";
    OpcodesBCH[OpcodesBCH["OP_LSHIFT"] = 152] = "OP_LSHIFT";
    OpcodesBCH[OpcodesBCH["OP_RSHIFT"] = 153] = "OP_RSHIFT";
    OpcodesBCH[OpcodesBCH["OP_BOOLAND"] = 154] = "OP_BOOLAND";
    OpcodesBCH[OpcodesBCH["OP_BOOLOR"] = 155] = "OP_BOOLOR";
    OpcodesBCH[OpcodesBCH["OP_NUMEQUAL"] = 156] = "OP_NUMEQUAL";
    OpcodesBCH[OpcodesBCH["OP_NUMEQUALVERIFY"] = 157] = "OP_NUMEQUALVERIFY";
    OpcodesBCH[OpcodesBCH["OP_NUMNOTEQUAL"] = 158] = "OP_NUMNOTEQUAL";
    OpcodesBCH[OpcodesBCH["OP_LESSTHAN"] = 159] = "OP_LESSTHAN";
    OpcodesBCH[OpcodesBCH["OP_GREATERTHAN"] = 160] = "OP_GREATERTHAN";
    OpcodesBCH[OpcodesBCH["OP_LESSTHANOREQUAL"] = 161] = "OP_LESSTHANOREQUAL";
    OpcodesBCH[OpcodesBCH["OP_GREATERTHANOREQUAL"] = 162] = "OP_GREATERTHANOREQUAL";
    OpcodesBCH[OpcodesBCH["OP_MIN"] = 163] = "OP_MIN";
    OpcodesBCH[OpcodesBCH["OP_MAX"] = 164] = "OP_MAX";
    OpcodesBCH[OpcodesBCH["OP_WITHIN"] = 165] = "OP_WITHIN";
    OpcodesBCH[OpcodesBCH["OP_RIPEMD160"] = 166] = "OP_RIPEMD160";
    OpcodesBCH[OpcodesBCH["OP_SHA1"] = 167] = "OP_SHA1";
    OpcodesBCH[OpcodesBCH["OP_SHA256"] = 168] = "OP_SHA256";
    OpcodesBCH[OpcodesBCH["OP_HASH160"] = 169] = "OP_HASH160";
    OpcodesBCH[OpcodesBCH["OP_HASH256"] = 170] = "OP_HASH256";
    OpcodesBCH[OpcodesBCH["OP_CODESEPARATOR"] = 171] = "OP_CODESEPARATOR";
    OpcodesBCH[OpcodesBCH["OP_CHECKSIG"] = 172] = "OP_CHECKSIG";
    OpcodesBCH[OpcodesBCH["OP_CHECKSIGVERIFY"] = 173] = "OP_CHECKSIGVERIFY";
    OpcodesBCH[OpcodesBCH["OP_CHECKMULTISIG"] = 174] = "OP_CHECKMULTISIG";
    OpcodesBCH[OpcodesBCH["OP_CHECKMULTISIGVERIFY"] = 175] = "OP_CHECKMULTISIGVERIFY";
    OpcodesBCH[OpcodesBCH["OP_NOP1"] = 176] = "OP_NOP1";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKLOCKTIMEVERIFY"] = 177] = "OP_CHECKLOCKTIMEVERIFY";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKSEQUENCEVERIFY"] = 178] = "OP_CHECKSEQUENCEVERIFY";
    OpcodesBCH[OpcodesBCH["OP_NOP4"] = 179] = "OP_NOP4";
    OpcodesBCH[OpcodesBCH["OP_NOP5"] = 180] = "OP_NOP5";
    OpcodesBCH[OpcodesBCH["OP_NOP6"] = 181] = "OP_NOP6";
    OpcodesBCH[OpcodesBCH["OP_NOP7"] = 182] = "OP_NOP7";
    OpcodesBCH[OpcodesBCH["OP_NOP8"] = 183] = "OP_NOP8";
    OpcodesBCH[OpcodesBCH["OP_NOP9"] = 184] = "OP_NOP9";
    OpcodesBCH[OpcodesBCH["OP_NOP10"] = 185] = "OP_NOP10";
    /**
     * Previously `OP_UNKNOWN186`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKDATASIG"] = 186] = "OP_CHECKDATASIG";
    /**
     * Previously `OP_UNKNOWN187`
     */
    OpcodesBCH[OpcodesBCH["OP_CHECKDATASIGVERIFY"] = 187] = "OP_CHECKDATASIGVERIFY";
    /**
     * Previously `OP_UNKNOWN188`
     */
    OpcodesBCH[OpcodesBCH["OP_REVERSEBYTES"] = 188] = "OP_REVERSEBYTES";
    /**
     * A.K.A. `FIRST_UNDEFINED_OP_VALUE`
     */
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN189"] = 189] = "OP_UNKNOWN189";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN190"] = 190] = "OP_UNKNOWN190";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN191"] = 191] = "OP_UNKNOWN191";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN192"] = 192] = "OP_UNKNOWN192";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN193"] = 193] = "OP_UNKNOWN193";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN194"] = 194] = "OP_UNKNOWN194";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN195"] = 195] = "OP_UNKNOWN195";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN196"] = 196] = "OP_UNKNOWN196";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN197"] = 197] = "OP_UNKNOWN197";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN198"] = 198] = "OP_UNKNOWN198";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN199"] = 199] = "OP_UNKNOWN199";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN200"] = 200] = "OP_UNKNOWN200";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN201"] = 201] = "OP_UNKNOWN201";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN202"] = 202] = "OP_UNKNOWN202";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN203"] = 203] = "OP_UNKNOWN203";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN204"] = 204] = "OP_UNKNOWN204";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN205"] = 205] = "OP_UNKNOWN205";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN206"] = 206] = "OP_UNKNOWN206";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN207"] = 207] = "OP_UNKNOWN207";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN208"] = 208] = "OP_UNKNOWN208";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN209"] = 209] = "OP_UNKNOWN209";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN210"] = 210] = "OP_UNKNOWN210";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN211"] = 211] = "OP_UNKNOWN211";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN212"] = 212] = "OP_UNKNOWN212";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN213"] = 213] = "OP_UNKNOWN213";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN214"] = 214] = "OP_UNKNOWN214";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN215"] = 215] = "OP_UNKNOWN215";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN216"] = 216] = "OP_UNKNOWN216";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN217"] = 217] = "OP_UNKNOWN217";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN218"] = 218] = "OP_UNKNOWN218";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN219"] = 219] = "OP_UNKNOWN219";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN220"] = 220] = "OP_UNKNOWN220";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN221"] = 221] = "OP_UNKNOWN221";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN222"] = 222] = "OP_UNKNOWN222";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN223"] = 223] = "OP_UNKNOWN223";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN224"] = 224] = "OP_UNKNOWN224";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN225"] = 225] = "OP_UNKNOWN225";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN226"] = 226] = "OP_UNKNOWN226";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN227"] = 227] = "OP_UNKNOWN227";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN228"] = 228] = "OP_UNKNOWN228";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN229"] = 229] = "OP_UNKNOWN229";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN230"] = 230] = "OP_UNKNOWN230";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN231"] = 231] = "OP_UNKNOWN231";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN232"] = 232] = "OP_UNKNOWN232";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN233"] = 233] = "OP_UNKNOWN233";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN234"] = 234] = "OP_UNKNOWN234";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN235"] = 235] = "OP_UNKNOWN235";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN236"] = 236] = "OP_UNKNOWN236";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN237"] = 237] = "OP_UNKNOWN237";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN238"] = 238] = "OP_UNKNOWN238";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN239"] = 239] = "OP_UNKNOWN239";
    /**
     * A.K.A. `OP_PREFIX_BEGIN`
     */
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN240"] = 240] = "OP_UNKNOWN240";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN241"] = 241] = "OP_UNKNOWN241";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN242"] = 242] = "OP_UNKNOWN242";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN243"] = 243] = "OP_UNKNOWN243";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN244"] = 244] = "OP_UNKNOWN244";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN245"] = 245] = "OP_UNKNOWN245";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN246"] = 246] = "OP_UNKNOWN246";
    /**
     * A.K.A. `OP_PREFIX_END`
     */
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN247"] = 247] = "OP_UNKNOWN247";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN248"] = 248] = "OP_UNKNOWN248";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN249"] = 249] = "OP_UNKNOWN249";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN250"] = 250] = "OP_UNKNOWN250";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN251"] = 251] = "OP_UNKNOWN251";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN252"] = 252] = "OP_UNKNOWN252";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN253"] = 253] = "OP_UNKNOWN253";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN254"] = 254] = "OP_UNKNOWN254";
    OpcodesBCH[OpcodesBCH["OP_UNKNOWN255"] = 255] = "OP_UNKNOWN255";
})(OpcodesBCH || (OpcodesBCH = {}));
var OpcodeAlternateNamesBCH;
(function (OpcodeAlternateNamesBCH) {
    /**
     * A.K.A. `OP_0`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_FALSE"] = 0] = "OP_FALSE";
    /**
     * A.K.A. `OP_0`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUSHBYTES_0"] = 0] = "OP_PUSHBYTES_0";
    /**
     * A.K.A. `OP_1`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_TRUE"] = 81] = "OP_TRUE";
    /**
     * A.K.A. `OP_CHECKLOCKTIMEVERIFY`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_NOP2"] = 177] = "OP_NOP2";
    /**
     * A.K.A. `OP_CHECKSEQUENCEVERIFY`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_NOP3"] = 178] = "OP_NOP3";
    /**
     * A.K.A. `OP_CHECKDATASIG`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_UNKNOWN186"] = 186] = "OP_UNKNOWN186";
    /**
     * A.K.A. `OP_CHECKDATASIGVERIFY`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_UNKNOWN187"] = 187] = "OP_UNKNOWN187";
    /**
     * A.K.A. `OP_UNKNOWN189`
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["FIRST_UNDEFINED_OP_VALUE"] = 189] = "FIRST_UNDEFINED_OP_VALUE";
    /**
     * A.K.A. `OP_UNKNOWN240`. Some implementations have reserved opcodes
     * `0xf0` through `0xf7` for a future range of multi-byte opcodes, though none
     * are yet available on the network.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PREFIX_BEGIN"] = 240] = "OP_PREFIX_BEGIN";
    /**
     * A.K.A. `OP_UNKNOWN247`. Some implementations have reserved opcodes
     * `0xf0` through `0xf7` for a future range of multi-byte opcodes, though none
     * are yet available on the network.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PREFIX_END"] = 247] = "OP_PREFIX_END";
    /**
     * `OP_SMALLINTEGER` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN250`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_SMALLINTEGER"] = 250] = "OP_SMALLINTEGER";
    /**
     * `OP_PUBKEYS` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN251`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUBKEYS"] = 251] = "OP_PUBKEYS";
    /**
     * `OP_PUBKEYHASH` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN253`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUBKEYHASH"] = 253] = "OP_PUBKEYHASH";
    /**
     * `OP_PUBKEY` is used internally for template matching in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN254`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_PUBKEY"] = 254] = "OP_PUBKEY";
    /**
     * `OP_INVALIDOPCODE` is described as such for testing in the C++
     * implementation. When found on the network, it is `OP_UNKNOWN255`.
     */
    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH["OP_INVALIDOPCODE"] = 255] = "OP_INVALIDOPCODE";
})(OpcodeAlternateNamesBCH || (OpcodeAlternateNamesBCH = {}));
//# sourceMappingURL=bch-opcodes.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export bitcoinCashOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bitwiseOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidSignatureEncodingBCHRaw [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opBin2Num [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckDataSig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckDataSigVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opMod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNum2Bin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opReverseBytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSplit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opXor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export padMinimallyEncodedScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opCat": () => /* binding */ opCat,
/* harmony export */   "opSplit": () => /* binding */ opSplit,
/* harmony export */   "padMinimallyEncodedScriptNumber": () => /* binding */ padMinimallyEncodedScriptNumber,
/* harmony export */   "opNum2Bin": () => /* binding */ opNum2Bin,
/* harmony export */   "opBin2Num": () => /* binding */ opBin2Num,
/* harmony export */   "bitwiseOperation": () => /* binding */ bitwiseOperation,
/* harmony export */   "opAnd": () => /* binding */ opAnd,
/* harmony export */   "opOr": () => /* binding */ opOr,
/* harmony export */   "opXor": () => /* binding */ opXor,
/* harmony export */   "opDiv": () => /* binding */ opDiv,
/* harmony export */   "opMod": () => /* binding */ opMod,
/* harmony export */   "isValidSignatureEncodingBCHRaw": () => /* binding */ isValidSignatureEncodingBCHRaw,
/* harmony export */   "opCheckDataSig": () => /* binding */ opCheckDataSig,
/* harmony export */   "opCheckDataSigVerify": () => /* binding */ opCheckDataSigVerify,
/* harmony export */   "opReverseBytes": () => /* binding */ opReverseBytes,
/* harmony export */   "bitcoinCashOperations": () => /* binding */ bitcoinCashOperations
/* harmony export */ });
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _common_combinators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _common_encoding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/encoding */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js");
/* harmony import */ var _common_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _common_flow_control__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _common_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");
/* harmony import */ var _bch_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bch-errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");
/* harmony import */ var _bch_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bch-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js");










const opCat = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoStackItems)(state, (nextState, [a, b]) => a.length + b.length > _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength
    ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.exceededMaximumStackItemLength, nextState)
    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_format_hex__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([a, b])));
const opSplit = ({ requireMinimalEncoding, }) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(state, (nextState, value) => {
    const index = Number(value);
    return (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(nextState, (finalState, [item]) => index < 0 || index > item.length
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.invalidSplitIndex, finalState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, item.slice(0, index), item.slice(index)));
}, { requireMinimalEncoding });
var Constants;
(function (Constants) {
    Constants[Constants["positiveSign"] = 0] = "positiveSign";
    Constants[Constants["negativeSign"] = 128] = "negativeSign";
})(Constants || (Constants = {}));
const padMinimallyEncodedScriptNumber = (scriptNumber, length) => {
    // eslint-disable-next-line functional/no-let
    let signBit = Constants.positiveSign;
    // eslint-disable-next-line functional/no-conditional-statement
    if (scriptNumber.length > 0) {
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise
        signBit = scriptNumber[scriptNumber.length - 1] & Constants.negativeSign;
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise, functional/immutable-data
        scriptNumber[scriptNumber.length - 1] &= Constants.negativeSign - 1;
    }
    const result = Array.from(scriptNumber);
    // eslint-disable-next-line functional/no-loop-statement
    while (result.length < length - 1) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        result.push(0);
    }
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    result.push(signBit);
    return Uint8Array.from(result);
};
const opNum2Bin = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(state, (nextState, value) => {
    const targetLength = Number(value);
    return targetLength > _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.exceededMaximumStackItemLength, nextState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(nextState, (finalState, [target]) => {
            const minimallyEncoded = (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(target);
            return minimallyEncoded.length > targetLength
                ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.insufficientLength, finalState)
                : minimallyEncoded.length === targetLength
                    ? (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, minimallyEncoded)
                    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(finalState, padMinimallyEncodedScriptNumber(minimallyEncoded, targetLength));
        }, {
            maximumScriptNumberByteLength: 
            // TODO: is this right?
            _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength,
            requireMinimalEncoding: false,
        });
}, { requireMinimalEncoding: true });
const opBin2Num = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneScriptNumber)(state, (nextState, [target]) => {
    const minimallyEncoded = (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(target);
    return minimallyEncoded.length > _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumScriptNumberLength
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.exceededMaximumScriptNumberLength, nextState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, minimallyEncoded);
}, {
    // TODO: is this right?
    maximumScriptNumberByteLength: _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon.maximumStackItemLength,
    requireMinimalEncoding: false,
});
const bitwiseOperation = (combine) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoStackItems)(state, (nextState, [a, b]) => a.length === b.length
    ? (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, combine(a, b))
    : (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.mismatchedBitwiseOperandLength, nextState));
const opAnd = () => bitwiseOperation((a, b) => a.map((v, i) => v & b[i]));
const opOr = () => bitwiseOperation((a, b) => a.map((v, i) => v | b[i]));
const opXor = () => bitwiseOperation((a, b) => a.map((v, i) => v ^ b[i]));
const opDiv = ({ requireMinimalEncoding, }) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoScriptNumbers)(state, (nextState, [a, b]) => b === BigInt(0)
    ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.divisionByZero, nextState)
    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(a / b)), { requireMinimalEncoding });
const opMod = ({ requireMinimalEncoding, }) => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useTwoScriptNumbers)(state, (nextState, [a, b]) => b === BigInt(0)
    ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_bch_errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationErrorBCH.divisionByZero, nextState)
    : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.bigIntToScriptNumber)(a % b)), { requireMinimalEncoding });
/**
 * Validate the encoding of a raw signature – a signature without a signing
 * serialization type byte (A.K.A. "sighash" byte).
 *
 * @param signature - the raw signature
 */
const isValidSignatureEncodingBCHRaw = (signature) => signature.length === 0 ||
    signature.length === _bch_types__WEBPACK_IMPORTED_MODULE_9__.ConsensusBCH.schnorrSignatureLength ||
    (0,_common_encoding__WEBPACK_IMPORTED_MODULE_3__.isValidSignatureEncodingDER)(signature);
const opCheckDataSig = ({ secp256k1, sha256, }) => (state) => 
// eslint-disable-next-line complexity
(0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useThreeStackItems)(state, (nextState, [signature, message, publicKey]) => {
    if (!isValidSignatureEncodingBCHRaw(signature)) {
        return (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_common_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidSignatureEncoding, nextState);
    }
    if (!(0,_common_encoding__WEBPACK_IMPORTED_MODULE_3__.isValidPublicKeyEncoding)(publicKey)) {
        return (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_common_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.invalidPublicKeyEncoding, nextState);
    }
    const digest = sha256.hash(message);
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    nextState.signedMessages.push(message);
    const useSchnorr = signature.length === _bch_types__WEBPACK_IMPORTED_MODULE_9__.ConsensusBCH.schnorrSignatureLength;
    const success = useSchnorr
        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)
        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);
    return !success && signature.length !== 0
        ? (0,_common_errors__WEBPACK_IMPORTED_MODULE_4__.applyError)(_common_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorCommon.nonNullSignatureFailure, nextState)
        : (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, (0,_common_types__WEBPACK_IMPORTED_MODULE_6__.booleanToScriptNumber)(success));
});
const opCheckDataSigVerify = ({ secp256k1, sha256, }) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.combineOperations)(opCheckDataSig({ secp256k1, sha256 }), (0,_common_flow_control__WEBPACK_IMPORTED_MODULE_5__.opVerify)());
const opReverseBytes = () => (state) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [item]) => (0,_common_combinators__WEBPACK_IMPORTED_MODULE_1__.pushToStack)(nextState, item.slice().reverse()));
const bitcoinCashOperations = ({ flags, secp256k1, sha256, }) => {
    const operations = {
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_CAT]: opCat(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_SPLIT]: opSplit(flags),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_NUM2BIN]: opNum2Bin(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_BIN2NUM]: opBin2Num(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_AND]: opAnd(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_OR]: opOr(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_XOR]: opXor(),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_DIV]: opDiv(flags),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_MOD]: opMod(flags),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_CHECKDATASIG]: opCheckDataSig({
            secp256k1,
            sha256,
        }),
        [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_CHECKDATASIGVERIFY]: opCheckDataSigVerify({ secp256k1, sha256 }),
    };
    return flags.opReverseBytes
        ? { ...operations, [_bch_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesBCH.OP_REVERSEBYTES]: opReverseBytes() }
        : operations;
};
//# sourceMappingURL=bch-operations.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export ConsensusBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTestAuthenticationProgramBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConsensusBCH": () => /* binding */ ConsensusBCH,
/* harmony export */   "createTestAuthenticationProgramBCH": () => /* binding */ createTestAuthenticationProgramBCH
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../transaction/transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");


var ConsensusBCH;
(function (ConsensusBCH) {
    ConsensusBCH[ConsensusBCH["schnorrSignatureLength"] = 64] = "schnorrSignatureLength";
})(ConsensusBCH || (ConsensusBCH = {}));
const createTestAuthenticationProgramBCH = ({ lockingBytecode, satoshis, sha256, unlockingBytecode, }) => {
    const testFundingTransaction = {
        inputs: [
            {
                outpointIndex: 0xffffffff,
                outpointTransactionHash: (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.hexToBin)('0000000000000000000000000000000000000000000000000000000000000000'),
                sequenceNumber: 0xffffffff,
                unlockingBytecode: Uint8Array.of(0, 0),
            },
        ],
        locktime: 0,
        outputs: [{ lockingBytecode, satoshis }],
        version: 1,
    };
    const testSpendingTransaction = {
        inputs: [
            {
                outpointIndex: 0,
                outpointTransactionHash: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.getTransactionHashBE)(sha256, (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_1__.encodeTransaction)(testFundingTransaction)),
                sequenceNumber: 0xffffffff,
                unlockingBytecode,
            },
        ],
        locktime: 0,
        outputs: [{ lockingBytecode: Uint8Array.of(), satoshis }],
        version: 1,
    };
    return {
        inputIndex: 0,
        sourceOutput: testFundingTransaction.outputs[0],
        spendingTransaction: testSpendingTransaction,
    };
};
//# sourceMappingURL=bch-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js .AuthenticationErrorBCH */
/*! export ConsensusBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js .ConsensusBCH */
/*! export InstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .InstructionSetBCH */
/*! export OpcodeAlternateNamesBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js .OpcodeAlternateNamesBCH */
/*! export OpcodeDescriptionsBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js .OpcodeDescriptionsBCH */
/*! export OpcodeDescriptionsUniqueBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js .OpcodeDescriptionsUniqueBCH */
/*! export OpcodesBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js .OpcodesBCH */
/*! export assembleBitcoinABCScript [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js .assembleBitcoinABCScript */
/*! export bitcoinABCOpcodes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js .bitcoinABCOpcodes */
/*! export bitcoinCashOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .bitcoinCashOperations */
/*! export bitwiseOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .bitwiseOperation */
/*! export createInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .createInstructionSetBCH */
/*! export createTestAuthenticationProgramBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js .createTestAuthenticationProgramBCH */
/*! export getFlagsForInstructionSetBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .getFlagsForInstructionSetBCH */
/*! export instantiateVirtualMachineBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export instructionSetBCHCurrentStrict [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .instructionSetBCHCurrentStrict */
/*! export isPayToScriptHash [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .isPayToScriptHash */
/*! export isValidSignatureEncodingBCHRaw [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .isValidSignatureEncodingBCHRaw */
/*! export isWitnessProgram [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js .isWitnessProgram */
/*! export opAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opAnd */
/*! export opBin2Num [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opBin2Num */
/*! export opCat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opCat */
/*! export opCheckDataSig [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opCheckDataSig */
/*! export opCheckDataSigVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opCheckDataSigVerify */
/*! export opDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opDiv */
/*! export opMod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opMod */
/*! export opNum2Bin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opNum2Bin */
/*! export opOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opOr */
/*! export opReverseBytes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opReverseBytes */
/*! export opSplit [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opSplit */
/*! export opXor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .opXor */
/*! export padMinimallyEncodedScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js .padMinimallyEncodedScriptNumber */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodeDescriptionsBCH": () => /* reexport safe */ _bch_descriptions__WEBPACK_IMPORTED_MODULE_3__.OpcodeDescriptionsBCH,
/* harmony export */   "OpcodeDescriptionsUniqueBCH": () => /* reexport safe */ _bch_descriptions__WEBPACK_IMPORTED_MODULE_3__.OpcodeDescriptionsUniqueBCH,
/* harmony export */   "AuthenticationErrorBCH": () => /* reexport safe */ _bch_errors__WEBPACK_IMPORTED_MODULE_4__.AuthenticationErrorBCH,
/* harmony export */   "InstructionSetBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.InstructionSetBCH,
/* harmony export */   "OpcodesBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH,
/* harmony export */   "createInstructionSetBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.createInstructionSetBCH,
/* harmony export */   "getFlagsForInstructionSetBCH": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.getFlagsForInstructionSetBCH,
/* harmony export */   "instructionSetBCHCurrentStrict": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.instructionSetBCHCurrentStrict,
/* harmony export */   "isPayToScriptHash": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.isPayToScriptHash,
/* harmony export */   "isWitnessProgram": () => /* reexport safe */ _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.isWitnessProgram,
/* harmony export */   "OpcodeAlternateNamesBCH": () => /* reexport safe */ _bch_opcodes__WEBPACK_IMPORTED_MODULE_5__.OpcodeAlternateNamesBCH,
/* harmony export */   "bitcoinCashOperations": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.bitcoinCashOperations,
/* harmony export */   "bitwiseOperation": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.bitwiseOperation,
/* harmony export */   "isValidSignatureEncodingBCHRaw": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.isValidSignatureEncodingBCHRaw,
/* harmony export */   "opAnd": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opAnd,
/* harmony export */   "opBin2Num": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opBin2Num,
/* harmony export */   "opCat": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opCat,
/* harmony export */   "opCheckDataSig": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opCheckDataSig,
/* harmony export */   "opCheckDataSigVerify": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opCheckDataSigVerify,
/* harmony export */   "opDiv": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opDiv,
/* harmony export */   "opMod": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opMod,
/* harmony export */   "opNum2Bin": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opNum2Bin,
/* harmony export */   "opOr": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opOr,
/* harmony export */   "opReverseBytes": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opReverseBytes,
/* harmony export */   "opSplit": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opSplit,
/* harmony export */   "opXor": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.opXor,
/* harmony export */   "padMinimallyEncodedScriptNumber": () => /* reexport safe */ _bch_operations__WEBPACK_IMPORTED_MODULE_6__.padMinimallyEncodedScriptNumber,
/* harmony export */   "ConsensusBCH": () => /* reexport safe */ _bch_types__WEBPACK_IMPORTED_MODULE_7__.ConsensusBCH,
/* harmony export */   "createTestAuthenticationProgramBCH": () => /* reexport safe */ _bch_types__WEBPACK_IMPORTED_MODULE_7__.createTestAuthenticationProgramBCH,
/* harmony export */   "assembleBitcoinABCScript": () => /* reexport safe */ _fixtures_bitcoin_abc_bitcoin_abc_utils__WEBPACK_IMPORTED_MODULE_8__.assembleBitcoinABCScript,
/* harmony export */   "bitcoinABCOpcodes": () => /* reexport safe */ _fixtures_bitcoin_abc_bitcoin_abc_utils__WEBPACK_IMPORTED_MODULE_8__.bitcoinABCOpcodes,
/* harmony export */   "instantiateVirtualMachineBCH": () => /* binding */ instantiateVirtualMachineBCH
/* harmony export */ });
/* harmony import */ var _crypto_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../crypto/crypto */ "./node_modules/@bitauth/libauth/build/module/lib/crypto/crypto.js");
/* harmony import */ var _virtual_machine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../virtual-machine */ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js");
/* harmony import */ var _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bch-instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-instruction-sets.js");
/* harmony import */ var _bch_descriptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bch-descriptions */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-descriptions.js");
/* harmony import */ var _bch_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bch-errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-errors.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");
/* harmony import */ var _bch_operations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bch-operations */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-operations.js");
/* harmony import */ var _bch_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bch-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js");
/* harmony import */ var _fixtures_bitcoin_abc_bitcoin_abc_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fixtures/bitcoin-abc/bitcoin-abc-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js");










/**
 * Initialize a virtual machine using the provided BCH instruction set.
 *
 * @param instructionSet - the VM version to instantiate – by default, the
 * current "strict" VM is used (`instructionSetBCHCurrentStrict`)
 */
const instantiateVirtualMachineBCH = async (instructionSet = _bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.instructionSetBCHCurrentStrict) => {
    const [sha1, sha256, ripemd160, secp256k1] = await Promise.all([
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha1)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSha256)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateRipemd160)(),
        (0,_crypto_crypto__WEBPACK_IMPORTED_MODULE_0__.instantiateSecp256k1)(),
    ]);
    return (0,_virtual_machine__WEBPACK_IMPORTED_MODULE_1__.createAuthenticationVirtualMachine)((0,_bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.createInstructionSetBCH)({
        flags: (0,_bch_instruction_sets__WEBPACK_IMPORTED_MODULE_2__.getFlagsForInstructionSetBCH)(instructionSet),
        ripemd160,
        secp256k1,
        sha1,
        sha256,
    }));
};
//# sourceMappingURL=bch.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/fixtures/bitcoin-abc/bitcoin-abc-utils.js ***!
  \**************************************************************************************************************************/
/*! namespace exports */
/*! export assembleBitcoinABCScript [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bitcoinABCOpcodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bitcoinABCOpcodes": () => /* binding */ bitcoinABCOpcodes,
/* harmony export */   "assembleBitcoinABCScript": () => /* binding */ assembleBitcoinABCScript
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _bch_opcodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../bch-opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-opcodes.js");




const bitcoinABCOpcodes = Object.entries((0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_2__.generateBytecodeMap)(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH)).reduce((acc, cur) => ({ ...acc, [cur[0].slice('OP_'.length)]: cur[1] }), {
    PUSHDATA1: Uint8Array.of(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH.OP_PUSHDATA_1),
    PUSHDATA2: Uint8Array.of(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH.OP_PUSHDATA_2),
    PUSHDATA4: Uint8Array.of(_bch_opcodes__WEBPACK_IMPORTED_MODULE_3__.OpcodesBCH.OP_PUSHDATA_4),
});
/**
 * Convert a string from Bitcoin ABC's `script_tests.json` text-format to
 * bytecode. The string must be valid – this method attempts to convert all
 * unmatched tokens to `BigInt`s.
 *
 * @privateRemarks
 * This method doesn't use {@link compileScript} because of a slight
 * incompatibility in the languages. In BTL, BigIntLiterals are a primitive
 * type, and must be surrounded by a push statement (e.g. `<100>`) to push a
 * number to the stack. In the `script_tests.json` text-format, numbers are
 * assumed to be pushed. We could implement a transformation after the
 * compiler's parse step, but because this format doesn't require any other
 * features of the compiler, we opt to implement this as a simple method.
 * @param abcScript - the script in Bitcoin ABC's `script_tests.json` text
 * format
 */
const assembleBitcoinABCScript = (abcScript) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(abcScript
    .split(' ')
    .filter((token) => token !== '')
    .map((token) => token.startsWith('0x')
    ? (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.hexToBin)(token.slice('0x'.length))
    : token.startsWith("'")
        ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)((0,_format_format__WEBPACK_IMPORTED_MODULE_0__.utf8ToBin)(token.slice(1, token.length - 1)))
        : bitcoinABCOpcodes[token] === undefined
            ? (0,_common_common__WEBPACK_IMPORTED_MODULE_1__.encodeDataPush)((0,_common_common__WEBPACK_IMPORTED_MODULE_1__.bigIntToScriptNumber)(BigInt(token)))
            : bitcoinABCOpcodes[token]));
//# sourceMappingURL=bitcoin-abc-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export OpcodesBTC [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBTC": () => /* binding */ OpcodesBTC
/* harmony export */ });
var OpcodesBTC;
(function (OpcodesBTC) {
    OpcodesBTC[OpcodesBTC["OP_0"] = 0] = "OP_0";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_1"] = 1] = "OP_PUSHBYTES_1";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_2"] = 2] = "OP_PUSHBYTES_2";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_3"] = 3] = "OP_PUSHBYTES_3";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_4"] = 4] = "OP_PUSHBYTES_4";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_5"] = 5] = "OP_PUSHBYTES_5";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_6"] = 6] = "OP_PUSHBYTES_6";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_7"] = 7] = "OP_PUSHBYTES_7";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_8"] = 8] = "OP_PUSHBYTES_8";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_9"] = 9] = "OP_PUSHBYTES_9";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_10"] = 10] = "OP_PUSHBYTES_10";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_11"] = 11] = "OP_PUSHBYTES_11";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_12"] = 12] = "OP_PUSHBYTES_12";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_13"] = 13] = "OP_PUSHBYTES_13";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_14"] = 14] = "OP_PUSHBYTES_14";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_15"] = 15] = "OP_PUSHBYTES_15";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_16"] = 16] = "OP_PUSHBYTES_16";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_17"] = 17] = "OP_PUSHBYTES_17";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_18"] = 18] = "OP_PUSHBYTES_18";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_19"] = 19] = "OP_PUSHBYTES_19";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_20"] = 20] = "OP_PUSHBYTES_20";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_21"] = 21] = "OP_PUSHBYTES_21";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_22"] = 22] = "OP_PUSHBYTES_22";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_23"] = 23] = "OP_PUSHBYTES_23";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_24"] = 24] = "OP_PUSHBYTES_24";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_25"] = 25] = "OP_PUSHBYTES_25";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_26"] = 26] = "OP_PUSHBYTES_26";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_27"] = 27] = "OP_PUSHBYTES_27";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_28"] = 28] = "OP_PUSHBYTES_28";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_29"] = 29] = "OP_PUSHBYTES_29";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_30"] = 30] = "OP_PUSHBYTES_30";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_31"] = 31] = "OP_PUSHBYTES_31";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_32"] = 32] = "OP_PUSHBYTES_32";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_33"] = 33] = "OP_PUSHBYTES_33";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_34"] = 34] = "OP_PUSHBYTES_34";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_35"] = 35] = "OP_PUSHBYTES_35";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_36"] = 36] = "OP_PUSHBYTES_36";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_37"] = 37] = "OP_PUSHBYTES_37";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_38"] = 38] = "OP_PUSHBYTES_38";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_39"] = 39] = "OP_PUSHBYTES_39";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_40"] = 40] = "OP_PUSHBYTES_40";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_41"] = 41] = "OP_PUSHBYTES_41";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_42"] = 42] = "OP_PUSHBYTES_42";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_43"] = 43] = "OP_PUSHBYTES_43";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_44"] = 44] = "OP_PUSHBYTES_44";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_45"] = 45] = "OP_PUSHBYTES_45";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_46"] = 46] = "OP_PUSHBYTES_46";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_47"] = 47] = "OP_PUSHBYTES_47";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_48"] = 48] = "OP_PUSHBYTES_48";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_49"] = 49] = "OP_PUSHBYTES_49";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_50"] = 50] = "OP_PUSHBYTES_50";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_51"] = 51] = "OP_PUSHBYTES_51";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_52"] = 52] = "OP_PUSHBYTES_52";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_53"] = 53] = "OP_PUSHBYTES_53";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_54"] = 54] = "OP_PUSHBYTES_54";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_55"] = 55] = "OP_PUSHBYTES_55";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_56"] = 56] = "OP_PUSHBYTES_56";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_57"] = 57] = "OP_PUSHBYTES_57";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_58"] = 58] = "OP_PUSHBYTES_58";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_59"] = 59] = "OP_PUSHBYTES_59";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_60"] = 60] = "OP_PUSHBYTES_60";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_61"] = 61] = "OP_PUSHBYTES_61";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_62"] = 62] = "OP_PUSHBYTES_62";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_63"] = 63] = "OP_PUSHBYTES_63";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_64"] = 64] = "OP_PUSHBYTES_64";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_65"] = 65] = "OP_PUSHBYTES_65";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_66"] = 66] = "OP_PUSHBYTES_66";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_67"] = 67] = "OP_PUSHBYTES_67";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_68"] = 68] = "OP_PUSHBYTES_68";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_69"] = 69] = "OP_PUSHBYTES_69";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_70"] = 70] = "OP_PUSHBYTES_70";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_71"] = 71] = "OP_PUSHBYTES_71";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_72"] = 72] = "OP_PUSHBYTES_72";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_73"] = 73] = "OP_PUSHBYTES_73";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_74"] = 74] = "OP_PUSHBYTES_74";
    OpcodesBTC[OpcodesBTC["OP_PUSHBYTES_75"] = 75] = "OP_PUSHBYTES_75";
    OpcodesBTC[OpcodesBTC["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    OpcodesBTC[OpcodesBTC["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    OpcodesBTC[OpcodesBTC["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    OpcodesBTC[OpcodesBTC["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    OpcodesBTC[OpcodesBTC["OP_RESERVED"] = 80] = "OP_RESERVED";
    OpcodesBTC[OpcodesBTC["OP_1"] = 81] = "OP_1";
    OpcodesBTC[OpcodesBTC["OP_2"] = 82] = "OP_2";
    OpcodesBTC[OpcodesBTC["OP_3"] = 83] = "OP_3";
    OpcodesBTC[OpcodesBTC["OP_4"] = 84] = "OP_4";
    OpcodesBTC[OpcodesBTC["OP_5"] = 85] = "OP_5";
    OpcodesBTC[OpcodesBTC["OP_6"] = 86] = "OP_6";
    OpcodesBTC[OpcodesBTC["OP_7"] = 87] = "OP_7";
    OpcodesBTC[OpcodesBTC["OP_8"] = 88] = "OP_8";
    OpcodesBTC[OpcodesBTC["OP_9"] = 89] = "OP_9";
    OpcodesBTC[OpcodesBTC["OP_10"] = 90] = "OP_10";
    OpcodesBTC[OpcodesBTC["OP_11"] = 91] = "OP_11";
    OpcodesBTC[OpcodesBTC["OP_12"] = 92] = "OP_12";
    OpcodesBTC[OpcodesBTC["OP_13"] = 93] = "OP_13";
    OpcodesBTC[OpcodesBTC["OP_14"] = 94] = "OP_14";
    OpcodesBTC[OpcodesBTC["OP_15"] = 95] = "OP_15";
    OpcodesBTC[OpcodesBTC["OP_16"] = 96] = "OP_16";
    OpcodesBTC[OpcodesBTC["OP_NOP"] = 97] = "OP_NOP";
    OpcodesBTC[OpcodesBTC["OP_VER"] = 98] = "OP_VER";
    OpcodesBTC[OpcodesBTC["OP_IF"] = 99] = "OP_IF";
    OpcodesBTC[OpcodesBTC["OP_NOTIF"] = 100] = "OP_NOTIF";
    OpcodesBTC[OpcodesBTC["OP_VERIF"] = 101] = "OP_VERIF";
    OpcodesBTC[OpcodesBTC["OP_VERNOTIF"] = 102] = "OP_VERNOTIF";
    OpcodesBTC[OpcodesBTC["OP_ELSE"] = 103] = "OP_ELSE";
    OpcodesBTC[OpcodesBTC["OP_ENDIF"] = 104] = "OP_ENDIF";
    OpcodesBTC[OpcodesBTC["OP_VERIFY"] = 105] = "OP_VERIFY";
    OpcodesBTC[OpcodesBTC["OP_RETURN"] = 106] = "OP_RETURN";
    OpcodesBTC[OpcodesBTC["OP_TOALTSTACK"] = 107] = "OP_TOALTSTACK";
    OpcodesBTC[OpcodesBTC["OP_FROMALTSTACK"] = 108] = "OP_FROMALTSTACK";
    OpcodesBTC[OpcodesBTC["OP_2DROP"] = 109] = "OP_2DROP";
    OpcodesBTC[OpcodesBTC["OP_2DUP"] = 110] = "OP_2DUP";
    OpcodesBTC[OpcodesBTC["OP_3DUP"] = 111] = "OP_3DUP";
    OpcodesBTC[OpcodesBTC["OP_2OVER"] = 112] = "OP_2OVER";
    OpcodesBTC[OpcodesBTC["OP_2ROT"] = 113] = "OP_2ROT";
    OpcodesBTC[OpcodesBTC["OP_2SWAP"] = 114] = "OP_2SWAP";
    OpcodesBTC[OpcodesBTC["OP_IFDUP"] = 115] = "OP_IFDUP";
    OpcodesBTC[OpcodesBTC["OP_DEPTH"] = 116] = "OP_DEPTH";
    OpcodesBTC[OpcodesBTC["OP_DROP"] = 117] = "OP_DROP";
    OpcodesBTC[OpcodesBTC["OP_DUP"] = 118] = "OP_DUP";
    OpcodesBTC[OpcodesBTC["OP_NIP"] = 119] = "OP_NIP";
    OpcodesBTC[OpcodesBTC["OP_OVER"] = 120] = "OP_OVER";
    OpcodesBTC[OpcodesBTC["OP_PICK"] = 121] = "OP_PICK";
    OpcodesBTC[OpcodesBTC["OP_ROLL"] = 122] = "OP_ROLL";
    OpcodesBTC[OpcodesBTC["OP_ROT"] = 123] = "OP_ROT";
    OpcodesBTC[OpcodesBTC["OP_SWAP"] = 124] = "OP_SWAP";
    OpcodesBTC[OpcodesBTC["OP_TUCK"] = 125] = "OP_TUCK";
    OpcodesBTC[OpcodesBTC["OP_CAT"] = 126] = "OP_CAT";
    OpcodesBTC[OpcodesBTC["OP_SUBSTR"] = 127] = "OP_SUBSTR";
    OpcodesBTC[OpcodesBTC["OP_LEFT"] = 128] = "OP_LEFT";
    OpcodesBTC[OpcodesBTC["OP_RIGHT"] = 129] = "OP_RIGHT";
    OpcodesBTC[OpcodesBTC["OP_SIZE"] = 130] = "OP_SIZE";
    OpcodesBTC[OpcodesBTC["OP_INVERT"] = 131] = "OP_INVERT";
    OpcodesBTC[OpcodesBTC["OP_AND"] = 132] = "OP_AND";
    OpcodesBTC[OpcodesBTC["OP_OR"] = 133] = "OP_OR";
    OpcodesBTC[OpcodesBTC["OP_XOR"] = 134] = "OP_XOR";
    OpcodesBTC[OpcodesBTC["OP_EQUAL"] = 135] = "OP_EQUAL";
    OpcodesBTC[OpcodesBTC["OP_EQUALVERIFY"] = 136] = "OP_EQUALVERIFY";
    OpcodesBTC[OpcodesBTC["OP_RESERVED1"] = 137] = "OP_RESERVED1";
    OpcodesBTC[OpcodesBTC["OP_RESERVED2"] = 138] = "OP_RESERVED2";
    OpcodesBTC[OpcodesBTC["OP_1ADD"] = 139] = "OP_1ADD";
    OpcodesBTC[OpcodesBTC["OP_1SUB"] = 140] = "OP_1SUB";
    OpcodesBTC[OpcodesBTC["OP_2MUL"] = 141] = "OP_2MUL";
    OpcodesBTC[OpcodesBTC["OP_2DIV"] = 142] = "OP_2DIV";
    OpcodesBTC[OpcodesBTC["OP_NEGATE"] = 143] = "OP_NEGATE";
    OpcodesBTC[OpcodesBTC["OP_ABS"] = 144] = "OP_ABS";
    OpcodesBTC[OpcodesBTC["OP_NOT"] = 145] = "OP_NOT";
    OpcodesBTC[OpcodesBTC["OP_0NOTEQUAL"] = 146] = "OP_0NOTEQUAL";
    OpcodesBTC[OpcodesBTC["OP_ADD"] = 147] = "OP_ADD";
    OpcodesBTC[OpcodesBTC["OP_SUB"] = 148] = "OP_SUB";
    OpcodesBTC[OpcodesBTC["OP_MUL"] = 149] = "OP_MUL";
    OpcodesBTC[OpcodesBTC["OP_DIV"] = 150] = "OP_DIV";
    OpcodesBTC[OpcodesBTC["OP_MOD"] = 151] = "OP_MOD";
    OpcodesBTC[OpcodesBTC["OP_LSHIFT"] = 152] = "OP_LSHIFT";
    OpcodesBTC[OpcodesBTC["OP_RSHIFT"] = 153] = "OP_RSHIFT";
    OpcodesBTC[OpcodesBTC["OP_BOOLAND"] = 154] = "OP_BOOLAND";
    OpcodesBTC[OpcodesBTC["OP_BOOLOR"] = 155] = "OP_BOOLOR";
    OpcodesBTC[OpcodesBTC["OP_NUMEQUAL"] = 156] = "OP_NUMEQUAL";
    OpcodesBTC[OpcodesBTC["OP_NUMEQUALVERIFY"] = 157] = "OP_NUMEQUALVERIFY";
    OpcodesBTC[OpcodesBTC["OP_NUMNOTEQUAL"] = 158] = "OP_NUMNOTEQUAL";
    OpcodesBTC[OpcodesBTC["OP_LESSTHAN"] = 159] = "OP_LESSTHAN";
    OpcodesBTC[OpcodesBTC["OP_GREATERTHAN"] = 160] = "OP_GREATERTHAN";
    OpcodesBTC[OpcodesBTC["OP_LESSTHANOREQUAL"] = 161] = "OP_LESSTHANOREQUAL";
    OpcodesBTC[OpcodesBTC["OP_GREATERTHANOREQUAL"] = 162] = "OP_GREATERTHANOREQUAL";
    OpcodesBTC[OpcodesBTC["OP_MIN"] = 163] = "OP_MIN";
    OpcodesBTC[OpcodesBTC["OP_MAX"] = 164] = "OP_MAX";
    OpcodesBTC[OpcodesBTC["OP_WITHIN"] = 165] = "OP_WITHIN";
    OpcodesBTC[OpcodesBTC["OP_RIPEMD160"] = 166] = "OP_RIPEMD160";
    OpcodesBTC[OpcodesBTC["OP_SHA1"] = 167] = "OP_SHA1";
    OpcodesBTC[OpcodesBTC["OP_SHA256"] = 168] = "OP_SHA256";
    OpcodesBTC[OpcodesBTC["OP_HASH160"] = 169] = "OP_HASH160";
    OpcodesBTC[OpcodesBTC["OP_HASH256"] = 170] = "OP_HASH256";
    OpcodesBTC[OpcodesBTC["OP_CODESEPARATOR"] = 171] = "OP_CODESEPARATOR";
    OpcodesBTC[OpcodesBTC["OP_CHECKSIG"] = 172] = "OP_CHECKSIG";
    OpcodesBTC[OpcodesBTC["OP_CHECKSIGVERIFY"] = 173] = "OP_CHECKSIGVERIFY";
    OpcodesBTC[OpcodesBTC["OP_CHECKMULTISIG"] = 174] = "OP_CHECKMULTISIG";
    OpcodesBTC[OpcodesBTC["OP_CHECKMULTISIGVERIFY"] = 175] = "OP_CHECKMULTISIGVERIFY";
    OpcodesBTC[OpcodesBTC["OP_NOP1"] = 176] = "OP_NOP1";
    OpcodesBTC[OpcodesBTC["OP_CHECKLOCKTIMEVERIFY"] = 177] = "OP_CHECKLOCKTIMEVERIFY";
    OpcodesBTC[OpcodesBTC["OP_CHECKSEQUENCEVERIFY"] = 178] = "OP_CHECKSEQUENCEVERIFY";
    OpcodesBTC[OpcodesBTC["OP_NOP4"] = 179] = "OP_NOP4";
    OpcodesBTC[OpcodesBTC["OP_NOP5"] = 180] = "OP_NOP5";
    OpcodesBTC[OpcodesBTC["OP_NOP6"] = 181] = "OP_NOP6";
    OpcodesBTC[OpcodesBTC["OP_NOP7"] = 182] = "OP_NOP7";
    OpcodesBTC[OpcodesBTC["OP_NOP8"] = 183] = "OP_NOP8";
    OpcodesBTC[OpcodesBTC["OP_NOP9"] = 184] = "OP_NOP9";
    OpcodesBTC[OpcodesBTC["OP_NOP10"] = 185] = "OP_NOP10";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN186"] = 186] = "OP_UNKNOWN186";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN187"] = 187] = "OP_UNKNOWN187";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN188"] = 188] = "OP_UNKNOWN188";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN189"] = 189] = "OP_UNKNOWN189";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN190"] = 190] = "OP_UNKNOWN190";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN191"] = 191] = "OP_UNKNOWN191";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN192"] = 192] = "OP_UNKNOWN192";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN193"] = 193] = "OP_UNKNOWN193";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN194"] = 194] = "OP_UNKNOWN194";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN195"] = 195] = "OP_UNKNOWN195";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN196"] = 196] = "OP_UNKNOWN196";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN197"] = 197] = "OP_UNKNOWN197";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN198"] = 198] = "OP_UNKNOWN198";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN199"] = 199] = "OP_UNKNOWN199";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN200"] = 200] = "OP_UNKNOWN200";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN201"] = 201] = "OP_UNKNOWN201";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN202"] = 202] = "OP_UNKNOWN202";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN203"] = 203] = "OP_UNKNOWN203";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN204"] = 204] = "OP_UNKNOWN204";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN205"] = 205] = "OP_UNKNOWN205";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN206"] = 206] = "OP_UNKNOWN206";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN207"] = 207] = "OP_UNKNOWN207";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN208"] = 208] = "OP_UNKNOWN208";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN209"] = 209] = "OP_UNKNOWN209";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN210"] = 210] = "OP_UNKNOWN210";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN211"] = 211] = "OP_UNKNOWN211";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN212"] = 212] = "OP_UNKNOWN212";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN213"] = 213] = "OP_UNKNOWN213";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN214"] = 214] = "OP_UNKNOWN214";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN215"] = 215] = "OP_UNKNOWN215";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN216"] = 216] = "OP_UNKNOWN216";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN217"] = 217] = "OP_UNKNOWN217";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN218"] = 218] = "OP_UNKNOWN218";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN219"] = 219] = "OP_UNKNOWN219";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN220"] = 220] = "OP_UNKNOWN220";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN221"] = 221] = "OP_UNKNOWN221";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN222"] = 222] = "OP_UNKNOWN222";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN223"] = 223] = "OP_UNKNOWN223";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN224"] = 224] = "OP_UNKNOWN224";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN225"] = 225] = "OP_UNKNOWN225";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN226"] = 226] = "OP_UNKNOWN226";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN227"] = 227] = "OP_UNKNOWN227";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN228"] = 228] = "OP_UNKNOWN228";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN229"] = 229] = "OP_UNKNOWN229";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN230"] = 230] = "OP_UNKNOWN230";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN231"] = 231] = "OP_UNKNOWN231";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN232"] = 232] = "OP_UNKNOWN232";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN233"] = 233] = "OP_UNKNOWN233";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN234"] = 234] = "OP_UNKNOWN234";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN235"] = 235] = "OP_UNKNOWN235";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN236"] = 236] = "OP_UNKNOWN236";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN237"] = 237] = "OP_UNKNOWN237";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN238"] = 238] = "OP_UNKNOWN238";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN239"] = 239] = "OP_UNKNOWN239";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN240"] = 240] = "OP_UNKNOWN240";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN241"] = 241] = "OP_UNKNOWN241";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN242"] = 242] = "OP_UNKNOWN242";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN243"] = 243] = "OP_UNKNOWN243";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN244"] = 244] = "OP_UNKNOWN244";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN245"] = 245] = "OP_UNKNOWN245";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN246"] = 246] = "OP_UNKNOWN246";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN247"] = 247] = "OP_UNKNOWN247";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN248"] = 248] = "OP_UNKNOWN248";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN249"] = 249] = "OP_UNKNOWN249";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_SMALLINTEGER"] = 250] = "OP_SMALLINTEGER";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_PUBKEYS"] = 251] = "OP_PUBKEYS";
    OpcodesBTC[OpcodesBTC["OP_UNKNOWN252"] = 252] = "OP_UNKNOWN252";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_PUBKEYHASH"] = 253] = "OP_PUBKEYHASH";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_PUBKEY"] = 254] = "OP_PUBKEY";
    /**
     * Used internally in the C++ implementation.
     */
    OpcodesBTC[OpcodesBTC["OP_INVALIDOPCODE"] = 255] = "OP_INVALIDOPCODE";
})(OpcodesBTC || (OpcodesBTC = {}));
//# sourceMappingURL=btc.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export arithmeticOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op0NotEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op1Add [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op1Sub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opAbs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opAdd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opBoolAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opBoolOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opGreaterThan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opGreaterThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opLessThan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opLessThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opMax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opMin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNegate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNumEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNumEqualVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNumNotEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opWithin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "op1Add": () => /* binding */ op1Add,
/* harmony export */   "op1Sub": () => /* binding */ op1Sub,
/* harmony export */   "opNegate": () => /* binding */ opNegate,
/* harmony export */   "opAbs": () => /* binding */ opAbs,
/* harmony export */   "opNot": () => /* binding */ opNot,
/* harmony export */   "op0NotEqual": () => /* binding */ op0NotEqual,
/* harmony export */   "opAdd": () => /* binding */ opAdd,
/* harmony export */   "opSub": () => /* binding */ opSub,
/* harmony export */   "opBoolAnd": () => /* binding */ opBoolAnd,
/* harmony export */   "opBoolOr": () => /* binding */ opBoolOr,
/* harmony export */   "opNumEqual": () => /* binding */ opNumEqual,
/* harmony export */   "opNumEqualVerify": () => /* binding */ opNumEqualVerify,
/* harmony export */   "opNumNotEqual": () => /* binding */ opNumNotEqual,
/* harmony export */   "opLessThan": () => /* binding */ opLessThan,
/* harmony export */   "opLessThanOrEqual": () => /* binding */ opLessThanOrEqual,
/* harmony export */   "opGreaterThan": () => /* binding */ opGreaterThan,
/* harmony export */   "opGreaterThanOrEqual": () => /* binding */ opGreaterThanOrEqual,
/* harmony export */   "opMin": () => /* binding */ opMin,
/* harmony export */   "opMax": () => /* binding */ opMax,
/* harmony export */   "opWithin": () => /* binding */ opWithin,
/* harmony export */   "arithmeticOperations": () => /* binding */ arithmeticOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");




const op1Add = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(value + BigInt(1))), { requireMinimalEncoding });
const op1Sub = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(value - BigInt(1))), { requireMinimalEncoding });
const opNegate = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(-value)), { requireMinimalEncoding });
const opAbs = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(value < 0 ? -value : value)), { requireMinimalEncoding });
const opNot = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, value === BigInt(0)
    ? (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(1))
    : (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(0))), { requireMinimalEncoding });
const op0NotEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, value === BigInt(0)
    ? (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(0))
    : (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(1))), { requireMinimalEncoding });
const opAdd = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue + secondValue)), { requireMinimalEncoding });
const opSub = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue - secondValue)), { requireMinimalEncoding });
const opBoolAnd = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue !== BigInt(0) && secondValue !== BigInt(0))), { requireMinimalEncoding });
const opBoolOr = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue !== BigInt(0) || secondValue !== BigInt(0))), { requireMinimalEncoding });
const opNumEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue === secondValue)), { requireMinimalEncoding });
const opNumEqualVerify = (flags) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.combineOperations)(opNumEqual(flags), (0,_flow_control__WEBPACK_IMPORTED_MODULE_1__.opVerify)());
const opNumNotEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue !== secondValue)), { requireMinimalEncoding });
const opLessThan = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue < secondValue)), { requireMinimalEncoding });
const opLessThanOrEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue <= secondValue)), { requireMinimalEncoding });
const opGreaterThan = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue > secondValue)), { requireMinimalEncoding });
const opGreaterThanOrEqual = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(firstValue >= secondValue)), { requireMinimalEncoding });
const opMin = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue < secondValue ? firstValue : secondValue)), { requireMinimalEncoding });
const opMax = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoScriptNumbers)(state, (nextState, [firstValue, secondValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(firstValue > secondValue ? firstValue : secondValue)), { requireMinimalEncoding });
const opWithin = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useThreeScriptNumbers)(state, (nextState, [firstValue, secondValue, thirdValue]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(secondValue <= firstValue && firstValue < thirdValue)), { requireMinimalEncoding });
const arithmeticOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_1ADD]: op1Add(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_1SUB]: op1Sub(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NEGATE]: opNegate(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ABS]: opAbs(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NOT]: opNot(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_0NOTEQUAL]: op0NotEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ADD]: opAdd(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_SUB]: opSub(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_BOOLAND]: opBoolAnd(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_BOOLOR]: opBoolOr(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NUMEQUAL]: opNumEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NUMEQUALVERIFY]: opNumEqualVerify(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NUMNOTEQUAL]: opNumNotEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_LESSTHAN]: opLessThan(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_LESSTHANOREQUAL]: opLessThanOrEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_GREATERTHAN]: opGreaterThan(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_GREATERTHANOREQUAL]: opGreaterThanOrEqual(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_MIN]: opMin(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_MAX]: opMax(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_WITHIN]: opWithin(flags),
});
//# sourceMappingURL=arithmetic.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export bitwiseOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opEqualVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opEqual": () => /* binding */ opEqual,
/* harmony export */   "opEqualVerify": () => /* binding */ opEqualVerify,
/* harmony export */   "bitwiseOperations": () => /* binding */ bitwiseOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");




const areEqual = (a, b) => {
    if (a.length !== b.length) {
        return false;
    }
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
            return false;
        }
    }
    return true;
};
const opEqual = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [element1, element2]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, (0,_types__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(areEqual(element1, element2))));
const opEqualVerify = () => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.combineOperations)(opEqual(), (0,_flow_control__WEBPACK_IMPORTED_MODULE_1__.opVerify)());
const bitwiseOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_EQUAL]: opEqual(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_EQUALVERIFY]: opEqualVerify(),
});
//# sourceMappingURL=bitwise.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export combineOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conditionallyEvaluate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export incrementOperationCount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mapOverOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushToStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useFourStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useOneScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useOneStackItem [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useSixStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useThreeScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useThreeStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useTwoScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useTwoStackItems [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "incrementOperationCount": () => /* binding */ incrementOperationCount,
/* harmony export */   "conditionallyEvaluate": () => /* binding */ conditionallyEvaluate,
/* harmony export */   "mapOverOperations": () => /* binding */ mapOverOperations,
/* harmony export */   "useOneStackItem": () => /* binding */ useOneStackItem,
/* harmony export */   "useTwoStackItems": () => /* binding */ useTwoStackItems,
/* harmony export */   "useThreeStackItems": () => /* binding */ useThreeStackItems,
/* harmony export */   "useFourStackItems": () => /* binding */ useFourStackItems,
/* harmony export */   "useSixStackItems": () => /* binding */ useSixStackItems,
/* harmony export */   "useOneScriptNumber": () => /* binding */ useOneScriptNumber,
/* harmony export */   "useTwoScriptNumbers": () => /* binding */ useTwoScriptNumbers,
/* harmony export */   "useThreeScriptNumbers": () => /* binding */ useThreeScriptNumbers,
/* harmony export */   "pushToStack": () => /* binding */ pushToStack,
/* harmony export */   "combineOperations": () => /* binding */ combineOperations
/* harmony export */ });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");


const incrementOperationCount = (operation) => (state) => {
    const nextState = operation(state);
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    nextState.operationCount += 1;
    return nextState;
};
const conditionallyEvaluate = (operation) => (state) => state.executionStack.every((item) => item) ? operation(state) : state;
/**
 * Map a function over each operation in an `InstructionSet.operations` object,
 * assigning the result to the same `opcode` in the resulting object.
 * @param operations - an operations map from an `InstructionSet`
 * @param combinator - a function to apply to each operation
 */
const mapOverOperations = (operations, ...combinators) => Object.keys(operations).reduce((result, operation) => ({
    ...result,
    [operation]: combinators.reduce((op, combinator) => combinator(op), operations[parseInt(operation, 10)]),
}), {});
/**
 * Pop one stack item off of `state.stack` and provide that item to `operation`.
 */
const useOneStackItem = (state, operation) => {
    // eslint-disable-next-line functional/immutable-data
    const item = state.stack.pop();
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyStack, state);
    }
    return operation(state, [item]);
};
const useTwoStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueTwo]) => useOneStackItem(nextState, (lastState, [valueTop]) => operation(lastState, [valueTop, valueTwo])));
const useThreeStackItems = (state, operation) => useOneStackItem(state, (nextState, [valueThree]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree])));
const useFourStackItems = (state, operation) => useTwoStackItems(state, (nextState, [valueThree, valueFour]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [valueTop, valueTwo, valueThree, valueFour])));
const useSixStackItems = (state, operation) => useFourStackItems(state, (nextState, [valueThree, valueFour, valueFive, valueSix]) => useTwoStackItems(nextState, (lastState, [valueTop, valueTwo]) => operation(lastState, [
    valueTop,
    valueTwo,
    valueThree,
    valueFour,
    valueFive,
    valueSix,
])));
const normalMaximumScriptNumberByteLength = 4;
const useOneScriptNumber = (state, operation, { requireMinimalEncoding, maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, }) => useOneStackItem(state, (nextState, [item]) => {
    const value = (0,_common__WEBPACK_IMPORTED_MODULE_0__.parseBytesAsScriptNumber)(item, {
        maximumScriptNumberByteLength,
        requireMinimalEncoding,
    });
    if ((0,_common__WEBPACK_IMPORTED_MODULE_0__.isScriptNumberError)(value)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidScriptNumber, state);
    }
    return operation(nextState, [value]);
});
const useTwoScriptNumbers = (state, operation, { requireMinimalEncoding, maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, }) => useOneScriptNumber(state, (nextState, [secondValue]) => useOneScriptNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue]), { maximumScriptNumberByteLength, requireMinimalEncoding }), { maximumScriptNumberByteLength, requireMinimalEncoding });
const useThreeScriptNumbers = (state, operation, { requireMinimalEncoding, maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, }) => useTwoScriptNumbers(state, (nextState, [secondValue, thirdValue]) => useOneScriptNumber(nextState, (lastState, [firstValue]) => operation(lastState, [firstValue, secondValue, thirdValue]), { maximumScriptNumberByteLength, requireMinimalEncoding }), { maximumScriptNumberByteLength, requireMinimalEncoding });
/**
 * Return the provided state with the provided value pushed to its stack.
 * @param state - the state to update and return
 * @param data - the value to push to the stack
 */
const pushToStack = (state, ...data) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.stack.push(...data);
    return state;
};
// TODO: if firstOperation errors, secondOperation might overwrite the error
const combineOperations = (firstOperation, secondOperation) => (state) => secondOperation(firstOperation(state));
//# sourceMappingURL=combinators.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js .AuthenticationErrorCommon */
/*! export ConsensusCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OpcodeDescriptionsCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js .OpcodeDescriptionsCommon */
/*! export OpcodesCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js .OpcodesCommon */
/*! export PushOperationConstants [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .PushOperationConstants */
/*! export ScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .ScriptNumberError */
/*! export SigningSerializationFlag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .SigningSerializationFlag */
/*! export applyError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js .applyError */
/*! export arithmeticOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .arithmeticOperations */
/*! export bigIntToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .bigIntToScriptNumber */
/*! export bitwiseOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js .bitwiseOperations */
/*! export booleanToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .booleanToScriptNumber */
/*! export checkLimitsCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cloneAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cloneStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export combineOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .combineOperations */
/*! export commonOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .conditionalFlowControlOperations */
/*! export conditionallyEvaluate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .conditionallyEvaluate */
/*! export createAuthenticationProgramInternalStateCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createAuthenticationProgramStateCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTransactionContextCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTransactionContextCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTransactionContextCommonTesting [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cryptoOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .cryptoOperations */
/*! export decodeBitcoinSignature [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .decodeBitcoinSignature */
/*! export disabledOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .disabledOperation */
/*! export disabledOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .disabledOperations */
/*! export encodeDataPush [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .encodeDataPush */
/*! export generateSigningSerializationBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .generateSigningSerializationBCH */
/*! export hashOutputs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .hashOutputs */
/*! export hashPrevouts [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .hashPrevouts */
/*! export hashSequence [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .hashSequence */
/*! export incrementOperationCount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .incrementOperationCount */
/*! export isDefinedSigningSerializationType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .isDefinedSigningSerializationType */
/*! export isLegacySigningSerialization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js .isLegacySigningSerialization */
/*! export isMinimalDataPush [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .isMinimalDataPush */
/*! export isScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .isScriptNumberError */
/*! export isValidCompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidCompressedPublicKeyEncoding */
/*! export isValidPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidPublicKeyEncoding */
/*! export isValidSignatureEncodingBCHTransaction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidSignatureEncodingBCHTransaction */
/*! export isValidSignatureEncodingDER [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidSignatureEncodingDER */
/*! export isValidUncompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js .isValidUncompressedPublicKeyEncoding */
/*! export mapOverOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .mapOverOperations */
/*! export nonOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .nonOperations */
/*! export op0NotEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .op0NotEqual */
/*! export op1Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .op1Add */
/*! export op1Sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .op1Sub */
/*! export op2Drop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Drop */
/*! export op2Dup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Dup */
/*! export op2Over [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Over */
/*! export op2Rot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Rot */
/*! export op2Swap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op2Swap */
/*! export op3Dup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .op3Dup */
/*! export opAbs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opAbs */
/*! export opAdd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opAdd */
/*! export opBoolAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opBoolAnd */
/*! export opBoolOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opBoolOr */
/*! export opCheckLockTimeVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .opCheckLockTimeVerify */
/*! export opCheckMultiSig [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckMultiSig */
/*! export opCheckMultiSigVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckMultiSigVerify */
/*! export opCheckSequenceVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .opCheckSequenceVerify */
/*! export opCheckSig [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckSig */
/*! export opCheckSigVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCheckSigVerify */
/*! export opCodeSeparator [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opCodeSeparator */
/*! export opDepth [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opDepth */
/*! export opDrop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opDrop */
/*! export opDup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opDup */
/*! export opElse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opElse */
/*! export opEndIf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opEndIf */
/*! export opEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js .opEqual */
/*! export opEqualVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js .opEqualVerify */
/*! export opFromAltStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opFromAltStack */
/*! export opGreaterThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opGreaterThan */
/*! export opGreaterThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opGreaterThanOrEqual */
/*! export opHash160 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opHash160 */
/*! export opHash256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opHash256 */
/*! export opIf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opIf */
/*! export opIfDup [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opIfDup */
/*! export opLessThan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opLessThan */
/*! export opLessThanOrEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opLessThanOrEqual */
/*! export opMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opMax */
/*! export opMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opMin */
/*! export opNegate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNegate */
/*! export opNip [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opNip */
/*! export opNop [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js .opNop */
/*! export opNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNot */
/*! export opNotIf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opNotIf */
/*! export opNumEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNumEqual */
/*! export opNumEqualVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNumEqualVerify */
/*! export opNumNotEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opNumNotEqual */
/*! export opOver [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opOver */
/*! export opPick [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opPick */
/*! export opReturn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opReturn */
/*! export opRipemd160 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opRipemd160 */
/*! export opRoll [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opRoll */
/*! export opRot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opRot */
/*! export opSha1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opSha1 */
/*! export opSha256 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js .opSha256 */
/*! export opSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js .opSize */
/*! export opSub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opSub */
/*! export opSwap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opSwap */
/*! export opToAltStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opToAltStack */
/*! export opTuck [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .opTuck */
/*! export opVerify [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .opVerify */
/*! export opWithin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js .opWithin */
/*! export parseBytesAsScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .parseBytesAsScriptNumber */
/*! export pushByteOpcodes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushByteOpcodes */
/*! export pushNumberOpcodes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushNumberOpcodes */
/*! export pushNumberOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushNumberOperations */
/*! export pushOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushOperation */
/*! export pushOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js .pushOperations */
/*! export pushToStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .pushToStack */
/*! export readLocktime [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .readLocktime */
/*! export reservedOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .reservedOperation */
/*! export spliceOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js .spliceOperations */
/*! export stackItemIsTruthy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js .stackItemIsTruthy */
/*! export stackOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js .stackOperations */
/*! export timeOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js .timeOperations */
/*! export unconditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js .unconditionalFlowControlOperations */
/*! export undefinedOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export useFourStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useFourStackItems */
/*! export useOneScriptNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useOneScriptNumber */
/*! export useOneStackItem [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useOneStackItem */
/*! export useSixStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useSixStackItems */
/*! export useThreeScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useThreeScriptNumbers */
/*! export useThreeStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useThreeStackItems */
/*! export useTwoScriptNumbers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useTwoScriptNumbers */
/*! export useTwoStackItems [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js .useTwoStackItems */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arithmeticOperations": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.arithmeticOperations,
/* harmony export */   "op0NotEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.op0NotEqual,
/* harmony export */   "op1Add": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.op1Add,
/* harmony export */   "op1Sub": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.op1Sub,
/* harmony export */   "opAbs": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opAbs,
/* harmony export */   "opAdd": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opAdd,
/* harmony export */   "opBoolAnd": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opBoolAnd,
/* harmony export */   "opBoolOr": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opBoolOr,
/* harmony export */   "opGreaterThan": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opGreaterThan,
/* harmony export */   "opGreaterThanOrEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opGreaterThanOrEqual,
/* harmony export */   "opLessThan": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opLessThan,
/* harmony export */   "opLessThanOrEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opLessThanOrEqual,
/* harmony export */   "opMax": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opMax,
/* harmony export */   "opMin": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opMin,
/* harmony export */   "opNegate": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNegate,
/* harmony export */   "opNot": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNot,
/* harmony export */   "opNumEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNumEqual,
/* harmony export */   "opNumEqualVerify": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNumEqualVerify,
/* harmony export */   "opNumNotEqual": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opNumNotEqual,
/* harmony export */   "opSub": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opSub,
/* harmony export */   "opWithin": () => /* reexport safe */ _arithmetic__WEBPACK_IMPORTED_MODULE_1__.opWithin,
/* harmony export */   "bitwiseOperations": () => /* reexport safe */ _bitwise__WEBPACK_IMPORTED_MODULE_2__.bitwiseOperations,
/* harmony export */   "opEqual": () => /* reexport safe */ _bitwise__WEBPACK_IMPORTED_MODULE_2__.opEqual,
/* harmony export */   "opEqualVerify": () => /* reexport safe */ _bitwise__WEBPACK_IMPORTED_MODULE_2__.opEqualVerify,
/* harmony export */   "combineOperations": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.combineOperations,
/* harmony export */   "conditionallyEvaluate": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate,
/* harmony export */   "incrementOperationCount": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.incrementOperationCount,
/* harmony export */   "mapOverOperations": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations,
/* harmony export */   "pushToStack": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.pushToStack,
/* harmony export */   "useFourStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useFourStackItems,
/* harmony export */   "useOneScriptNumber": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useOneScriptNumber,
/* harmony export */   "useOneStackItem": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useOneStackItem,
/* harmony export */   "useSixStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useSixStackItems,
/* harmony export */   "useThreeScriptNumbers": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useThreeScriptNumbers,
/* harmony export */   "useThreeStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useThreeStackItems,
/* harmony export */   "useTwoScriptNumbers": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useTwoScriptNumbers,
/* harmony export */   "useTwoStackItems": () => /* reexport safe */ _combinators__WEBPACK_IMPORTED_MODULE_3__.useTwoStackItems,
/* harmony export */   "cryptoOperations": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.cryptoOperations,
/* harmony export */   "opCheckMultiSig": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckMultiSig,
/* harmony export */   "opCheckMultiSigVerify": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckMultiSigVerify,
/* harmony export */   "opCheckSig": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckSig,
/* harmony export */   "opCheckSigVerify": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCheckSigVerify,
/* harmony export */   "opCodeSeparator": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opCodeSeparator,
/* harmony export */   "opHash160": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opHash160,
/* harmony export */   "opHash256": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opHash256,
/* harmony export */   "opRipemd160": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opRipemd160,
/* harmony export */   "opSha1": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opSha1,
/* harmony export */   "opSha256": () => /* reexport safe */ _crypto__WEBPACK_IMPORTED_MODULE_4__.opSha256,
/* harmony export */   "OpcodeDescriptionsCommon": () => /* reexport safe */ _descriptions__WEBPACK_IMPORTED_MODULE_13__.OpcodeDescriptionsCommon,
/* harmony export */   "decodeBitcoinSignature": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.decodeBitcoinSignature,
/* harmony export */   "isValidCompressedPublicKeyEncoding": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidCompressedPublicKeyEncoding,
/* harmony export */   "isValidPublicKeyEncoding": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidPublicKeyEncoding,
/* harmony export */   "isValidSignatureEncodingBCHTransaction": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidSignatureEncodingBCHTransaction,
/* harmony export */   "isValidSignatureEncodingDER": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidSignatureEncodingDER,
/* harmony export */   "isValidUncompressedPublicKeyEncoding": () => /* reexport safe */ _encoding__WEBPACK_IMPORTED_MODULE_14__.isValidUncompressedPublicKeyEncoding,
/* harmony export */   "AuthenticationErrorCommon": () => /* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon,
/* harmony export */   "applyError": () => /* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_5__.applyError,
/* harmony export */   "conditionalFlowControlOperations": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.conditionalFlowControlOperations,
/* harmony export */   "opElse": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opElse,
/* harmony export */   "opEndIf": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opEndIf,
/* harmony export */   "opIf": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opIf,
/* harmony export */   "opNotIf": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opNotIf,
/* harmony export */   "opReturn": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opReturn,
/* harmony export */   "opVerify": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.opVerify,
/* harmony export */   "reservedOperation": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.reservedOperation,
/* harmony export */   "unconditionalFlowControlOperations": () => /* reexport safe */ _flow_control__WEBPACK_IMPORTED_MODULE_6__.unconditionalFlowControlOperations,
/* harmony export */   "disabledOperation": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.disabledOperation,
/* harmony export */   "disabledOperations": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.disabledOperations,
/* harmony export */   "nonOperations": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.nonOperations,
/* harmony export */   "opNop": () => /* reexport safe */ _nop__WEBPACK_IMPORTED_MODULE_7__.opNop,
/* harmony export */   "OpcodesCommon": () => /* reexport safe */ _opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesCommon,
/* harmony export */   "PushOperationConstants": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.PushOperationConstants,
/* harmony export */   "encodeDataPush": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.encodeDataPush,
/* harmony export */   "isMinimalDataPush": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.isMinimalDataPush,
/* harmony export */   "pushByteOpcodes": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushByteOpcodes,
/* harmony export */   "pushNumberOpcodes": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushNumberOpcodes,
/* harmony export */   "pushNumberOperations": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushNumberOperations,
/* harmony export */   "pushOperation": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushOperation,
/* harmony export */   "pushOperations": () => /* reexport safe */ _push__WEBPACK_IMPORTED_MODULE_9__.pushOperations,
/* harmony export */   "SigningSerializationFlag": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.SigningSerializationFlag,
/* harmony export */   "generateSigningSerializationBCH": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.generateSigningSerializationBCH,
/* harmony export */   "hashOutputs": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.hashOutputs,
/* harmony export */   "hashPrevouts": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.hashPrevouts,
/* harmony export */   "hashSequence": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.hashSequence,
/* harmony export */   "isDefinedSigningSerializationType": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.isDefinedSigningSerializationType,
/* harmony export */   "isLegacySigningSerialization": () => /* reexport safe */ _signing_serialization__WEBPACK_IMPORTED_MODULE_15__.isLegacySigningSerialization,
/* harmony export */   "opSize": () => /* reexport safe */ _splice__WEBPACK_IMPORTED_MODULE_10__.opSize,
/* harmony export */   "spliceOperations": () => /* reexport safe */ _splice__WEBPACK_IMPORTED_MODULE_10__.spliceOperations,
/* harmony export */   "op2Drop": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Drop,
/* harmony export */   "op2Dup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Dup,
/* harmony export */   "op2Over": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Over,
/* harmony export */   "op2Rot": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Rot,
/* harmony export */   "op2Swap": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op2Swap,
/* harmony export */   "op3Dup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.op3Dup,
/* harmony export */   "opDepth": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opDepth,
/* harmony export */   "opDrop": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opDrop,
/* harmony export */   "opDup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opDup,
/* harmony export */   "opFromAltStack": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opFromAltStack,
/* harmony export */   "opIfDup": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opIfDup,
/* harmony export */   "opNip": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opNip,
/* harmony export */   "opOver": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opOver,
/* harmony export */   "opPick": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opPick,
/* harmony export */   "opRoll": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opRoll,
/* harmony export */   "opRot": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opRot,
/* harmony export */   "opSwap": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opSwap,
/* harmony export */   "opToAltStack": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opToAltStack,
/* harmony export */   "opTuck": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.opTuck,
/* harmony export */   "stackOperations": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_11__.stackOperations,
/* harmony export */   "opCheckLockTimeVerify": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.opCheckLockTimeVerify,
/* harmony export */   "opCheckSequenceVerify": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.opCheckSequenceVerify,
/* harmony export */   "readLocktime": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.readLocktime,
/* harmony export */   "timeOperations": () => /* reexport safe */ _time__WEBPACK_IMPORTED_MODULE_12__.timeOperations,
/* harmony export */   "ScriptNumberError": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.ScriptNumberError,
/* harmony export */   "bigIntToScriptNumber": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.bigIntToScriptNumber,
/* harmony export */   "booleanToScriptNumber": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.booleanToScriptNumber,
/* harmony export */   "isScriptNumberError": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.isScriptNumberError,
/* harmony export */   "parseBytesAsScriptNumber": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.parseBytesAsScriptNumber,
/* harmony export */   "stackItemIsTruthy": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_16__.stackItemIsTruthy,
/* harmony export */   "ConsensusCommon": () => /* binding */ ConsensusCommon,
/* harmony export */   "undefinedOperation": () => /* binding */ undefinedOperation,
/* harmony export */   "checkLimitsCommon": () => /* binding */ checkLimitsCommon,
/* harmony export */   "commonOperations": () => /* binding */ commonOperations,
/* harmony export */   "cloneStack": () => /* binding */ cloneStack,
/* harmony export */   "createAuthenticationProgramInternalStateCommon": () => /* binding */ createAuthenticationProgramInternalStateCommon,
/* harmony export */   "createTransactionContextCommon": () => /* binding */ createTransactionContextCommon,
/* harmony export */   "createAuthenticationProgramStateCommon": () => /* binding */ createAuthenticationProgramStateCommon,
/* harmony export */   "cloneAuthenticationProgramStateCommon": () => /* binding */ cloneAuthenticationProgramStateCommon,
/* harmony export */   "createTransactionContextCommonEmpty": () => /* binding */ createTransactionContextCommonEmpty,
/* harmony export */   "createTransactionContextCommonTesting": () => /* binding */ createTransactionContextCommonTesting,
/* harmony export */   "createAuthenticationProgramStateCommonEmpty": () => /* binding */ createAuthenticationProgramStateCommonEmpty
/* harmony export */ });
/* harmony import */ var _transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../transaction/transaction-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/transaction/transaction-serialization.js");
/* harmony import */ var _arithmetic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arithmetic */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js");
/* harmony import */ var _bitwise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bitwise */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/bitwise.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./crypto */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _nop__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nop */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _push__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./push */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js");
/* harmony import */ var _splice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./splice */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js");
/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./stack */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js");
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./time */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js");
/* harmony import */ var _descriptions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./descriptions */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./encoding */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js");
/* harmony import */ var _signing_serialization__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");





























var ConsensusCommon;
(function (ConsensusCommon) {
    /**
     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`
     */
    ConsensusCommon[ConsensusCommon["maximumStackItemLength"] = 520] = "maximumStackItemLength";
    ConsensusCommon[ConsensusCommon["maximumScriptNumberLength"] = 4] = "maximumScriptNumberLength";
    /**
     * A.K.A. `MAX_OPS_PER_SCRIPT`
     */
    ConsensusCommon[ConsensusCommon["maximumOperationCount"] = 201] = "maximumOperationCount";
    /**
     * A.K.A. `MAX_SCRIPT_SIZE`
     */
    ConsensusCommon[ConsensusCommon["maximumBytecodeLength"] = 10000] = "maximumBytecodeLength";
    /**
     * A.K.A. `MAX_STACK_SIZE`
     */
    ConsensusCommon[ConsensusCommon["maximumStackDepth"] = 1000] = "maximumStackDepth";
})(ConsensusCommon || (ConsensusCommon = {}));
const undefinedOperation = () => ({
    undefined: (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate)((state) => (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.unknownOpcode, state)),
});
const checkLimitsCommon = (operation) => (state) => {
    const nextState = operation(state);
    return nextState.stack.length + nextState.alternateStack.length >
        ConsensusCommon.maximumStackDepth
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumStackDepth, nextState)
        : nextState.operationCount > ConsensusCommon.maximumOperationCount
            ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumOperationCount, nextState)
            : nextState;
};
const commonOperations = ({ flags, ripemd160, secp256k1, sha1, sha256, }) => {
    const unconditionalOperations = {
        ...(0,_nop__WEBPACK_IMPORTED_MODULE_7__.disabledOperations)(),
        ...(0,_push__WEBPACK_IMPORTED_MODULE_9__.pushOperations)(flags),
        ...(0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)((0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.unconditionalFlowControlOperations)(flags), _combinators__WEBPACK_IMPORTED_MODULE_3__.incrementOperationCount),
    };
    const conditionalOperations = (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)({
        ...(0,_push__WEBPACK_IMPORTED_MODULE_9__.pushNumberOperations)(),
        [_opcodes__WEBPACK_IMPORTED_MODULE_8__.OpcodesCommon.OP_RESERVED]: (0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.reservedOperation)(),
    }, _combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate);
    const incrementingOperations = (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)({
        ...(0,_arithmetic__WEBPACK_IMPORTED_MODULE_1__.arithmeticOperations)(flags),
        ...(0,_bitwise__WEBPACK_IMPORTED_MODULE_2__.bitwiseOperations)(),
        ...(0,_crypto__WEBPACK_IMPORTED_MODULE_4__.cryptoOperations)({
            flags,
            ripemd160,
            secp256k1,
            sha1,
            sha256,
        }),
        ...(0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.conditionalFlowControlOperations)(),
        ...(0,_stack__WEBPACK_IMPORTED_MODULE_11__.stackOperations)(flags),
        ...(0,_splice__WEBPACK_IMPORTED_MODULE_10__.spliceOperations)(),
        ...(0,_time__WEBPACK_IMPORTED_MODULE_12__.timeOperations)(flags),
        ...(0,_nop__WEBPACK_IMPORTED_MODULE_7__.nonOperations)(flags),
    }, _combinators__WEBPACK_IMPORTED_MODULE_3__.conditionallyEvaluate, _combinators__WEBPACK_IMPORTED_MODULE_3__.incrementOperationCount);
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_3__.mapOverOperations)({
        ...unconditionalOperations,
        ...incrementingOperations,
        ...conditionalOperations,
    }, checkLimitsCommon);
};
const cloneStack = (stack) => stack.reduce((newStack, element) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    newStack.push(element.slice());
    return newStack;
}, []);
const createAuthenticationProgramInternalStateCommon = ({ instructions, stack = [], }) => ({
    alternateStack: [],
    executionStack: [],
    instructions,
    ip: 0,
    lastCodeSeparator: -1,
    operationCount: 0,
    signatureOperationsCount: 0,
    signedMessages: [],
    stack,
});
const createTransactionContextCommon = (program) => ({
    correspondingOutput: program.inputIndex < program.spendingTransaction.outputs.length
        ? (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeOutput)(program.spendingTransaction.outputs[program.inputIndex])
        : undefined,
    locktime: program.spendingTransaction.locktime,
    outpointIndex: program.spendingTransaction.inputs[program.inputIndex].outpointIndex,
    outpointTransactionHash: program.spendingTransaction.inputs[program.inputIndex]
        .outpointTransactionHash,
    outputValue: program.sourceOutput.satoshis,
    sequenceNumber: program.spendingTransaction.inputs[program.inputIndex].sequenceNumber,
    transactionOutpoints: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeOutpoints)(program.spendingTransaction.inputs),
    transactionOutputs: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeOutputsForSigning)(program.spendingTransaction.outputs),
    transactionSequenceNumbers: (0,_transaction_transaction_serialization__WEBPACK_IMPORTED_MODULE_0__.encodeSequenceNumbersForSigning)(program.spendingTransaction.inputs),
    version: program.spendingTransaction.version,
});
const createAuthenticationProgramStateCommon = ({ transactionContext, instructions, stack, }) => ({
    ...createAuthenticationProgramInternalStateCommon({
        instructions,
        stack,
    }),
    ...transactionContext,
});
/**
 * Note: this implementation does not safely clone elements within array
 * properties. Mutating values within arrays will mutate those values in cloned
 * program states.
 */
const cloneAuthenticationProgramStateCommon = (state) => ({
    ...(state.error === undefined ? {} : { error: state.error }),
    alternateStack: state.alternateStack.slice(),
    correspondingOutput: state.correspondingOutput,
    executionStack: state.executionStack.slice(),
    instructions: state.instructions.slice(),
    ip: state.ip,
    lastCodeSeparator: state.lastCodeSeparator,
    locktime: state.locktime,
    operationCount: state.operationCount,
    outpointIndex: state.outpointIndex,
    outpointTransactionHash: state.outpointTransactionHash.slice(),
    outputValue: state.outputValue,
    sequenceNumber: state.sequenceNumber,
    signatureOperationsCount: state.signatureOperationsCount,
    signedMessages: state.signedMessages.slice(),
    stack: state.stack.slice(),
    transactionOutpoints: state.transactionOutpoints,
    transactionOutputs: state.transactionOutputs,
    transactionSequenceNumbers: state.transactionSequenceNumbers,
    version: state.version,
});
const sha256HashLength = 32;
const outputValueLength = 8;
/**
 * This is a meaningless but complete `TransactionContextCommon` which uses `0`
 * values for each property.
 */
const createTransactionContextCommonEmpty = () => ({
    correspondingOutput: Uint8Array.of(0),
    locktime: 0,
    outpointIndex: 0,
    outpointTransactionHash: new Uint8Array(sha256HashLength),
    outputValue: new Uint8Array(outputValueLength),
    sequenceNumber: 0,
    transactionOutpoints: Uint8Array.of(0),
    transactionOutputs: Uint8Array.of(0),
    transactionSequenceNumbers: Uint8Array.of(0),
    version: 0,
});
const correspondingOutput = 1;
const transactionOutpoints = 2;
const transactionOutputs = 3;
const transactionSequenceNumbers = 4;
const outpointTransactionHashFill = 5;
/**
 * This is a meaningless but complete `TransactionContextCommon` which uses a
 * different value for each property. This is useful for testing and debugging.
 */
const createTransactionContextCommonTesting = () => ({
    correspondingOutput: Uint8Array.of(correspondingOutput),
    locktime: 0,
    outpointIndex: 0,
    outpointTransactionHash: new Uint8Array(sha256HashLength).fill(outpointTransactionHashFill),
    outputValue: new Uint8Array(outputValueLength),
    sequenceNumber: 0,
    transactionOutpoints: Uint8Array.of(transactionOutpoints),
    transactionOutputs: Uint8Array.of(transactionOutputs),
    transactionSequenceNumbers: Uint8Array.of(transactionSequenceNumbers),
    version: 0,
});
/**
 * Create an "empty" common authentication program state, suitable for testing a
 * VM/compiler.
 */
const createAuthenticationProgramStateCommonEmpty = ({ instructions, stack = [], }) => ({
    ...createAuthenticationProgramInternalStateCommon({ instructions, stack }),
    ...createTransactionContextCommonEmpty(),
});
//# sourceMappingURL=common.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/crypto.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export cryptoOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckMultiSig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckMultiSigVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckSig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckSigVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCodeSeparator [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opHash160 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opHash256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opRipemd160 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSha1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSha256 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opRipemd160": () => /* binding */ opRipemd160,
/* harmony export */   "opSha1": () => /* binding */ opSha1,
/* harmony export */   "opSha256": () => /* binding */ opSha256,
/* harmony export */   "opHash160": () => /* binding */ opHash160,
/* harmony export */   "opHash256": () => /* binding */ opHash256,
/* harmony export */   "opCodeSeparator": () => /* binding */ opCodeSeparator,
/* harmony export */   "opCheckSig": () => /* binding */ opCheckSig,
/* harmony export */   "opCheckMultiSig": () => /* binding */ opCheckMultiSig,
/* harmony export */   "opCheckSigVerify": () => /* binding */ opCheckSigVerify,
/* harmony export */   "opCheckMultiSigVerify": () => /* binding */ opCheckMultiSigVerify,
/* harmony export */   "cryptoOperations": () => /* binding */ cryptoOperations
/* harmony export */ });
/* harmony import */ var _bch_bch_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bch/bch-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch-types.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _flow_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flow-control */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _signing_serialization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");









const opRipemd160 = ({ ripemd160, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, ripemd160.hash(value)));
const opSha1 = ({ sha1, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, sha1.hash(value)));
const opSha256 = ({ sha256, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, sha256.hash(value)));
const opHash160 = ({ ripemd160, sha256, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, ripemd160.hash(sha256.hash(value))));
const opHash256 = ({ sha256, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(state, (nextState, [value]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(nextState, sha256.hash(sha256.hash(value))));
const opCodeSeparator = () => (state) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.lastCodeSeparator = state.ip;
    return state;
};
const opCheckSig = ({ flags, secp256k1, sha256, }) => (s) => 
// eslint-disable-next-line complexity
(0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useTwoStackItems)(s, (state, [bitcoinEncodedSignature, publicKey]) => {
    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidPublicKeyEncoding)(publicKey)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidPublicKeyEncoding, state);
    }
    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidSignatureEncoding, state);
    }
    const coveredBytecode = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeAuthenticationInstructions)(state.instructions).subarray(state.lastCodeSeparator + 1);
    const { signingSerializationType, signature } = (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.decodeBitcoinSignature)(bitcoinEncodedSignature);
    const serialization = (0,_signing_serialization__WEBPACK_IMPORTED_MODULE_8__.generateSigningSerializationBCH)({
        correspondingOutput: state.correspondingOutput,
        coveredBytecode,
        locktime: state.locktime,
        outpointIndex: state.outpointIndex,
        outpointTransactionHash: state.outpointTransactionHash,
        outputValue: state.outputValue,
        sequenceNumber: state.sequenceNumber,
        sha256,
        signingSerializationType,
        transactionOutpoints: state.transactionOutpoints,
        transactionOutputs: state.transactionOutputs,
        transactionSequenceNumbers: state.transactionSequenceNumbers,
        version: state.version,
    });
    const digest = sha256.hash(sha256.hash(serialization));
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.signedMessages.push(serialization);
    const useSchnorr = signature.length === _bch_bch_types__WEBPACK_IMPORTED_MODULE_0__.ConsensusBCH.schnorrSignatureLength;
    const success = useSchnorr
        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)
        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);
    return !success &&
        flags.requireNullSignatureFailures &&
        signature.length !== 0
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.nonNullSignatureFailure, state)
        : (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(state, (0,_common__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(success));
});
const opCheckMultiSig = ({ flags: { requireMinimalEncoding, requireBugValueZero, requireNullSignatureFailures, }, secp256k1, sha256, }) => (s) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneScriptNumber)(s, (state, publicKeysValue) => {
    const potentialPublicKeys = Number(publicKeysValue);
    if (potentialPublicKeys < 0) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidNaturalNumber, state);
    }
    if (potentialPublicKeys > 20 /* maximumPublicKeys */) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount, state);
    }
    const publicKeys = 
    // eslint-disable-next-line functional/immutable-data
    potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.operationCount += potentialPublicKeys;
    return state.operationCount > _common__WEBPACK_IMPORTED_MODULE_3__.ConsensusCommon.maximumOperationCount
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.exceededMaximumOperationCount, state)
        : (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneScriptNumber)(state, (nextState, approvingKeys) => {
            const requiredApprovingPublicKeys = Number(approvingKeys);
            if (requiredApprovingPublicKeys < 0) {
                return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidNaturalNumber, nextState);
            }
            if (requiredApprovingPublicKeys > potentialPublicKeys) {
                return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.insufficientPublicKeys, nextState);
            }
            const signatures = requiredApprovingPublicKeys > 0
                ? // eslint-disable-next-line functional/immutable-data
                    nextState.stack.splice(-requiredApprovingPublicKeys)
                : [];
            return (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem)(nextState, 
            // eslint-disable-next-line complexity
            (finalState, [protocolBugValue]) => {
                if (requireBugValueZero && protocolBugValue.length !== 0) {
                    return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidProtocolBugValue, finalState);
                }
                const coveredBytecode = (0,_instruction_sets_utils__WEBPACK_IMPORTED_MODULE_1__.serializeAuthenticationInstructions)(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);
                let approvingPublicKeys = 0; // eslint-disable-line functional/no-let
                let remainingSignatures = signatures.length; // eslint-disable-line functional/no-let
                let remainingPublicKeys = publicKeys.length; // eslint-disable-line functional/no-let
                // eslint-disable-next-line functional/no-loop-statement
                while (remainingSignatures > 0 &&
                    remainingPublicKeys > 0 &&
                    approvingPublicKeys + remainingPublicKeys >=
                        remainingSignatures &&
                    approvingPublicKeys !== requiredApprovingPublicKeys) {
                    const publicKey = publicKeys[remainingPublicKeys - 1];
                    const bitcoinEncodedSignature = signatures[remainingSignatures - 1];
                    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidPublicKeyEncoding)(publicKey)) {
                        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidPublicKeyEncoding, finalState);
                    }
                    if (!(0,_encoding__WEBPACK_IMPORTED_MODULE_4__.isValidSignatureEncodingBCHTransaction)(bitcoinEncodedSignature)) {
                        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.invalidSignatureEncoding, finalState);
                    }
                    const { signingSerializationType, signature, } = (0,_encoding__WEBPACK_IMPORTED_MODULE_4__.decodeBitcoinSignature)(bitcoinEncodedSignature);
                    const serialization = (0,_signing_serialization__WEBPACK_IMPORTED_MODULE_8__.generateSigningSerializationBCH)({
                        correspondingOutput: state.correspondingOutput,
                        coveredBytecode,
                        locktime: state.locktime,
                        outpointIndex: state.outpointIndex,
                        outpointTransactionHash: state.outpointTransactionHash,
                        outputValue: state.outputValue,
                        sequenceNumber: state.sequenceNumber,
                        sha256,
                        signingSerializationType,
                        transactionOutpoints: state.transactionOutpoints,
                        transactionOutputs: state.transactionOutputs,
                        transactionSequenceNumbers: state.transactionSequenceNumbers,
                        version: state.version,
                    });
                    const digest = sha256.hash(sha256.hash(serialization));
                    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
                    finalState.signedMessages.push(serialization);
                    if (signature.length === _bch_bch_types__WEBPACK_IMPORTED_MODULE_0__.ConsensusBCH.schnorrSignatureLength) {
                        return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig, finalState);
                    }
                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);
                    // eslint-disable-next-line functional/no-conditional-statement
                    if (signed) {
                        approvingPublicKeys += 1; // eslint-disable-line functional/no-expression-statement
                        remainingSignatures -= 1; // eslint-disable-line functional/no-expression-statement
                    }
                    remainingPublicKeys -= 1; // eslint-disable-line functional/no-expression-statement
                }
                const success = approvingPublicKeys === requiredApprovingPublicKeys;
                if (!success &&
                    requireNullSignatureFailures &&
                    !signatures.every((signature) => signature.length === 0)) {
                    return (0,_errors__WEBPACK_IMPORTED_MODULE_5__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationErrorCommon.nonNullSignatureFailure, finalState);
                }
                return (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(finalState, (0,_common__WEBPACK_IMPORTED_MODULE_3__.booleanToScriptNumber)(success));
            });
        }, { requireMinimalEncoding });
}, { requireMinimalEncoding });
const opCheckSigVerify = ({ flags, secp256k1, sha256, }) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.combineOperations)(opCheckSig({ flags, secp256k1, sha256 }), (0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.opVerify)());
const opCheckMultiSigVerify = ({ flags, secp256k1, sha256, }) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.combineOperations)(opCheckMultiSig({ flags, secp256k1, sha256 }), (0,_flow_control__WEBPACK_IMPORTED_MODULE_6__.opVerify)());
const cryptoOperations = ({ flags, ripemd160, secp256k1, sha1, sha256, }) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_RIPEMD160]: opRipemd160({
        ripemd160,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_SHA1]: opSha1({ sha1 }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_SHA256]: opSha256({ sha256 }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_HASH160]: opHash160({
        ripemd160,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_HASH256]: opHash256({ sha256 }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CODESEPARATOR]: opCodeSeparator(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKSIG]: opCheckSig({
        flags,
        secp256k1,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKSIGVERIFY]: opCheckSigVerify({
        flags,
        secp256k1,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKMULTISIG]: opCheckMultiSig({
        flags,
        secp256k1,
        sha256,
    }),
    [_opcodes__WEBPACK_IMPORTED_MODULE_7__.OpcodesCommon.OP_CHECKMULTISIGVERIFY]: opCheckMultiSigVerify({ flags, secp256k1, sha256 }),
});
//# sourceMappingURL=crypto.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/descriptions.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export OpcodeDescriptionsCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodeDescriptionsCommon": () => /* binding */ OpcodeDescriptionsCommon
/* harmony export */ });
var OpcodeDescriptionsCommon;
(function (OpcodeDescriptionsCommon) {
    OpcodeDescriptionsCommon["OP_0"] = "Push the Script Number 0 onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_1"] = "Push the next byte onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_2"] = "Push the next 2 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_3"] = "Push the next 3 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_4"] = "Push the next 4 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_5"] = "Push the next 5 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_6"] = "Push the next 6 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_7"] = "Push the next 7 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_8"] = "Push the next 8 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_9"] = "Push the next 9 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_10"] = "Push the next 10 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_11"] = "Push the next 11 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_12"] = "Push the next 12 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_13"] = "Push the next 13 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_14"] = "Push the next 14 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_15"] = "Push the next 15 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_16"] = "Push the next 16 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_17"] = "Push the next 17 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_18"] = "Push the next 18 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_19"] = "Push the next 19 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_20"] = "Push the next 20 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_21"] = "Push the next 21 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_22"] = "Push the next 22 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_23"] = "Push the next 23 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_24"] = "Push the next 24 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_25"] = "Push the next 25 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_26"] = "Push the next 26 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_27"] = "Push the next 27 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_28"] = "Push the next 28 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_29"] = "Push the next 29 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_30"] = "Push the next 30 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_31"] = "Push the next 31 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_32"] = "Push the next 32 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_33"] = "Push the next 33 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_34"] = "Push the next 34 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_35"] = "Push the next 35 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_36"] = "Push the next 36 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_37"] = "Push the next 37 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_38"] = "Push the next 38 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_39"] = "Push the next 39 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_40"] = "Push the next 40 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_41"] = "Push the next 41 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_42"] = "Push the next 42 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_43"] = "Push the next 43 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_44"] = "Push the next 44 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_45"] = "Push the next 45 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_46"] = "Push the next 46 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_47"] = "Push the next 47 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_48"] = "Push the next 48 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_49"] = "Push the next 49 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_50"] = "Push the next 50 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_51"] = "Push the next 51 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_52"] = "Push the next 52 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_53"] = "Push the next 53 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_54"] = "Push the next 54 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_55"] = "Push the next 55 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_56"] = "Push the next 56 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_57"] = "Push the next 57 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_58"] = "Push the next 58 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_59"] = "Push the next 59 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_60"] = "Push the next 60 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_61"] = "Push the next 61 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_62"] = "Push the next 62 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_63"] = "Push the next 63 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_64"] = "Push the next 64 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_65"] = "Push the next 65 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_66"] = "Push the next 66 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_67"] = "Push the next 67 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_68"] = "Push the next 68 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_69"] = "Push the next 69 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_70"] = "Push the next 70 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_71"] = "Push the next 71 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_72"] = "Push the next 72 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_73"] = "Push the next 73 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_74"] = "Push the next 74 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHBYTES_75"] = "Push the next 75 bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHDATA_1"] = "Read the next Uint8 and push that number of bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHDATA_2"] = "Read the next little-endian Uint16 and push that number of bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_PUSHDATA_4"] = "Read the next little-endian Uint32 and push that number of bytes onto the stack.";
    OpcodeDescriptionsCommon["OP_1NEGATE"] = "Push the Script Number -1 onto the stack.";
    OpcodeDescriptionsCommon["OP_RESERVED"] = "Error unless found in an unexecuted conditional branch. Note: OP_RESERVED does not count toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_1"] = "Push the Script Number 1 onto the stack.";
    OpcodeDescriptionsCommon["OP_2"] = "Push the Script Number 2 onto the stack.";
    OpcodeDescriptionsCommon["OP_3"] = "Push the Script Number 3 onto the stack.";
    OpcodeDescriptionsCommon["OP_4"] = "Push the Script Number 4 onto the stack.";
    OpcodeDescriptionsCommon["OP_5"] = "Push the Script Number 5 onto the stack.";
    OpcodeDescriptionsCommon["OP_6"] = "Push the Script Number 6 onto the stack.";
    OpcodeDescriptionsCommon["OP_7"] = "Push the Script Number 7 onto the stack.";
    OpcodeDescriptionsCommon["OP_8"] = "Push the Script Number 8 onto the stack.";
    OpcodeDescriptionsCommon["OP_9"] = "Push the Script Number 9 onto the stack.";
    OpcodeDescriptionsCommon["OP_10"] = "Push the Script Number 10 onto the stack.";
    OpcodeDescriptionsCommon["OP_11"] = "Push the Script Number 11 onto the stack.";
    OpcodeDescriptionsCommon["OP_12"] = "Push the Script Number 12 onto the stack.";
    OpcodeDescriptionsCommon["OP_13"] = "Push the Script Number 13 onto the stack.";
    OpcodeDescriptionsCommon["OP_14"] = "Push the Script Number 14 onto the stack.";
    OpcodeDescriptionsCommon["OP_15"] = "Push the Script Number 15 onto the stack.";
    OpcodeDescriptionsCommon["OP_16"] = "Push the Script Number 16 onto the stack.";
    OpcodeDescriptionsCommon["OP_NOP"] = "No operation. Note: OP_NOP counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_VER"] = "Error unless found in an unexecuted conditional branch. Note: OP_VER counts toward the opcode limit. (Historically, this pushed a protocol version number to the stack.)";
    OpcodeDescriptionsCommon["OP_IF"] = "Pop the top item from the stack. If it is not \"truthy\", skip evaluation until the matching OP_ELSE or OP_ENDIF.";
    OpcodeDescriptionsCommon["OP_NOTIF"] = "Evaluate OP_NOT followed by OP_IF.";
    OpcodeDescriptionsCommon["OP_VERIF"] = "Error, even when found in an unexecuted conditional branch. (Historically, this was a combination of OP_VER and OP_IF.)";
    OpcodeDescriptionsCommon["OP_VERNOTIF"] = "Error, even when found in an unexecuted conditional branch. (Historically, this was a combination of OP_VER and OP_NOTIF.)";
    OpcodeDescriptionsCommon["OP_ELSE"] = "Invert conditional evaluation within the current OP_IF ... OP_ENDIF block. (If evaluation is enabled, disable it, if it is disabled, enable it.)";
    OpcodeDescriptionsCommon["OP_ENDIF"] = "End the current OP_IF ... OP_ENDIF block.";
    OpcodeDescriptionsCommon["OP_VERIFY"] = "Pop the top item from the stack and error if it isn't \"truthy\".";
    OpcodeDescriptionsCommon["OP_RETURN"] = "Error when executed.";
    OpcodeDescriptionsCommon["OP_TOALTSTACK"] = "Pop the top item from the stack and push it onto the alternate stack.";
    OpcodeDescriptionsCommon["OP_FROMALTSTACK"] = "Pop the top item from the alternate stack and push it onto the stack.";
    OpcodeDescriptionsCommon["OP_2DROP"] = "Pop the top 2 items from the stack and discard them.";
    OpcodeDescriptionsCommon["OP_2DUP"] = "Duplicate the top 2 items on the stack. (E.g. [a, b] -> [a, b, a, b])";
    OpcodeDescriptionsCommon["OP_3DUP"] = "Duplicate the top 3 items on the stack. (E.g. [a, b, c] -> [a, b, c, a, b, c])";
    OpcodeDescriptionsCommon["OP_2OVER"] = "Duplicate the 2 items beginning at a depth of 2 on the stack. (E.g. [a, b, c, d] -> [a, b, c, d, a, b])";
    OpcodeDescriptionsCommon["OP_2ROT"] = "Rotate the top 6 items on the stack, bringing the fifth and sixth items to the top. (E.g. [a, b, c, d, e, f] -> [c, d, e, f, a, b])";
    OpcodeDescriptionsCommon["OP_2SWAP"] = "Swap the positions of the top two pairs of items on the stack. (E.g. [a, b, c, d] -> [c, d, a, b])";
    OpcodeDescriptionsCommon["OP_IFDUP"] = "If the top item on the stack is \"truthy\", duplicate it.";
    OpcodeDescriptionsCommon["OP_DEPTH"] = "Push the current number of stack items as a Script Number.";
    OpcodeDescriptionsCommon["OP_DROP"] = "Pop the top item from the stack and discard it. (E.g. [a] -> [])";
    OpcodeDescriptionsCommon["OP_DUP"] = "Duplicate the top item on the stack. (E.g. [a] -> [a, a])";
    OpcodeDescriptionsCommon["OP_NIP"] = "Remove the second-to-top item from the stack. (E.g. [a, b] -> [b])";
    OpcodeDescriptionsCommon["OP_OVER"] = "Duplicate the second-to-top item on the stack. (E.g. [a, b] -> [a, b, a])";
    OpcodeDescriptionsCommon["OP_PICK"] = "Pop the top item from the stack as a Script Number. Duplicate the item at that depth (zero-indexed), placing it on top of the stack. (E.g. [a, b, c, 2] -> [a, b, c, a])";
    OpcodeDescriptionsCommon["OP_ROLL"] = "Pop the top item from the stack as a Script Number. Move the item at that depth (zero-indexed) to the top of the stack. (E.g. [a, b, c, 2] -> [b, c, a])";
    OpcodeDescriptionsCommon["OP_ROT"] = "Rotate the top 3 items on the stack, bringing the third item to the top. (E.g. [a, b, c] -> [b, c, a])";
    OpcodeDescriptionsCommon["OP_SWAP"] = "Swap the top two items on the stack. (E.g. [a, b] -> [b, a])";
    OpcodeDescriptionsCommon["OP_TUCK"] = "Duplicate the item at the top of the stack, inserting it below the second-to-top item. (E.g. [a, b] -> [b, a, b])";
    OpcodeDescriptionsCommon["OP_CAT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this concatenated two stack items.)";
    OpcodeDescriptionsCommon["OP_SUBSTR"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned a section of a stack item.)";
    OpcodeDescriptionsCommon["OP_LEFT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned a section to the left of a point in a stack item.)";
    OpcodeDescriptionsCommon["OP_RIGHT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned a section to the right of a point in a stack item.)";
    OpcodeDescriptionsCommon["OP_SIZE"] = "Push the byte-length of the top stack item as a Script Number.";
    OpcodeDescriptionsCommon["OP_INVERT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this flipped all the bits in a stack item.)";
    OpcodeDescriptionsCommon["OP_AND"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean AND on each bit in two stack items.)";
    OpcodeDescriptionsCommon["OP_OR"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean OR on each bit in two stack items.)";
    OpcodeDescriptionsCommon["OP_XOR"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean XOR on each bit in two stack items.)";
    OpcodeDescriptionsCommon["OP_EQUAL"] = "Pop the top two items from the stack and compare them byte-by-byte. If they are the same, push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_EQUALVERIFY"] = "Pop the top two items from the stack and compare them byte-by-byte. If the values are different, error. (This operation is a combination of OP_EQUAL followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_RESERVED1"] = "Error unless found in an unexecuted conditional branch. Note: OP_RESERVED1 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_RESERVED2"] = "Error unless found in an unexecuted conditional branch. Note: OP_RESERVED2 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_1ADD"] = "Pop the top item from the stack as a Script Number, add 1, then push the result.";
    OpcodeDescriptionsCommon["OP_1SUB"] = "Pop the top item from the stack as a Script Number, subtract 1, then push the result.";
    OpcodeDescriptionsCommon["OP_2MUL"] = "Error, even when found in an unexecuted conditional branch. (Historically, this multiplied a Script Number by 2.)";
    OpcodeDescriptionsCommon["OP_2DIV"] = "Error, even when found in an unexecuted conditional branch. (Historically, this divided a Script Number by 2.)";
    OpcodeDescriptionsCommon["OP_NEGATE"] = "Pop the top item from the stack as a Script Number, negate it, then push the result.";
    OpcodeDescriptionsCommon["OP_ABS"] = "Pop the top item from the stack as a Script Number, take its absolute value, then push the result.";
    OpcodeDescriptionsCommon["OP_NOT"] = "Pop the top item from the stack as a Script Number. If its value is 0, push a Script Number 1, otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_0NOTEQUAL"] = "Pop the top item from the stack as a Script Number. If its value is not 0, push a Script Number 1, otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_ADD"] = "Pop the top two items from the stack as Script Numbers. Add them, then push the result.";
    OpcodeDescriptionsCommon["OP_SUB"] = "Pop the top two items from the stack as Script Numbers. Subtract the top item from the second item, then push the result.";
    OpcodeDescriptionsCommon["OP_MUL"] = "Error, even when found in an unexecuted conditional branch. (Historically, this multiplied two Script Numbers.)";
    OpcodeDescriptionsCommon["OP_DIV"] = "Error, even when found in an unexecuted conditional branch. (Historically, this divided two Script Numbers.)";
    OpcodeDescriptionsCommon["OP_MOD"] = "Error, even when found in an unexecuted conditional branch. (Historically, this returned the remainder after dividing one Script Number by another.)";
    OpcodeDescriptionsCommon["OP_LSHIFT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a sign-preserving, left bit shift.)";
    OpcodeDescriptionsCommon["OP_RSHIFT"] = "Error, even when found in an unexecuted conditional branch. (Historically, this performed a sign-preserving, right bit shift.)";
    OpcodeDescriptionsCommon["OP_BOOLAND"] = "Pop the top two items from the stack as Script Numbers. If neither value is a Script Number 0, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_BOOLOR"] = "Pop the top two items from the stack as Script Numbers. If either value is a Script Number 1, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_NUMEQUAL"] = "Pop the top two items from the stack as Script Numbers. If the values are equal, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_NUMEQUALVERIFY"] = "Pop the top two items from the stack as Script Numbers. If the values are different, error. (This operation is a combination of OP_NUMEQUAL followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_NUMNOTEQUAL"] = "Pop the top two items from the stack as Script Numbers. If the values are not equal, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_LESSTHAN"] = "Pop the top two items from the stack as Script Numbers. If the second item is less than top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_GREATERTHAN"] = "Pop the top two items from the stack as Script Numbers. If the second item is greater than top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_LESSTHANOREQUAL"] = "Pop the top two items from the stack as Script Numbers. If the second item is less than or equal to the top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_GREATERTHANOREQUAL"] = "Pop the top two items from the stack as Script Numbers. If the second item is greater than or equal to the top item, push a Script Number 1. Otherwise, push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_MIN"] = "Pop the top two items from the stack as Script Numbers. Push the smaller of the two numbers.";
    OpcodeDescriptionsCommon["OP_MAX"] = "Pop the top two items from the stack as Script Numbers. Push the larger of the two numbers.";
    OpcodeDescriptionsCommon["OP_WITHIN"] = "Pop the top three items from the stack as Script Numbers. If the top number is within the range defined by the following two numbers (left-inclusive), push a Script Number 1. Otherwise, push a Script Number 0. (E.g. for [a, b, c]: if (b <= a), and (a < c), [1]. Else [0].)";
    OpcodeDescriptionsCommon["OP_RIPEMD160"] = "Pop the top item from the stack and pass it through ripemd160, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_SHA1"] = "Pop the top item from the stack and pass it through sha1, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_SHA256"] = "Pop the top item from the stack and pass it through sha256, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_HASH160"] = "Pop the top item from the stack and pass it through sha256, then ripemd160, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_HASH256"] = "Pop the top item from the stack and pass it through sha256 twice, pushing the result onto the stack.";
    OpcodeDescriptionsCommon["OP_CODESEPARATOR"] = "Update the value of lastCodeSeparator to the instruction pointer's current value. (This reduces the coverage of signing serializations used in signature verification operations.)";
    OpcodeDescriptionsCommon["OP_CHECKSIG"] = "Pop the top two items from the stack. Treat the top as a signature and the second as a public key. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_CHECKSIGVERIFY"] = "Pop the top two items from the stack. Treat the top as a signature and the second as a public key. If the signature is not valid, error. (This operation is a combination of OP_CHECKSIG followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_CHECKMULTISIG"] = "Pop items from the stack: first pop the Script Number of public keys, then pop each of those public keys. Next, pop the Script Number of required signatures, then pop each of those signatures. Finally, pop a final Script Number which must be 0 due to a protocol bug. Checking each signature against each public key in order, if all signatures are valid \u2013 and the required number of signatures have been provided \u2013 push a Script Number 1, otherwise push a Script Number 0.";
    OpcodeDescriptionsCommon["OP_CHECKMULTISIGVERIFY"] = "Pop items from the stack: first pop the Script Number of public keys, then pop each of those public keys. Next, pop the Script Number of required signatures, then pop each of those signatures. Finally, (due to a protocol bug) pop an unused final Script Number which must be 0. Checking each signature against each public key in order, if any signatures are invalid \u2013 or the required number of signatures have not been provided \u2013 error. (This operation is a combination of OP_CHECKMULTISIG followed by OP_VERIFY.)";
    OpcodeDescriptionsCommon["OP_NOP1"] = "No operation (reserved for future expansion). Note: OP_NOP1 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_CHECKLOCKTIMEVERIFY"] = "Verify the transaction occurs after an absolute block time or height: read the top item on the stack as a Script Number (without removing it), and compare it to the transaction's locktime. If the required locktime has not passed, or if locktime has been disabled for this input by a maximized sequence number, error.";
    OpcodeDescriptionsCommon["OP_CHECKSEQUENCEVERIFY"] = "Verify the transaction occurs after the output being spent has \"aged\" by a relative block time or block height since it was created: read the top item on the stack as a Script Number (without removing it), and compare it to the age encoded in the input's sequence number. If the required relative locktime has not passed, or if relative locktime has been disabled by the sequence number or the transaction version, error.";
    OpcodeDescriptionsCommon["OP_NOP4"] = "No operation (reserved for future expansion). Note: OP_NOP4 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP6"] = "No operation (reserved for future expansion). Note: OP_NOP6 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP5"] = "No operation (reserved for future expansion). Note: OP_NOP5 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP7"] = "No operation (reserved for future expansion). Note: OP_NOP7 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP8"] = "No operation (reserved for future expansion). Note: OP_NOP8 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP9"] = "No operation (reserved for future expansion). Note: OP_NOP9 counts toward the opcode limit.";
    OpcodeDescriptionsCommon["OP_NOP10"] = "No operation (reserved for future expansion). Note: OP_NOP10 counts toward the opcode limit.";
})(OpcodeDescriptionsCommon || (OpcodeDescriptionsCommon = {}));
//# sourceMappingURL=descriptions.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/encoding.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export decodeBitcoinSignature [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidCompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidSignatureEncodingBCHTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidSignatureEncodingDER [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidUncompressedPublicKeyEncoding [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isValidUncompressedPublicKeyEncoding": () => /* binding */ isValidUncompressedPublicKeyEncoding,
/* harmony export */   "isValidCompressedPublicKeyEncoding": () => /* binding */ isValidCompressedPublicKeyEncoding,
/* harmony export */   "isValidPublicKeyEncoding": () => /* binding */ isValidPublicKeyEncoding,
/* harmony export */   "isValidSignatureEncodingDER": () => /* binding */ isValidSignatureEncodingDER,
/* harmony export */   "isValidSignatureEncodingBCHTransaction": () => /* binding */ isValidSignatureEncodingBCHTransaction,
/* harmony export */   "decodeBitcoinSignature": () => /* binding */ decodeBitcoinSignature
/* harmony export */ });
/* harmony import */ var _bch_bch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bch/bch */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js");
/* harmony import */ var _signing_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signing-serialization */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js");


const isValidUncompressedPublicKeyEncoding = (publicKey) => publicKey.length === 65 /* uncompressedByteLength */ &&
    publicKey[0] === 4 /* uncompressedHeaderByte */;
const isValidCompressedPublicKeyEncoding = (publicKey) => publicKey.length === 33 /* compressedByteLength */ &&
    (publicKey[0] === 2 /* compressedHeaderByteEven */ ||
        publicKey[0] === 3 /* compressedHeaderByteOdd */);
const isValidPublicKeyEncoding = (publicKey) => isValidCompressedPublicKeyEncoding(publicKey) ||
    isValidUncompressedPublicKeyEncoding(publicKey);
const isNegative = (value) => 
// eslint-disable-next-line no-bitwise
(value & 128 /* negative */) !== 0;
const hasUnnecessaryPadding = (length, firstByte, secondByte) => length > 1 && firstByte === 0 && !isNegative(secondByte);
const isValidInteger = (signature, tagIndex, length, valueIndex
// eslint-disable-next-line max-params
) => signature[tagIndex] === 2 /* integerTagType */ &&
    length !== 0 &&
    !isNegative(signature[valueIndex]) &&
    !hasUnnecessaryPadding(length, signature[valueIndex], signature[valueIndex + 1]);
/**
 * Validate a DER-encoded signature.
 *
 * @remarks
 * This function is consensus-critical since BIP66, but differs from the BIP66
 * specification in that it does not validate the existence of a signing
 * serialization type byte at the end of the signature (to support
 * OP_CHECKDATASIG). To validate a bitcoin-encoded signature (including null
 * signatures), use `isValidSignatureEncodingBCH`.
 *
 * @privateRemarks
 * From the Bitcoin ABC C++ implementation:
 *
 * Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]
 * total-length: 1-byte length descriptor of everything that follows,
 * excluding the sighash byte.
 * R-length: 1-byte length descriptor of the R value that follows.
 * R: arbitrary-length big-endian encoded R value. It must use the
 * shortest possible encoding for a positive integers (which means no null
 * bytes at the start, except a single one when the next byte has its highest
 * bit set).
 * S-length: 1-byte length descriptor of the S value that follows.
 * S: arbitrary-length big-endian encoded S value. The same rules apply.
 */
// eslint-disable-next-line complexity
const isValidSignatureEncodingDER = (signature) => {
    const correctLengthRange = signature.length > 8 /* minimumLength */ &&
        signature.length < 72 /* maximumLength */;
    const correctSequenceTagType = signature[0 /* sequenceTagIndex */] === 48 /* sequenceTagType */;
    const correctSequenceLength = signature[1 /* sequenceLengthIndex */] ===
        signature.length - 2 /* sequenceMetadataBytes */;
    const rLength = signature[3 /* rLengthIndex */];
    if (rLength === undefined) {
        return false;
    }
    const consistentRLength = rLength <= signature.length - 7 /* minimumNonRValueBytes */;
    const rIsValid = isValidInteger(signature, 2 /* rTagIndex */, rLength, 4 /* rValueIndex */);
    const sTagIndex = 4 /* rValueIndex */ + rLength; // eslint-disable-line @typescript-eslint/restrict-plus-operands
    const sLengthIndex = sTagIndex + 1;
    const sLength = signature[sLengthIndex];
    if (sLength === undefined) {
        return false;
    }
    const sValueIndex = sLengthIndex + 1;
    const consistentSLength = sValueIndex + sLength === signature.length;
    const sIsValid = isValidInteger(signature, sTagIndex, sLength, sValueIndex);
    return (correctLengthRange &&
        correctSequenceTagType &&
        correctSequenceLength &&
        consistentRLength &&
        rIsValid &&
        consistentSLength &&
        sIsValid);
};
/**
 * Validate the encoding of a transaction signature, including a signing
 * serialization type byte (A.K.A. "sighash" byte).
 *
 * @param transactionSignature - the full transaction signature
 */
const isValidSignatureEncodingBCHTransaction = (transactionSignature) => transactionSignature.length === 0 ||
    transactionSignature.length === _bch_bch__WEBPACK_IMPORTED_MODULE_0__.ConsensusBCH.schnorrSignatureLength + 1 ||
    ((0,_signing_serialization__WEBPACK_IMPORTED_MODULE_1__.isDefinedSigningSerializationType)(transactionSignature[transactionSignature.length - 1]) &&
        isValidSignatureEncodingDER(transactionSignature.slice(0, transactionSignature.length - 1)));
/**
 * Split a bitcoin-encoded signature into a signature and signing serialization
 * type.
 *
 * While a bitcoin-encoded signature only includes a single byte to encode the
 * signing serialization type, a 3-byte forkId can be appended to the signing
 * serialization to provide replay-protection between different forks. (See
 * Bitcoin Cash's Replay Protected Sighash spec for details.)
 *
 * @param signature - a signature which passes `isValidSignatureEncoding`
 */
const decodeBitcoinSignature = (encodedSignature) => ({
    signature: encodedSignature.slice(0, encodedSignature.length - 1),
    signingSerializationType: new Uint8Array([
        encodedSignature[encodedSignature.length - 1],
    ]),
});
//# sourceMappingURL=encoding.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! export applyError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthenticationErrorCommon": () => /* binding */ AuthenticationErrorCommon,
/* harmony export */   "applyError": () => /* binding */ applyError
/* harmony export */ });
var AuthenticationErrorCommon;
(function (AuthenticationErrorCommon) {
    AuthenticationErrorCommon["calledReserved"] = "Program called an unassigned, reserved operation.";
    AuthenticationErrorCommon["calledReturn"] = "Program called an OP_RETURN operation.";
    AuthenticationErrorCommon["calledUpgradableNop"] = "Program called a disallowed upgradable non-operation (OP_NOP1-OP_NOP10).";
    AuthenticationErrorCommon["checkSequenceUnavailable"] = "Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher.";
    AuthenticationErrorCommon["disabledOpcode"] = "Program contains a disabled opcode.";
    AuthenticationErrorCommon["emptyAlternateStack"] = "Tried to read from an empty alternate stack.";
    AuthenticationErrorCommon["emptyStack"] = "Tried to read from an empty stack.";
    AuthenticationErrorCommon["exceededMaximumBytecodeLengthLocking"] = "The provided locking bytecode exceeds the maximum bytecode length (10,000 bytes).";
    AuthenticationErrorCommon["exceededMaximumBytecodeLengthUnlocking"] = "The provided unlocking bytecode exceeds the maximum bytecode length (10,000 bytes).";
    AuthenticationErrorCommon["exceededMaximumStackDepth"] = "Program exceeded the maximum stack depth (1,000 items).";
    AuthenticationErrorCommon["exceededMaximumOperationCount"] = "Program exceeded the maximum operation count (201 operations).";
    AuthenticationErrorCommon["exceedsMaximumMultisigPublicKeyCount"] = "Program called an OP_CHECKMULTISIG which exceeds the maximum public key count (20 public keys).";
    AuthenticationErrorCommon["exceedsMaximumPush"] = "Push exceeds the push size limit of 520 bytes.";
    AuthenticationErrorCommon["failedVerify"] = "Program failed an OP_VERIFY operation.";
    AuthenticationErrorCommon["invalidStackIndex"] = "Tried to read from an invalid stack index.";
    AuthenticationErrorCommon["incompatibleLocktimeType"] = "Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time.";
    AuthenticationErrorCommon["incompatibleSequenceType"] = "Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type.";
    AuthenticationErrorCommon["insufficientPublicKeys"] = "Program called an OP_CHECKMULTISIG operation which requires signatures from more public keys than are provided.";
    AuthenticationErrorCommon["invalidNaturalNumber"] = "Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0).";
    AuthenticationErrorCommon["invalidProtocolBugValue"] = "The OP_CHECKMULTISIG protocol bug value must be a Script Number 0 (to comply with the \"NULLDUMMY\" rule).";
    AuthenticationErrorCommon["invalidPublicKeyEncoding"] = "Encountered an improperly encoded public key.";
    AuthenticationErrorCommon["invalidScriptNumber"] = "Invalid input: this operation requires a valid Script Number.";
    AuthenticationErrorCommon["invalidSignatureEncoding"] = "Encountered an improperly encoded signature.";
    AuthenticationErrorCommon["locktimeDisabled"] = "Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction.";
    AuthenticationErrorCommon["malformedLockingBytecode"] = "The provided locking bytecode is malformed.";
    AuthenticationErrorCommon["malformedPush"] = "Program must be long enough to push the requested number of bytes.";
    AuthenticationErrorCommon["malformedUnlockingBytecode"] = "The provided unlocking bytecode is malformed.";
    AuthenticationErrorCommon["negativeLocktime"] = "Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime.";
    AuthenticationErrorCommon["nonEmptyExecutionStack"] = "Program completed with a non-empty execution stack (missing `OP_ENDIF`).";
    AuthenticationErrorCommon["nonMinimalPush"] = "Push operations must use the smallest possible encoding.";
    AuthenticationErrorCommon["nonNullSignatureFailure"] = "Program failed a signature verification with a non-null signature (violating the \"NULLFAIL\" rule).";
    AuthenticationErrorCommon["requiresCleanStack"] = "Program completed with an unexpected number of items on the stack (must be exactly 1).";
    AuthenticationErrorCommon["schnorrSizedSignatureInCheckMultiSig"] = "Program used a schnorr-sized signature (65 bytes) in an OP_CHECKMULTISIG operation.";
    AuthenticationErrorCommon["unexpectedElse"] = "Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.";
    AuthenticationErrorCommon["unexpectedEndIf"] = "Encountered an OP_ENDIF which is not following a matching OP_IF.";
    AuthenticationErrorCommon["unknownOpcode"] = "Called an unknown opcode.";
    AuthenticationErrorCommon["unmatchedSequenceDisable"] = "Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag.";
    AuthenticationErrorCommon["unsatisfiedLocktime"] = "Program called an OP_CHECKLOCKTIMEVERIFY operation which requires a locktime greater than the transaction's locktime.";
    AuthenticationErrorCommon["unsatisfiedSequenceNumber"] = "Program called an OP_CHECKSEQUENCEVERIFY operation which requires a sequence number greater than the input's sequence number.";
    AuthenticationErrorCommon["unsuccessfulEvaluation"] = "Unsuccessful evaluation: completed with a non-truthy value on top of the stack.";
})(AuthenticationErrorCommon || (AuthenticationErrorCommon = {}));
/**
 * Applies the `error` to a `state`.
 *
 * @remarks
 * If the state already has an error, this method does not override it.
 * (Evaluation should end after the first encountered error, so further errors
 * aren't relevant.)
 */
const applyError = (error, state) => ({
    ...state,
    error: state.error === undefined ? error : state.error,
});
//# sourceMappingURL=errors.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/flow-control.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export conditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opElse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opEndIf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opIf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNotIf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opReturn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reservedOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unconditionalFlowControlOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opVerify": () => /* binding */ opVerify,
/* harmony export */   "reservedOperation": () => /* binding */ reservedOperation,
/* harmony export */   "opReturn": () => /* binding */ opReturn,
/* harmony export */   "conditionalFlowControlOperations": () => /* binding */ conditionalFlowControlOperations,
/* harmony export */   "opIf": () => /* binding */ opIf,
/* harmony export */   "opNotIf": () => /* binding */ opNotIf,
/* harmony export */   "opEndIf": () => /* binding */ opEndIf,
/* harmony export */   "opElse": () => /* binding */ opElse,
/* harmony export */   "unconditionalFlowControlOperations": () => /* binding */ unconditionalFlowControlOperations
/* harmony export */ });
/* harmony import */ var _arithmetic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arithmetic */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/arithmetic.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");





const opVerify = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_1__.useOneStackItem)(state, (nextState, [item]) => (0,_common__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy)(item)
    ? nextState
    : (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.failedVerify, nextState));
const reservedOperation = () => (state) => (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.calledReserved, state);
const opReturn = () => (state) => (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.calledReturn, state);
const conditionalFlowControlOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RESERVED]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VER]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VERIFY]: opVerify(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RETURN]: opReturn(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RESERVED1]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_RESERVED2]: reservedOperation(),
});
const opIf = () => (state) => {
    if (state.executionStack.every((item) => item)) {
        // eslint-disable-next-line functional/immutable-data
        const element = state.stack.pop();
        if (element === undefined) {
            return (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.emptyStack, state);
        }
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        state.executionStack.push((0,_common__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy)(element));
        return state;
    }
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.executionStack.push(false);
    return state;
};
const opNotIf = (flags) => {
    const not = (0,_combinators__WEBPACK_IMPORTED_MODULE_1__.conditionallyEvaluate)((0,_arithmetic__WEBPACK_IMPORTED_MODULE_0__.opNot)(flags));
    const ifOp = opIf();
    return (state) => ifOp(not(state));
};
const opEndIf = () => (state) => {
    // eslint-disable-next-line functional/immutable-data
    const element = state.executionStack.pop();
    if (element === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.unexpectedEndIf, state);
    }
    return state;
};
const opElse = () => (state) => {
    const top = state.executionStack[state.executionStack.length - 1];
    if (top === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.unexpectedElse, state);
    }
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    state.executionStack[state.executionStack.length - 1] = !top;
    return state;
};
const unconditionalFlowControlOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_IF]: opIf(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_NOTIF]: opNotIf(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VERIF]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_VERNOTIF]: reservedOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_ELSE]: opElse(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_ENDIF]: opEndIf(),
});
//# sourceMappingURL=flow-control.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/nop.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export disabledOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disabledOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNop [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opNop": () => /* binding */ opNop,
/* harmony export */   "nonOperations": () => /* binding */ nonOperations,
/* harmony export */   "disabledOperation": () => /* binding */ disabledOperation,
/* harmony export */   "disabledOperations": () => /* binding */ disabledOperations
/* harmony export */ });
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");


const opNop = (flags) => (state) => flags.disallowUpgradableNops
    ? (0,_errors__WEBPACK_IMPORTED_MODULE_0__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.calledUpgradableNop, state)
    : state;
const nonOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP1]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP4]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP5]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP6]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP7]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP8]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP9]: opNop(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_NOP10]: opNop(flags),
});
/**
 * "Disabled" operations are explicitly forbidden from occurring anywhere in a
 * script, even within an unexecuted branch.
 */
const disabledOperation = () => (state) => (0,_errors__WEBPACK_IMPORTED_MODULE_0__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_0__.AuthenticationErrorCommon.unknownOpcode, state);
const disabledOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_CAT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_SUBSTR]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_LEFT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_RIGHT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_INVERT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_AND]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_OR]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_XOR]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_2MUL]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_2DIV]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_MUL]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_DIV]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_MOD]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_LSHIFT]: disabledOperation(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_RSHIFT]: disabledOperation(),
});
//# sourceMappingURL=nop.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export OpcodesCommon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesCommon": () => /* binding */ OpcodesCommon
/* harmony export */ });
var OpcodesCommon;
(function (OpcodesCommon) {
    /**
     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`
     */
    OpcodesCommon[OpcodesCommon["OP_0"] = 0] = "OP_0";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_1"] = 1] = "OP_PUSHBYTES_1";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_2"] = 2] = "OP_PUSHBYTES_2";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_3"] = 3] = "OP_PUSHBYTES_3";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_4"] = 4] = "OP_PUSHBYTES_4";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_5"] = 5] = "OP_PUSHBYTES_5";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_6"] = 6] = "OP_PUSHBYTES_6";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_7"] = 7] = "OP_PUSHBYTES_7";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_8"] = 8] = "OP_PUSHBYTES_8";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_9"] = 9] = "OP_PUSHBYTES_9";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_10"] = 10] = "OP_PUSHBYTES_10";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_11"] = 11] = "OP_PUSHBYTES_11";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_12"] = 12] = "OP_PUSHBYTES_12";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_13"] = 13] = "OP_PUSHBYTES_13";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_14"] = 14] = "OP_PUSHBYTES_14";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_15"] = 15] = "OP_PUSHBYTES_15";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_16"] = 16] = "OP_PUSHBYTES_16";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_17"] = 17] = "OP_PUSHBYTES_17";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_18"] = 18] = "OP_PUSHBYTES_18";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_19"] = 19] = "OP_PUSHBYTES_19";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_20"] = 20] = "OP_PUSHBYTES_20";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_21"] = 21] = "OP_PUSHBYTES_21";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_22"] = 22] = "OP_PUSHBYTES_22";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_23"] = 23] = "OP_PUSHBYTES_23";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_24"] = 24] = "OP_PUSHBYTES_24";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_25"] = 25] = "OP_PUSHBYTES_25";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_26"] = 26] = "OP_PUSHBYTES_26";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_27"] = 27] = "OP_PUSHBYTES_27";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_28"] = 28] = "OP_PUSHBYTES_28";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_29"] = 29] = "OP_PUSHBYTES_29";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_30"] = 30] = "OP_PUSHBYTES_30";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_31"] = 31] = "OP_PUSHBYTES_31";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_32"] = 32] = "OP_PUSHBYTES_32";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_33"] = 33] = "OP_PUSHBYTES_33";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_34"] = 34] = "OP_PUSHBYTES_34";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_35"] = 35] = "OP_PUSHBYTES_35";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_36"] = 36] = "OP_PUSHBYTES_36";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_37"] = 37] = "OP_PUSHBYTES_37";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_38"] = 38] = "OP_PUSHBYTES_38";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_39"] = 39] = "OP_PUSHBYTES_39";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_40"] = 40] = "OP_PUSHBYTES_40";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_41"] = 41] = "OP_PUSHBYTES_41";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_42"] = 42] = "OP_PUSHBYTES_42";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_43"] = 43] = "OP_PUSHBYTES_43";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_44"] = 44] = "OP_PUSHBYTES_44";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_45"] = 45] = "OP_PUSHBYTES_45";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_46"] = 46] = "OP_PUSHBYTES_46";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_47"] = 47] = "OP_PUSHBYTES_47";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_48"] = 48] = "OP_PUSHBYTES_48";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_49"] = 49] = "OP_PUSHBYTES_49";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_50"] = 50] = "OP_PUSHBYTES_50";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_51"] = 51] = "OP_PUSHBYTES_51";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_52"] = 52] = "OP_PUSHBYTES_52";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_53"] = 53] = "OP_PUSHBYTES_53";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_54"] = 54] = "OP_PUSHBYTES_54";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_55"] = 55] = "OP_PUSHBYTES_55";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_56"] = 56] = "OP_PUSHBYTES_56";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_57"] = 57] = "OP_PUSHBYTES_57";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_58"] = 58] = "OP_PUSHBYTES_58";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_59"] = 59] = "OP_PUSHBYTES_59";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_60"] = 60] = "OP_PUSHBYTES_60";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_61"] = 61] = "OP_PUSHBYTES_61";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_62"] = 62] = "OP_PUSHBYTES_62";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_63"] = 63] = "OP_PUSHBYTES_63";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_64"] = 64] = "OP_PUSHBYTES_64";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_65"] = 65] = "OP_PUSHBYTES_65";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_66"] = 66] = "OP_PUSHBYTES_66";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_67"] = 67] = "OP_PUSHBYTES_67";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_68"] = 68] = "OP_PUSHBYTES_68";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_69"] = 69] = "OP_PUSHBYTES_69";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_70"] = 70] = "OP_PUSHBYTES_70";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_71"] = 71] = "OP_PUSHBYTES_71";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_72"] = 72] = "OP_PUSHBYTES_72";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_73"] = 73] = "OP_PUSHBYTES_73";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_74"] = 74] = "OP_PUSHBYTES_74";
    OpcodesCommon[OpcodesCommon["OP_PUSHBYTES_75"] = 75] = "OP_PUSHBYTES_75";
    OpcodesCommon[OpcodesCommon["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    OpcodesCommon[OpcodesCommon["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    OpcodesCommon[OpcodesCommon["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    OpcodesCommon[OpcodesCommon["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    OpcodesCommon[OpcodesCommon["OP_RESERVED"] = 80] = "OP_RESERVED";
    /**
     * A.K.A. `OP_TRUE`
     */
    OpcodesCommon[OpcodesCommon["OP_1"] = 81] = "OP_1";
    OpcodesCommon[OpcodesCommon["OP_2"] = 82] = "OP_2";
    OpcodesCommon[OpcodesCommon["OP_3"] = 83] = "OP_3";
    OpcodesCommon[OpcodesCommon["OP_4"] = 84] = "OP_4";
    OpcodesCommon[OpcodesCommon["OP_5"] = 85] = "OP_5";
    OpcodesCommon[OpcodesCommon["OP_6"] = 86] = "OP_6";
    OpcodesCommon[OpcodesCommon["OP_7"] = 87] = "OP_7";
    OpcodesCommon[OpcodesCommon["OP_8"] = 88] = "OP_8";
    OpcodesCommon[OpcodesCommon["OP_9"] = 89] = "OP_9";
    OpcodesCommon[OpcodesCommon["OP_10"] = 90] = "OP_10";
    OpcodesCommon[OpcodesCommon["OP_11"] = 91] = "OP_11";
    OpcodesCommon[OpcodesCommon["OP_12"] = 92] = "OP_12";
    OpcodesCommon[OpcodesCommon["OP_13"] = 93] = "OP_13";
    OpcodesCommon[OpcodesCommon["OP_14"] = 94] = "OP_14";
    OpcodesCommon[OpcodesCommon["OP_15"] = 95] = "OP_15";
    OpcodesCommon[OpcodesCommon["OP_16"] = 96] = "OP_16";
    OpcodesCommon[OpcodesCommon["OP_NOP"] = 97] = "OP_NOP";
    OpcodesCommon[OpcodesCommon["OP_VER"] = 98] = "OP_VER";
    OpcodesCommon[OpcodesCommon["OP_IF"] = 99] = "OP_IF";
    OpcodesCommon[OpcodesCommon["OP_NOTIF"] = 100] = "OP_NOTIF";
    OpcodesCommon[OpcodesCommon["OP_VERIF"] = 101] = "OP_VERIF";
    OpcodesCommon[OpcodesCommon["OP_VERNOTIF"] = 102] = "OP_VERNOTIF";
    OpcodesCommon[OpcodesCommon["OP_ELSE"] = 103] = "OP_ELSE";
    OpcodesCommon[OpcodesCommon["OP_ENDIF"] = 104] = "OP_ENDIF";
    OpcodesCommon[OpcodesCommon["OP_VERIFY"] = 105] = "OP_VERIFY";
    OpcodesCommon[OpcodesCommon["OP_RETURN"] = 106] = "OP_RETURN";
    OpcodesCommon[OpcodesCommon["OP_TOALTSTACK"] = 107] = "OP_TOALTSTACK";
    OpcodesCommon[OpcodesCommon["OP_FROMALTSTACK"] = 108] = "OP_FROMALTSTACK";
    OpcodesCommon[OpcodesCommon["OP_2DROP"] = 109] = "OP_2DROP";
    OpcodesCommon[OpcodesCommon["OP_2DUP"] = 110] = "OP_2DUP";
    OpcodesCommon[OpcodesCommon["OP_3DUP"] = 111] = "OP_3DUP";
    OpcodesCommon[OpcodesCommon["OP_2OVER"] = 112] = "OP_2OVER";
    OpcodesCommon[OpcodesCommon["OP_2ROT"] = 113] = "OP_2ROT";
    OpcodesCommon[OpcodesCommon["OP_2SWAP"] = 114] = "OP_2SWAP";
    OpcodesCommon[OpcodesCommon["OP_IFDUP"] = 115] = "OP_IFDUP";
    OpcodesCommon[OpcodesCommon["OP_DEPTH"] = 116] = "OP_DEPTH";
    OpcodesCommon[OpcodesCommon["OP_DROP"] = 117] = "OP_DROP";
    OpcodesCommon[OpcodesCommon["OP_DUP"] = 118] = "OP_DUP";
    OpcodesCommon[OpcodesCommon["OP_NIP"] = 119] = "OP_NIP";
    OpcodesCommon[OpcodesCommon["OP_OVER"] = 120] = "OP_OVER";
    OpcodesCommon[OpcodesCommon["OP_PICK"] = 121] = "OP_PICK";
    OpcodesCommon[OpcodesCommon["OP_ROLL"] = 122] = "OP_ROLL";
    OpcodesCommon[OpcodesCommon["OP_ROT"] = 123] = "OP_ROT";
    OpcodesCommon[OpcodesCommon["OP_SWAP"] = 124] = "OP_SWAP";
    OpcodesCommon[OpcodesCommon["OP_TUCK"] = 125] = "OP_TUCK";
    OpcodesCommon[OpcodesCommon["OP_CAT"] = 126] = "OP_CAT";
    OpcodesCommon[OpcodesCommon["OP_SUBSTR"] = 127] = "OP_SUBSTR";
    OpcodesCommon[OpcodesCommon["OP_LEFT"] = 128] = "OP_LEFT";
    OpcodesCommon[OpcodesCommon["OP_RIGHT"] = 129] = "OP_RIGHT";
    OpcodesCommon[OpcodesCommon["OP_SIZE"] = 130] = "OP_SIZE";
    OpcodesCommon[OpcodesCommon["OP_INVERT"] = 131] = "OP_INVERT";
    OpcodesCommon[OpcodesCommon["OP_AND"] = 132] = "OP_AND";
    OpcodesCommon[OpcodesCommon["OP_OR"] = 133] = "OP_OR";
    OpcodesCommon[OpcodesCommon["OP_XOR"] = 134] = "OP_XOR";
    OpcodesCommon[OpcodesCommon["OP_EQUAL"] = 135] = "OP_EQUAL";
    OpcodesCommon[OpcodesCommon["OP_EQUALVERIFY"] = 136] = "OP_EQUALVERIFY";
    OpcodesCommon[OpcodesCommon["OP_RESERVED1"] = 137] = "OP_RESERVED1";
    OpcodesCommon[OpcodesCommon["OP_RESERVED2"] = 138] = "OP_RESERVED2";
    OpcodesCommon[OpcodesCommon["OP_1ADD"] = 139] = "OP_1ADD";
    OpcodesCommon[OpcodesCommon["OP_1SUB"] = 140] = "OP_1SUB";
    OpcodesCommon[OpcodesCommon["OP_2MUL"] = 141] = "OP_2MUL";
    OpcodesCommon[OpcodesCommon["OP_2DIV"] = 142] = "OP_2DIV";
    OpcodesCommon[OpcodesCommon["OP_NEGATE"] = 143] = "OP_NEGATE";
    OpcodesCommon[OpcodesCommon["OP_ABS"] = 144] = "OP_ABS";
    OpcodesCommon[OpcodesCommon["OP_NOT"] = 145] = "OP_NOT";
    OpcodesCommon[OpcodesCommon["OP_0NOTEQUAL"] = 146] = "OP_0NOTEQUAL";
    OpcodesCommon[OpcodesCommon["OP_ADD"] = 147] = "OP_ADD";
    OpcodesCommon[OpcodesCommon["OP_SUB"] = 148] = "OP_SUB";
    OpcodesCommon[OpcodesCommon["OP_MUL"] = 149] = "OP_MUL";
    OpcodesCommon[OpcodesCommon["OP_DIV"] = 150] = "OP_DIV";
    OpcodesCommon[OpcodesCommon["OP_MOD"] = 151] = "OP_MOD";
    OpcodesCommon[OpcodesCommon["OP_LSHIFT"] = 152] = "OP_LSHIFT";
    OpcodesCommon[OpcodesCommon["OP_RSHIFT"] = 153] = "OP_RSHIFT";
    OpcodesCommon[OpcodesCommon["OP_BOOLAND"] = 154] = "OP_BOOLAND";
    OpcodesCommon[OpcodesCommon["OP_BOOLOR"] = 155] = "OP_BOOLOR";
    OpcodesCommon[OpcodesCommon["OP_NUMEQUAL"] = 156] = "OP_NUMEQUAL";
    OpcodesCommon[OpcodesCommon["OP_NUMEQUALVERIFY"] = 157] = "OP_NUMEQUALVERIFY";
    OpcodesCommon[OpcodesCommon["OP_NUMNOTEQUAL"] = 158] = "OP_NUMNOTEQUAL";
    OpcodesCommon[OpcodesCommon["OP_LESSTHAN"] = 159] = "OP_LESSTHAN";
    OpcodesCommon[OpcodesCommon["OP_GREATERTHAN"] = 160] = "OP_GREATERTHAN";
    OpcodesCommon[OpcodesCommon["OP_LESSTHANOREQUAL"] = 161] = "OP_LESSTHANOREQUAL";
    OpcodesCommon[OpcodesCommon["OP_GREATERTHANOREQUAL"] = 162] = "OP_GREATERTHANOREQUAL";
    OpcodesCommon[OpcodesCommon["OP_MIN"] = 163] = "OP_MIN";
    OpcodesCommon[OpcodesCommon["OP_MAX"] = 164] = "OP_MAX";
    OpcodesCommon[OpcodesCommon["OP_WITHIN"] = 165] = "OP_WITHIN";
    OpcodesCommon[OpcodesCommon["OP_RIPEMD160"] = 166] = "OP_RIPEMD160";
    OpcodesCommon[OpcodesCommon["OP_SHA1"] = 167] = "OP_SHA1";
    OpcodesCommon[OpcodesCommon["OP_SHA256"] = 168] = "OP_SHA256";
    OpcodesCommon[OpcodesCommon["OP_HASH160"] = 169] = "OP_HASH160";
    OpcodesCommon[OpcodesCommon["OP_HASH256"] = 170] = "OP_HASH256";
    OpcodesCommon[OpcodesCommon["OP_CODESEPARATOR"] = 171] = "OP_CODESEPARATOR";
    OpcodesCommon[OpcodesCommon["OP_CHECKSIG"] = 172] = "OP_CHECKSIG";
    OpcodesCommon[OpcodesCommon["OP_CHECKSIGVERIFY"] = 173] = "OP_CHECKSIGVERIFY";
    OpcodesCommon[OpcodesCommon["OP_CHECKMULTISIG"] = 174] = "OP_CHECKMULTISIG";
    OpcodesCommon[OpcodesCommon["OP_CHECKMULTISIGVERIFY"] = 175] = "OP_CHECKMULTISIGVERIFY";
    OpcodesCommon[OpcodesCommon["OP_NOP1"] = 176] = "OP_NOP1";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesCommon[OpcodesCommon["OP_CHECKLOCKTIMEVERIFY"] = 177] = "OP_CHECKLOCKTIMEVERIFY";
    /**
     * Previously `OP_NOP2`
     */
    OpcodesCommon[OpcodesCommon["OP_CHECKSEQUENCEVERIFY"] = 178] = "OP_CHECKSEQUENCEVERIFY";
    OpcodesCommon[OpcodesCommon["OP_NOP4"] = 179] = "OP_NOP4";
    OpcodesCommon[OpcodesCommon["OP_NOP5"] = 180] = "OP_NOP5";
    OpcodesCommon[OpcodesCommon["OP_NOP6"] = 181] = "OP_NOP6";
    OpcodesCommon[OpcodesCommon["OP_NOP7"] = 182] = "OP_NOP7";
    OpcodesCommon[OpcodesCommon["OP_NOP8"] = 183] = "OP_NOP8";
    OpcodesCommon[OpcodesCommon["OP_NOP9"] = 184] = "OP_NOP9";
    OpcodesCommon[OpcodesCommon["OP_NOP10"] = 185] = "OP_NOP10";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN186"] = 186] = "OP_UNKNOWN186";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN187"] = 187] = "OP_UNKNOWN187";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN188"] = 188] = "OP_UNKNOWN188";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN189"] = 189] = "OP_UNKNOWN189";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN190"] = 190] = "OP_UNKNOWN190";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN191"] = 191] = "OP_UNKNOWN191";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN192"] = 192] = "OP_UNKNOWN192";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN193"] = 193] = "OP_UNKNOWN193";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN194"] = 194] = "OP_UNKNOWN194";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN195"] = 195] = "OP_UNKNOWN195";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN196"] = 196] = "OP_UNKNOWN196";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN197"] = 197] = "OP_UNKNOWN197";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN198"] = 198] = "OP_UNKNOWN198";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN199"] = 199] = "OP_UNKNOWN199";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN200"] = 200] = "OP_UNKNOWN200";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN201"] = 201] = "OP_UNKNOWN201";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN202"] = 202] = "OP_UNKNOWN202";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN203"] = 203] = "OP_UNKNOWN203";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN204"] = 204] = "OP_UNKNOWN204";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN205"] = 205] = "OP_UNKNOWN205";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN206"] = 206] = "OP_UNKNOWN206";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN207"] = 207] = "OP_UNKNOWN207";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN208"] = 208] = "OP_UNKNOWN208";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN209"] = 209] = "OP_UNKNOWN209";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN210"] = 210] = "OP_UNKNOWN210";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN211"] = 211] = "OP_UNKNOWN211";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN212"] = 212] = "OP_UNKNOWN212";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN213"] = 213] = "OP_UNKNOWN213";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN214"] = 214] = "OP_UNKNOWN214";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN215"] = 215] = "OP_UNKNOWN215";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN216"] = 216] = "OP_UNKNOWN216";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN217"] = 217] = "OP_UNKNOWN217";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN218"] = 218] = "OP_UNKNOWN218";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN219"] = 219] = "OP_UNKNOWN219";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN220"] = 220] = "OP_UNKNOWN220";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN221"] = 221] = "OP_UNKNOWN221";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN222"] = 222] = "OP_UNKNOWN222";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN223"] = 223] = "OP_UNKNOWN223";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN224"] = 224] = "OP_UNKNOWN224";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN225"] = 225] = "OP_UNKNOWN225";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN226"] = 226] = "OP_UNKNOWN226";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN227"] = 227] = "OP_UNKNOWN227";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN228"] = 228] = "OP_UNKNOWN228";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN229"] = 229] = "OP_UNKNOWN229";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN230"] = 230] = "OP_UNKNOWN230";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN231"] = 231] = "OP_UNKNOWN231";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN232"] = 232] = "OP_UNKNOWN232";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN233"] = 233] = "OP_UNKNOWN233";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN234"] = 234] = "OP_UNKNOWN234";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN235"] = 235] = "OP_UNKNOWN235";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN236"] = 236] = "OP_UNKNOWN236";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN237"] = 237] = "OP_UNKNOWN237";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN238"] = 238] = "OP_UNKNOWN238";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN239"] = 239] = "OP_UNKNOWN239";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN240"] = 240] = "OP_UNKNOWN240";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN241"] = 241] = "OP_UNKNOWN241";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN242"] = 242] = "OP_UNKNOWN242";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN243"] = 243] = "OP_UNKNOWN243";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN244"] = 244] = "OP_UNKNOWN244";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN245"] = 245] = "OP_UNKNOWN245";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN246"] = 246] = "OP_UNKNOWN246";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN247"] = 247] = "OP_UNKNOWN247";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN248"] = 248] = "OP_UNKNOWN248";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN249"] = 249] = "OP_UNKNOWN249";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN250"] = 250] = "OP_UNKNOWN250";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN251"] = 251] = "OP_UNKNOWN251";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN252"] = 252] = "OP_UNKNOWN252";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN253"] = 253] = "OP_UNKNOWN253";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN254"] = 254] = "OP_UNKNOWN254";
    OpcodesCommon[OpcodesCommon["OP_UNKNOWN255"] = 255] = "OP_UNKNOWN255";
})(OpcodesCommon || (OpcodesCommon = {}));
//# sourceMappingURL=opcodes.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/push.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export PushOperationConstants [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeDataPush [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isMinimalDataPush [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushByteOpcodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushNumberOpcodes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushNumberOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushOperation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export pushOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PushOperationConstants": () => /* binding */ PushOperationConstants,
/* harmony export */   "encodeDataPush": () => /* binding */ encodeDataPush,
/* harmony export */   "isMinimalDataPush": () => /* binding */ isMinimalDataPush,
/* harmony export */   "pushByteOpcodes": () => /* binding */ pushByteOpcodes,
/* harmony export */   "pushOperation": () => /* binding */ pushOperation,
/* harmony export */   "pushOperations": () => /* binding */ pushOperations,
/* harmony export */   "pushNumberOpcodes": () => /* binding */ pushNumberOpcodes,
/* harmony export */   "pushNumberOperations": () => /* binding */ pushNumberOperations
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _format_hex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../format/hex */ "./node_modules/@bitauth/libauth/build/module/lib/format/hex.js");
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");






var PushOperationConstants;
(function (PushOperationConstants) {
    PushOperationConstants[PushOperationConstants["OP_0"] = 0] = "OP_0";
    /**
     * OP_PUSHBYTES_75
     */
    PushOperationConstants[PushOperationConstants["maximumPushByteOperationSize"] = 75] = "maximumPushByteOperationSize";
    PushOperationConstants[PushOperationConstants["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    PushOperationConstants[PushOperationConstants["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    PushOperationConstants[PushOperationConstants["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
    /**
     * OP_PUSHDATA_4
     */
    PushOperationConstants[PushOperationConstants["highestPushDataOpcode"] = 78] = "highestPushDataOpcode";
    /**
     * For OP_1 to OP_16, `opcode` is the number offset by `0x50` (80):
     *
     * `OP_N = 0x50 + N`
     *
     * OP_0 is really OP_PUSHBYTES_0 (`0x00`), so it does not follow this pattern.
     */
    PushOperationConstants[PushOperationConstants["pushNumberOpcodesOffset"] = 80] = "pushNumberOpcodesOffset";
    /** OP_1 through OP_16 */
    PushOperationConstants[PushOperationConstants["pushNumberOpcodes"] = 16] = "pushNumberOpcodes";
    PushOperationConstants[PushOperationConstants["negativeOne"] = 129] = "negativeOne";
    PushOperationConstants[PushOperationConstants["OP_1NEGATE"] = 79] = "OP_1NEGATE";
    /**
     * 256 - 1
     */
    PushOperationConstants[PushOperationConstants["maximumPushData1Size"] = 255] = "maximumPushData1Size";
    /**
     * Standard consensus parameter for most Bitcoin forks.
     */
    PushOperationConstants[PushOperationConstants["maximumPushSize"] = 520] = "maximumPushSize";
    /**
     * 256 ** 2 - 1
     */
    PushOperationConstants[PushOperationConstants["maximumPushData2Size"] = 65535] = "maximumPushData2Size";
    /**
     * 256 ** 4 - 1
     */
    PushOperationConstants[PushOperationConstants["maximumPushData4Size"] = 4294967295] = "maximumPushData4Size";
})(PushOperationConstants || (PushOperationConstants = {}));
/**
 * Returns the minimal bytecode required to push the provided `data` to the
 * stack.
 *
 * @remarks
 * This method conservatively encodes a `Uint8Array` as a data push. For Script
 * Numbers which can be pushed using a single opcode (-1 through 16), the
 * equivalent bytecode value is returned. Other `data` values will be prefixed
 * with the proper opcode and push length bytes (if necessary) to create the
 * minimal push instruction.
 *
 * Note, while some single-byte Script Number pushes will be minimally-encoded
 * by this method, all larger inputs will be encoded as-is (it cannot be assumed
 * that inputs are intended to be used as Script Numbers). To encode the push of
 * a Script Number, minimally-encode the number before passing it to this
 * method, e.g.:
 * `encodeDataPush(bigIntToScriptNumber(parseBytesAsScriptNumber(nonMinimalNumber)))`.
 *
 * The maximum `bytecode` length which can be encoded for a push in the Bitcoin
 * system is `4294967295` (~4GB). This method assumes a smaller input – if
 * `bytecode` has the potential to be longer, it should be checked (and the
 * error handled) prior to calling this method.
 *
 * @param data - the Uint8Array to push to the stack
 */
// eslint-disable-next-line complexity
const encodeDataPush = (data) => data.length <= PushOperationConstants.maximumPushByteOperationSize
    ? data.length === 0
        ? Uint8Array.of(0)
        : data.length === 1
            ? data[0] !== 0 && data[0] <= PushOperationConstants.pushNumberOpcodes
                ? Uint8Array.of(data[0] + PushOperationConstants.pushNumberOpcodesOffset)
                : data[0] === PushOperationConstants.negativeOne
                    ? Uint8Array.of(PushOperationConstants.OP_1NEGATE)
                    : Uint8Array.from([1, ...data])
            : Uint8Array.from([data.length, ...data])
    : data.length <= PushOperationConstants.maximumPushData1Size
        ? Uint8Array.from([
            PushOperationConstants.OP_PUSHDATA_1,
            data.length,
            ...data,
        ])
        : data.length <= PushOperationConstants.maximumPushData2Size
            ? Uint8Array.from([
                PushOperationConstants.OP_PUSHDATA_2,
                ...(0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(data.length),
                ...data,
            ])
            : Uint8Array.from([
                PushOperationConstants.OP_PUSHDATA_4,
                ...(0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(data.length),
                ...data,
            ]);
/**
 * Returns true if the provided `data` is minimally-encoded by the provided
 * `opcode`.
 * @param opcode - the opcode used to push `data`
 * @param data - the contents of the push
 */
// eslint-disable-next-line complexity
const isMinimalDataPush = (opcode, data) => data.length === 0
    ? opcode === PushOperationConstants.OP_0
    : data.length === 1
        ? data[0] >= 1 && data[0] <= PushOperationConstants.pushNumberOpcodes
            ? opcode === data[0] + PushOperationConstants.pushNumberOpcodesOffset
            : data[0] === PushOperationConstants.negativeOne
                ? opcode === PushOperationConstants.OP_1NEGATE
                : true
        : data.length <= PushOperationConstants.maximumPushByteOperationSize
            ? opcode === data.length
            : data.length <= PushOperationConstants.maximumPushData1Size
                ? opcode === PushOperationConstants.OP_PUSHDATA_1
                : data.length <= PushOperationConstants.maximumPushData2Size
                    ? opcode === PushOperationConstants.OP_PUSHDATA_2
                    : true;
const pushByteOpcodes = [
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_1,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_2,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_3,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_4,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_5,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_6,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_7,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_8,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_9,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_10,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_11,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_12,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_13,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_14,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_15,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_16,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_17,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_18,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_19,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_20,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_21,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_22,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_23,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_24,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_25,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_26,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_27,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_28,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_29,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_30,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_31,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_32,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_33,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_34,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_35,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_36,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_37,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_38,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_39,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_40,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_41,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_42,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_43,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_44,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_45,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_46,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_47,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_48,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_49,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_50,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_51,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_52,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_53,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_54,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_55,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_56,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_57,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_58,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_59,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_60,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_61,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_62,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_63,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_64,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_65,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_66,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_67,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_68,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_69,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_70,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_71,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_72,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_73,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_74,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_PUSHBYTES_75,
];
const executionIsActive = (state) => state.executionStack.every((item) => item);
const pushOperation = (flags, maximumPushSize = PushOperationConstants.maximumPushSize) => (state) => {
    const instruction = state.instructions[state.ip];
    return instruction.data.length > maximumPushSize
        ? (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.exceedsMaximumPush, state)
        : executionIsActive(state)
            ? flags.requireMinimalEncoding &&
                !isMinimalDataPush(instruction.opcode, instruction.data)
                ? (0,_errors__WEBPACK_IMPORTED_MODULE_3__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_3__.AuthenticationErrorCommon.nonMinimalPush, state)
                : (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(state, instruction.data)
            : state;
};
const pushOperations = (flags, maximumPushSize = PushOperationConstants.maximumPushSize) => {
    const push = pushOperation(flags, maximumPushSize);
    return (0,_format_hex__WEBPACK_IMPORTED_MODULE_1__.range)(PushOperationConstants.highestPushDataOpcode + 1).reduce((group, i) => ({ ...group, [i]: push }), {});
};
const pushNumberOpcodes = [
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_1NEGATE,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_1,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_2,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_3,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_4,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_5,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_6,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_7,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_8,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_9,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_10,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_11,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_12,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_13,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_14,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_15,
    _opcodes__WEBPACK_IMPORTED_MODULE_4__.OpcodesCommon.OP_16,
];
const op1NegateValue = -1;
const pushNumberOperations = () => pushNumberOpcodes
    .map((opcode, i) => [
    opcode,
    [op1NegateValue, ...(0,_format_hex__WEBPACK_IMPORTED_MODULE_1__.range)(PushOperationConstants.pushNumberOpcodes, 1)]
        .map(BigInt)
        .map(_types__WEBPACK_IMPORTED_MODULE_5__.bigIntToScriptNumber)[i],
])
    .reduce((group, pair) => ({
    ...group,
    [pair[0]]: (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_2__.pushToStack)(state, pair[1].slice()),
}), {});
//# sourceMappingURL=push.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/signing-serialization.js ***!
  \************************************************************************************************************/
/*! namespace exports */
/*! export SigningSerializationFlag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateSigningSerializationBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hashOutputs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hashPrevouts [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hashSequence [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDefinedSigningSerializationType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isLegacySigningSerialization [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SigningSerializationFlag": () => /* binding */ SigningSerializationFlag,
/* harmony export */   "isDefinedSigningSerializationType": () => /* binding */ isDefinedSigningSerializationType,
/* harmony export */   "hashPrevouts": () => /* binding */ hashPrevouts,
/* harmony export */   "hashSequence": () => /* binding */ hashSequence,
/* harmony export */   "hashOutputs": () => /* binding */ hashOutputs,
/* harmony export */   "generateSigningSerializationBCH": () => /* binding */ generateSigningSerializationBCH,
/* harmony export */   "isLegacySigningSerialization": () => /* binding */ isLegacySigningSerialization
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * A.K.A. `sighash` flags
 */
var SigningSerializationFlag;
(function (SigningSerializationFlag) {
    /**
     * A.K.A. `SIGHASH_ALL`
     */
    SigningSerializationFlag[SigningSerializationFlag["allOutputs"] = 1] = "allOutputs";
    /**
     * A.K.A `SIGHASH_NONE`
     */
    SigningSerializationFlag[SigningSerializationFlag["noOutputs"] = 2] = "noOutputs";
    /**
     * A.K.A. `SIGHASH_SINGLE`
     */
    SigningSerializationFlag[SigningSerializationFlag["correspondingOutput"] = 3] = "correspondingOutput";
    SigningSerializationFlag[SigningSerializationFlag["forkId"] = 64] = "forkId";
    /**
     * A.K.A `ANYONE_CAN_PAY`
     */
    SigningSerializationFlag[SigningSerializationFlag["singleInput"] = 128] = "singleInput";
})(SigningSerializationFlag || (SigningSerializationFlag = {}));
const isDefinedSigningSerializationType = (byte) => {
    const baseType = 
    // eslint-disable-next-line no-bitwise
    byte &
        // eslint-disable-next-line no-bitwise
        ~(SigningSerializationFlag.forkId | SigningSerializationFlag.singleInput);
    return (baseType >= SigningSerializationFlag.allOutputs &&
        baseType <= SigningSerializationFlag.correspondingOutput);
};
const match = (type, flag) => 
// eslint-disable-next-line no-bitwise
(type[0] & flag) !== 0;
const equals = (type, flag
// eslint-disable-next-line no-bitwise
) => (type[0] & 31 /* mask5Bits */) === flag;
const shouldSerializeSingleInput = (type) => match(type, SigningSerializationFlag.singleInput);
const shouldSerializeCorrespondingOutput = (type) => equals(type, SigningSerializationFlag.correspondingOutput);
const shouldSerializeNoOutputs = (type) => equals(type, SigningSerializationFlag.noOutputs);
const emptyHash = () => new Uint8Array(32 /* sha256HashByteLength */).fill(0);
/**
 * Return the proper `hashPrevouts` value for a given a signing serialization
 * type.
 * @param signingSerializationType - the signing serialization type to test
 * @param transactionOutpoints - see `generateSigningSerializationBCH`
 */
const hashPrevouts = ({ sha256, signingSerializationType, transactionOutpoints, }) => shouldSerializeSingleInput(signingSerializationType)
    ? emptyHash()
    : sha256.hash(sha256.hash(transactionOutpoints));
/**
 * Return the proper `hashSequence` value for a given a signing serialization
 * type.
 * @param signingSerializationType - the signing serialization type to test
 * @param transactionSequenceNumbers - see
 * `generateSigningSerializationBCH`
 */
const hashSequence = ({ sha256, signingSerializationType, transactionSequenceNumbers, }) => !shouldSerializeSingleInput(signingSerializationType) &&
    !shouldSerializeCorrespondingOutput(signingSerializationType) &&
    !shouldSerializeNoOutputs(signingSerializationType)
    ? sha256.hash(sha256.hash(transactionSequenceNumbers))
    : emptyHash();
/**
 * Return the proper `hashOutputs` value for a given a signing serialization
 * type.
 * @param signingSerializationType - the signing serialization type to test
 * @param transactionOutputs - see `generateSigningSerializationBCH`
 * @param correspondingOutput - see `generateSigningSerializationBCH`
 */
const hashOutputs = ({ correspondingOutput, sha256, signingSerializationType, transactionOutputs, }) => !shouldSerializeCorrespondingOutput(signingSerializationType) &&
    !shouldSerializeNoOutputs(signingSerializationType)
    ? sha256.hash(sha256.hash(transactionOutputs))
    : shouldSerializeCorrespondingOutput(signingSerializationType)
        ? correspondingOutput === undefined
            ? emptyHash()
            : sha256.hash(sha256.hash(correspondingOutput))
        : emptyHash();
/**
 * Serialize the signature-protected properties of a transaction following the
 * algorithm required by the `signingSerializationType` of a signature.
 *
 * Note: this implementation re-computes all hashes each time it is called. A
 * performance-critical application could instead use memoization to avoid
 * re-computing these values when validating many signatures within a single
 * transaction. See BIP143 for details.
 */
const generateSigningSerializationBCH = ({ correspondingOutput, coveredBytecode, forkId = new Uint8Array([0, 0, 0]), locktime, outpointIndex, outpointTransactionHash, outputValue, sequenceNumber, sha256, signingSerializationType, transactionOutpoints, transactionOutputs, transactionSequenceNumbers, version, }) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)([
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(version),
    hashPrevouts({ sha256, signingSerializationType, transactionOutpoints }),
    hashSequence({
        sha256,
        signingSerializationType,
        transactionSequenceNumbers,
    }),
    outpointTransactionHash.slice().reverse(),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(outpointIndex),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.bigIntToBitcoinVarInt)(BigInt(coveredBytecode.length)),
    coveredBytecode,
    outputValue,
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(sequenceNumber),
    hashOutputs({
        correspondingOutput,
        sha256,
        signingSerializationType,
        transactionOutputs,
    }),
    (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(locktime),
    signingSerializationType,
    forkId,
]);
/**
 * @param signingSerializationType - the 32-bit number indicating the signing
 * serialization algorithm to use
 */
const isLegacySigningSerialization = (signingSerializationType) => {
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const forkValue = signingSerializationType >> 8;
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const newForkValue = (forkValue ^ 0xdead) | 0xff0000;
    // eslint-disable-next-line no-bitwise, @typescript-eslint/no-magic-numbers
    const sighashType = (newForkValue << 8) | (signingSerializationType & 0xff);
    // eslint-disable-next-line no-bitwise
    return (sighashType & SigningSerializationFlag.forkId) === 0;
};
//# sourceMappingURL=signing-serialization.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/splice.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export opSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export spliceOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opSize": () => /* binding */ opSize,
/* harmony export */   "spliceOperations": () => /* binding */ spliceOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");



const opSize = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item, (0,_types__WEBPACK_IMPORTED_MODULE_2__.bigIntToScriptNumber)(BigInt(item.length))));
const spliceOperations = () => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_1__.OpcodesCommon.OP_SIZE]: opSize(),
});
//# sourceMappingURL=splice.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/stack.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export op2Drop [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Dup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Over [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Rot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op2Swap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op3Dup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDepth [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDrop [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opDup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opFromAltStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opIfDup [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opNip [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opOver [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opPick [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opRoll [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opRot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opSwap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opToAltStack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opTuck [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stackOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "opToAltStack": () => /* binding */ opToAltStack,
/* harmony export */   "opFromAltStack": () => /* binding */ opFromAltStack,
/* harmony export */   "op2Drop": () => /* binding */ op2Drop,
/* harmony export */   "op2Dup": () => /* binding */ op2Dup,
/* harmony export */   "op3Dup": () => /* binding */ op3Dup,
/* harmony export */   "op2Over": () => /* binding */ op2Over,
/* harmony export */   "op2Rot": () => /* binding */ op2Rot,
/* harmony export */   "op2Swap": () => /* binding */ op2Swap,
/* harmony export */   "opIfDup": () => /* binding */ opIfDup,
/* harmony export */   "opDepth": () => /* binding */ opDepth,
/* harmony export */   "opDrop": () => /* binding */ opDrop,
/* harmony export */   "opDup": () => /* binding */ opDup,
/* harmony export */   "opNip": () => /* binding */ opNip,
/* harmony export */   "opOver": () => /* binding */ opOver,
/* harmony export */   "opPick": () => /* binding */ opPick,
/* harmony export */   "opRoll": () => /* binding */ opRoll,
/* harmony export */   "opRot": () => /* binding */ opRot,
/* harmony export */   "opSwap": () => /* binding */ opSwap,
/* harmony export */   "opTuck": () => /* binding */ opTuck,
/* harmony export */   "stackOperations": () => /* binding */ stackOperations
/* harmony export */ });
/* harmony import */ var _combinators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./combinators */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/combinators.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js");




const opToAltStack = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => {
    // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
    nextState.alternateStack.push(item);
    return nextState;
});
const opFromAltStack = () => (state) => {
    // eslint-disable-next-line functional/immutable-data
    const item = state.alternateStack.pop();
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyAlternateStack, state);
    }
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(state, item);
};
const op2Drop = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState) => nextState);
const op2Dup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, a.slice(), b.slice()));
const op3Dup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useThreeStackItems)(state, (nextState, [a, b, c]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, c, a.slice(), b.slice(), c.slice()));
const op2Over = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useFourStackItems)(state, (nextState, [a, b, c, d]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, c, d, a.slice(), b.slice()));
const op2Rot = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useSixStackItems)(state, (nextState, [a, b, c, d, e, f]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, c, d, e, f, a, b));
const op2Swap = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useFourStackItems)(state, (nextState, [a, b, c, d]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, c, d, a, b));
const opIfDup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, ...((0,_types__WEBPACK_IMPORTED_MODULE_3__.stackItemIsTruthy)(item) ? [item, item.slice()] : [item])));
const opDepth = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(state, (0,_types__WEBPACK_IMPORTED_MODULE_3__.bigIntToScriptNumber)(BigInt(state.stack.length)));
const opDrop = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState) => nextState);
const opDup = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneStackItem)(state, (nextState, [item]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item, item.slice()));
const opNip = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b));
const opOver = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, a, b, a.slice()));
const opPick = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, depth) => {
    const item = nextState.stack[nextState.stack.length - 1 - Number(depth)];
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidStackIndex, state);
    }
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, item.slice());
}, { requireMinimalEncoding });
const opRoll = ({ requireMinimalEncoding, }) => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useOneScriptNumber)(state, (nextState, depth) => {
    const index = nextState.stack.length - 1 - Number(depth);
    if (index < 0 || index > nextState.stack.length - 1) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidStackIndex, state);
    }
    // eslint-disable-next-line functional/immutable-data
    return (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, nextState.stack.splice(index, 1)[0]);
}, { requireMinimalEncoding });
const opRot = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useThreeStackItems)(state, (nextState, [a, b, c]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b, c, a));
const opSwap = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b, a));
const opTuck = () => (state) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.useTwoStackItems)(state, (nextState, [a, b]) => (0,_combinators__WEBPACK_IMPORTED_MODULE_0__.pushToStack)(nextState, b.slice(), a, b));
const stackOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_TOALTSTACK]: opToAltStack(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_FROMALTSTACK]: opFromAltStack(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2DROP]: op2Drop(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2DUP]: op2Dup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_3DUP]: op3Dup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2OVER]: op2Over(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2ROT]: op2Rot(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_2SWAP]: op2Swap(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_IFDUP]: opIfDup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_DEPTH]: opDepth(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_DROP]: opDrop(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_DUP]: opDup(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_NIP]: opNip(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_OVER]: opOver(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_PICK]: opPick(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ROLL]: opRoll(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_ROT]: opRot(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_SWAP]: opSwap(),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_TUCK]: opTuck(),
});
//# sourceMappingURL=stack.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/time.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export opCheckLockTimeVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export opCheckSequenceVerify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readLocktime [provided] [no usage info] [missing usage info prevents renaming] */
/*! export timeOperations [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readLocktime": () => /* binding */ readLocktime,
/* harmony export */   "opCheckLockTimeVerify": () => /* binding */ opCheckLockTimeVerify,
/* harmony export */   "opCheckSequenceVerify": () => /* binding */ opCheckSequenceVerify,
/* harmony export */   "timeOperations": () => /* binding */ timeOperations
/* harmony export */ });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/errors.js");
/* harmony import */ var _opcodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./opcodes */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/opcodes.js");



var Bits;
(function (Bits) {
    Bits[Bits["sequenceLocktimeDisableFlag"] = 31] = "sequenceLocktimeDisableFlag";
    Bits[Bits["sequenceLocktimeTypeFlag"] = 22] = "sequenceLocktimeTypeFlag";
})(Bits || (Bits = {}));
var Constants;
(function (Constants) {
    Constants[Constants["locktimeScriptNumberByteLength"] = 5] = "locktimeScriptNumberByteLength";
    Constants[Constants["locktimeThreshold"] = 500000000] = "locktimeThreshold";
    Constants[Constants["locktimeDisablingSequenceNumber"] = 4294967295] = "locktimeDisablingSequenceNumber";
    Constants[Constants["sequenceLocktimeTransactionVersionMinimum"] = 2] = "sequenceLocktimeTransactionVersionMinimum";
    // eslint-disable-next-line no-bitwise
    Constants[Constants["sequenceLocktimeDisableFlag"] = 2147483648] = "sequenceLocktimeDisableFlag";
    // eslint-disable-next-line no-bitwise
    Constants[Constants["sequenceLocktimeTypeFlag"] = 4194304] = "sequenceLocktimeTypeFlag";
    Constants[Constants["sequenceGranularity"] = 9] = "sequenceGranularity";
    Constants[Constants["sequenceLocktimeMask"] = 65535] = "sequenceLocktimeMask";
})(Constants || (Constants = {}));
const readLocktime = (state, operation, flags) => {
    const item = state.stack[state.stack.length - 1];
    if (item === undefined) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.emptyStack, state);
    }
    const parsedLocktime = (0,_common__WEBPACK_IMPORTED_MODULE_0__.parseBytesAsScriptNumber)(item, {
        maximumScriptNumberByteLength: Constants.locktimeScriptNumberByteLength,
        requireMinimalEncoding: flags.requireMinimalEncoding,
    });
    if ((0,_common__WEBPACK_IMPORTED_MODULE_0__.isScriptNumberError)(parsedLocktime)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.invalidScriptNumber, state);
    }
    const locktime = Number(parsedLocktime);
    if (locktime < 0) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.negativeLocktime, state);
    }
    return operation(state, locktime);
};
const locktimeTypesAreCompatible = (locktime, requiredLocktime) => (locktime < Constants.locktimeThreshold &&
    requiredLocktime < Constants.locktimeThreshold) ||
    (locktime >= Constants.locktimeThreshold &&
        requiredLocktime >= Constants.locktimeThreshold);
const opCheckLockTimeVerify = (flags) => (state) => readLocktime(state, (nextState, requiredLocktime) => {
    if (!locktimeTypesAreCompatible(nextState.locktime, requiredLocktime)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.incompatibleLocktimeType, nextState);
    }
    if (requiredLocktime > nextState.locktime) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unsatisfiedLocktime, nextState);
    }
    if (nextState.sequenceNumber === Constants.locktimeDisablingSequenceNumber) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.locktimeDisabled, nextState);
    }
    return nextState;
}, flags);
// eslint-disable-next-line no-bitwise
const includesFlag = (value, flag) => (value & flag) !== 0;
const opCheckSequenceVerify = (flags) => (state) => readLocktime(state, 
// eslint-disable-next-line complexity
(nextState, requiredSequence) => {
    const sequenceLocktimeDisabled = includesFlag(requiredSequence, Constants.sequenceLocktimeDisableFlag);
    if (sequenceLocktimeDisabled) {
        return nextState;
    }
    if (nextState.version < Constants.sequenceLocktimeTransactionVersionMinimum) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.checkSequenceUnavailable, nextState);
    }
    if (includesFlag(nextState.sequenceNumber, Constants.sequenceLocktimeDisableFlag)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unmatchedSequenceDisable, nextState);
    }
    if (includesFlag(requiredSequence, Constants.sequenceLocktimeTypeFlag) !==
        includesFlag(nextState.sequenceNumber, Constants.sequenceLocktimeTypeFlag)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.incompatibleSequenceType, nextState);
    }
    if (
    // eslint-disable-next-line no-bitwise
    (requiredSequence & Constants.sequenceLocktimeMask) >
        // eslint-disable-next-line no-bitwise
        (nextState.sequenceNumber & Constants.sequenceLocktimeMask)) {
        return (0,_errors__WEBPACK_IMPORTED_MODULE_1__.applyError)(_errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorCommon.unsatisfiedSequenceNumber, nextState);
    }
    return nextState;
}, flags);
const timeOperations = (flags) => ({
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_CHECKLOCKTIMEVERIFY]: opCheckLockTimeVerify(flags),
    [_opcodes__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon.OP_CHECKSEQUENCEVERIFY]: opCheckSequenceVerify(flags),
});
//# sourceMappingURL=time.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/types.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export ScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bigIntToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export booleanToScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isScriptNumberError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseBytesAsScriptNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stackItemIsTruthy [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScriptNumberError": () => /* binding */ ScriptNumberError,
/* harmony export */   "isScriptNumberError": () => /* binding */ isScriptNumberError,
/* harmony export */   "parseBytesAsScriptNumber": () => /* binding */ parseBytesAsScriptNumber,
/* harmony export */   "bigIntToScriptNumber": () => /* binding */ bigIntToScriptNumber,
/* harmony export */   "stackItemIsTruthy": () => /* binding */ stackItemIsTruthy,
/* harmony export */   "booleanToScriptNumber": () => /* binding */ booleanToScriptNumber
/* harmony export */ });
var ScriptNumberError;
(function (ScriptNumberError) {
    ScriptNumberError["outOfRange"] = "Failed to parse Script Number: overflows Script Number range.";
    ScriptNumberError["requiresMinimal"] = "Failed to parse Script Number: the number is not minimally-encoded.";
})(ScriptNumberError || (ScriptNumberError = {}));
const isScriptNumberError = (value) => value === ScriptNumberError.outOfRange ||
    value === ScriptNumberError.requiresMinimal;
const normalMaximumScriptNumberByteLength = 4;
/**
 * This method attempts to parse a "Script Number", a format with which numeric
 * values are represented on the stack. (The Satoshi implementation calls this
 * `CScriptNum`.)
 *
 * If `bytes` is a valid Script Number, this method returns the represented
 * number in BigInt format. If `bytes` is not valid, a `ScriptNumberError` is
 * returned.
 *
 * All common operations accepting numeric parameters or pushing numeric values
 * to the stack currently use the Script Number format. The binary format of
 * numbers wouldn't be important if they could only be operated on by arithmetic
 * operators, but since the results of these operations may become input to
 * other operations (e.g. hashing), the specific representation is consensus-
 * critical.
 *
 * Parsing of Script Numbers is limited to 4 bytes (with the exception of
 * OP_CHECKLOCKTIMEVERIFY and OP_CHECKSEQUENCEVERIFY, which read up to 5-bytes).
 * The bytes are read as a signed integer (for 32-bits: inclusive range from
 * -2^31 + 1 to 2^31 - 1) in little-endian byte order. Script Numbers must
 * further be encoded as minimally as possible (no zero-padding). See code/tests
 * for details.
 *
 * @remarks
 * Operators may push numeric results to the stack which exceed the current
 * 4-byte length limit of Script Numbers. While these stack elements would
 * otherwise be valid Script Numbers, because of the 4-byte length limit, they
 * can only be used as non-numeric values in later operations.
 *
 * Most other implementations currently parse Script Numbers into 64-bit
 * integers to operate on them (rather than integers of arbitrary size like
 * BigInt). Currently, no operators are at risk of overflowing 64-bit integers
 * given 32-bit integer inputs, but future operators may require additional
 * refactoring in those implementations.
 *
 * @param bytes - a Uint8Array from the stack
 * @param requireMinimalEncoding - if true, this method returns an error when
 * parsing non-minimally encoded Script Numbers
 * @param maximumScriptNumberByteLength - the maximum valid number of bytes
 */
// eslint-disable-next-line complexity
const parseBytesAsScriptNumber = (bytes, { maximumScriptNumberByteLength = normalMaximumScriptNumberByteLength, requireMinimalEncoding = true, } = {
    maximumScriptNumberByteLength: normalMaximumScriptNumberByteLength,
    requireMinimalEncoding: true,
}) => {
    if (bytes.length === 0) {
        return BigInt(0);
    }
    if (bytes.length > maximumScriptNumberByteLength) {
        return ScriptNumberError.outOfRange;
    }
    const mostSignificantByte = bytes[bytes.length - 1];
    const secondMostSignificantByte = bytes[bytes.length - 1 - 1];
    const allButTheSignBit = 127;
    const justTheSignBit = 128;
    if (requireMinimalEncoding &&
        // eslint-disable-next-line no-bitwise
        (mostSignificantByte & allButTheSignBit) === 0 &&
        // eslint-disable-next-line no-bitwise
        (bytes.length <= 1 || (secondMostSignificantByte & justTheSignBit) === 0)) {
        return ScriptNumberError.requiresMinimal;
    }
    const bitsPerByte = 8;
    const signFlippingByte = 0x80;
    // eslint-disable-next-line functional/no-let
    let result = BigInt(0);
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let byte = 0; byte < bytes.length; byte++) {
        // eslint-disable-next-line functional/no-expression-statement,  no-bitwise
        result |= BigInt(bytes[byte]) << BigInt(byte * bitsPerByte);
    }
    /* eslint-disable no-bitwise */
    const isNegative = (bytes[bytes.length - 1] & signFlippingByte) !== 0;
    return isNegative
        ? -(result &
            ~(BigInt(signFlippingByte) << BigInt(bitsPerByte * (bytes.length - 1))))
        : result;
    /* eslint-enable no-bitwise */
};
/**
 * Convert a BigInt into the "Script Number" format. See
 * `parseBytesAsScriptNumber` for more information.
 *
 * @param integer - the BigInt to encode as a Script Number
 */
// eslint-disable-next-line complexity
const bigIntToScriptNumber = (integer) => {
    if (integer === BigInt(0)) {
        return new Uint8Array();
    }
    const bytes = [];
    const isNegative = integer < 0;
    const byteStates = 0xff;
    const bitsPerByte = 8;
    // eslint-disable-next-line functional/no-let
    let remaining = isNegative ? -integer : integer;
    // eslint-disable-next-line functional/no-loop-statement
    while (remaining > 0) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data, no-bitwise
        bytes.push(Number(remaining & BigInt(byteStates)));
        // eslint-disable-next-line functional/no-expression-statement, no-bitwise
        remaining >>= BigInt(bitsPerByte);
    }
    const signFlippingByte = 0x80;
    // eslint-disable-next-line no-bitwise, functional/no-conditional-statement
    if ((bytes[bytes.length - 1] & signFlippingByte) > 0) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        bytes.push(isNegative ? signFlippingByte : 0x00);
        // eslint-disable-next-line functional/no-conditional-statement
    }
    else if (isNegative) {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data, no-bitwise
        bytes[bytes.length - 1] |= signFlippingByte;
    }
    return new Uint8Array(bytes);
};
/**
 * Returns true if the provided stack item is "truthy" in the sense required
 * by several operations (anything but zero and "negative zero").
 *
 * The Satoshi implementation calls this method `CastToBool`.
 *
 * @param item - the stack item to check for truthiness
 */
const stackItemIsTruthy = (item) => {
    const signFlippingByte = 0x80;
    // eslint-disable-next-line functional/no-let, functional/no-loop-statement, no-plusplus
    for (let i = 0; i < item.length; i++) {
        if (item[i] !== 0) {
            if (i === item.length - 1 && item[i] === signFlippingByte) {
                return false;
            }
            return true;
        }
    }
    return false;
};
/**
 * Convert a boolean into Script Number format (the type used to express
 * boolean values emitted by several operations).
 *
 * @param value - the boolean value to convert
 */
const booleanToScriptNumber = (value) => value ? bigIntToScriptNumber(BigInt(1)) : bigIntToScriptNumber(BigInt(0));
//# sourceMappingURL=types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js ***!
  \******************************************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

//# sourceMappingURL=instruction-sets-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export assembleBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationInstructionIsMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationInstructionsAreMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export authenticationInstructionsAreNotMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disassembleParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export generateBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lengthBytesForPushOpcode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseBytecode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export readAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] */
/*! export serializeParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "authenticationInstructionIsMalformed": () => /* binding */ authenticationInstructionIsMalformed,
/* harmony export */   "authenticationInstructionsAreMalformed": () => /* binding */ authenticationInstructionsAreMalformed,
/* harmony export */   "authenticationInstructionsAreNotMalformed": () => /* binding */ authenticationInstructionsAreNotMalformed,
/* harmony export */   "lengthBytesForPushOpcode": () => /* binding */ lengthBytesForPushOpcode,
/* harmony export */   "readAuthenticationInstruction": () => /* binding */ readAuthenticationInstruction,
/* harmony export */   "parseBytecode": () => /* binding */ parseBytecode,
/* harmony export */   "disassembleParsedAuthenticationInstructionMalformed": () => /* binding */ disassembleParsedAuthenticationInstructionMalformed,
/* harmony export */   "disassembleAuthenticationInstruction": () => /* binding */ disassembleAuthenticationInstruction,
/* harmony export */   "disassembleParsedAuthenticationInstruction": () => /* binding */ disassembleParsedAuthenticationInstruction,
/* harmony export */   "disassembleParsedAuthenticationInstructions": () => /* binding */ disassembleParsedAuthenticationInstructions,
/* harmony export */   "disassembleBytecode": () => /* binding */ disassembleBytecode,
/* harmony export */   "disassembleBytecodeBCH": () => /* binding */ disassembleBytecodeBCH,
/* harmony export */   "disassembleBytecodeBTC": () => /* binding */ disassembleBytecodeBTC,
/* harmony export */   "generateBytecodeMap": () => /* binding */ generateBytecodeMap,
/* harmony export */   "assembleBytecode": () => /* binding */ assembleBytecode,
/* harmony export */   "assembleBytecodeBCH": () => /* binding */ assembleBytecodeBCH,
/* harmony export */   "assembleBytecodeBTC": () => /* binding */ assembleBytecodeBTC,
/* harmony export */   "serializeAuthenticationInstruction": () => /* binding */ serializeAuthenticationInstruction,
/* harmony export */   "serializeParsedAuthenticationInstructionMalformed": () => /* binding */ serializeParsedAuthenticationInstructionMalformed,
/* harmony export */   "serializeParsedAuthenticationInstruction": () => /* binding */ serializeParsedAuthenticationInstruction,
/* harmony export */   "serializeAuthenticationInstructions": () => /* binding */ serializeAuthenticationInstructions,
/* harmony export */   "serializeParsedAuthenticationInstructions": () => /* binding */ serializeParsedAuthenticationInstructions
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");
/* harmony import */ var _template_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../template/compiler */ "./node_modules/@bitauth/libauth/build/module/lib/template/compiler.js");
/* harmony import */ var _bch_bch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bch/bch */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js");
/* harmony import */ var _btc_btc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./btc/btc */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js");




/**
 * A type-guard which checks if the provided instruction is malformed.
 * @param instruction - the instruction to check
 */
const authenticationInstructionIsMalformed = (instruction) => 'malformed' in instruction;
/**
 * A type-guard which checks if the final instruction in the provided array of
 * instructions is malformed. (Only the final instruction can be malformed.)
 * @param instruction - the array of instructions to check
 */
const authenticationInstructionsAreMalformed = (instructions) => instructions.length > 0 &&
    authenticationInstructionIsMalformed(instructions[instructions.length - 1]);
/**
 * A type-guard which confirms that the final instruction in the provided array
 * is not malformed. (Only the final instruction can be malformed.)
 * @param instruction - the array of instructions to check
 */
const authenticationInstructionsAreNotMalformed = (instructions) => !authenticationInstructionsAreMalformed(instructions);
var CommonPushOpcodes;
(function (CommonPushOpcodes) {
    CommonPushOpcodes[CommonPushOpcodes["OP_0"] = 0] = "OP_0";
    CommonPushOpcodes[CommonPushOpcodes["OP_PUSHDATA_1"] = 76] = "OP_PUSHDATA_1";
    CommonPushOpcodes[CommonPushOpcodes["OP_PUSHDATA_2"] = 77] = "OP_PUSHDATA_2";
    CommonPushOpcodes[CommonPushOpcodes["OP_PUSHDATA_4"] = 78] = "OP_PUSHDATA_4";
})(CommonPushOpcodes || (CommonPushOpcodes = {}));
const uint8Bytes = 1;
const uint16Bytes = 2;
const uint32Bytes = 4;
const readLittleEndianNumber = (script, index, length) => {
    const view = new DataView(script.buffer, index, length);
    const readAsLittleEndian = true;
    return length === uint8Bytes
        ? view.getUint8(0)
        : length === uint16Bytes
            ? view.getUint16(0, readAsLittleEndian)
            : view.getUint32(0, readAsLittleEndian);
};
/**
 * Returns the number of bytes used to indicate the length of the push in this
 * operation.
 * @param opcode - an opcode between 0x00 and 0x4e
 */
const lengthBytesForPushOpcode = (opcode) => opcode < CommonPushOpcodes.OP_PUSHDATA_1
    ? 0
    : opcode === CommonPushOpcodes.OP_PUSHDATA_1
        ? uint8Bytes
        : opcode === CommonPushOpcodes.OP_PUSHDATA_2
            ? uint16Bytes
            : uint32Bytes;
/**
 * Parse one instruction from the provided script.
 *
 * Returns an object with an `instruction` referencing a
 * `ParsedAuthenticationInstruction`, and a `nextIndex` indicating the next
 * index from which to read. If the next index is greater than or equal to the
 * length of the script, the script has been fully parsed.
 *
 * The final `ParsedAuthenticationInstruction` from a serialized script may be
 * malformed if 1) the final operation is a push and 2) too few bytes remain for
 * the push operation to complete.
 *
 * @param script - the script from which to read the next instruction
 * @param index - the offset from which to begin reading
 */
// eslint-disable-next-line complexity
const readAuthenticationInstruction = (script, index) => {
    const opcode = script[index];
    if (opcode > CommonPushOpcodes.OP_PUSHDATA_4) {
        return {
            instruction: {
                opcode: opcode,
            },
            nextIndex: index + 1,
        };
    }
    const lengthBytes = lengthBytesForPushOpcode(opcode);
    if (lengthBytes !== 0 && index + lengthBytes >= script.length) {
        const sliceStart = index + 1;
        const sliceEnd = sliceStart + lengthBytes;
        return {
            instruction: {
                expectedLengthBytes: lengthBytes,
                length: script.slice(sliceStart, sliceEnd),
                malformed: true,
                opcode: opcode,
            },
            nextIndex: sliceEnd,
        };
    }
    const dataBytes = lengthBytes === 0
        ? opcode
        : readLittleEndianNumber(script, index + 1, lengthBytes);
    const dataStart = index + 1 + lengthBytes;
    const dataEnd = dataStart + dataBytes;
    return {
        instruction: {
            data: script.slice(dataStart, dataEnd),
            ...(dataEnd > script.length
                ? {
                    expectedDataBytes: dataEnd - dataStart,
                    malformed: true,
                }
                : undefined),
            opcode: opcode,
        },
        nextIndex: dataEnd,
    };
};
/**
 * Parse authentication bytecode (`lockingBytecode` or `unlockingBytecode`)
 * into `ParsedAuthenticationInstructions`. The method
 * `authenticationInstructionsAreMalformed` can be used to check if these
 * instructions include a malformed instruction. If not, they are valid
 * `AuthenticationInstructions`.
 *
 * This implementation is common to most bitcoin forks, but the type parameter
 * can be used to strongly type the resulting instructions. For example:
 *
 * ```js
 *  const instructions = parseAuthenticationBytecode<OpcodesBCH>(script);
 * ```
 *
 * @param script - the serialized script to parse
 */
const parseBytecode = (script) => {
    const instructions = [];
    // eslint-disable-next-line functional/no-let
    let i = 0;
    // eslint-disable-next-line functional/no-loop-statement
    while (i < script.length) {
        const { instruction, nextIndex } = readAuthenticationInstruction(script, i);
        // eslint-disable-next-line functional/no-expression-statement
        i = nextIndex;
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        instructions.push(instruction);
    }
    return instructions;
};
/**
 * OP_0 is the only single-word push. All other push instructions will
 * disassemble to multiple ASM words. (OP_1-OP_16 are handled like normal
 * operations.)
 */
const isMultiWordPush = (opcode) => opcode !== CommonPushOpcodes.OP_0;
const formatAsmPushHex = (data) => data.length > 0 ? `0x${(0,_format_format__WEBPACK_IMPORTED_MODULE_0__.binToHex)(data)}` : '';
const formatMissingBytesAsm = (missing) => `[missing ${missing} byte${missing === 1 ? '' : 's'}]`;
const hasMalformedLength = (instruction) => 'length' in instruction;
const isPushData = (pushOpcode) => pushOpcode >= CommonPushOpcodes.OP_PUSHDATA_1;
/**
 * Disassemble a malformed authentication instruction into a string description.
 * @param opcodes - a mapping of possible opcodes to their string representation
 * @param instruction - the malformed instruction to disassemble
 */
const disassembleParsedAuthenticationInstructionMalformed = (opcodes, instruction) => `${opcodes[instruction.opcode]} ${hasMalformedLength(instruction)
    ? `${formatAsmPushHex(instruction.length)}${formatMissingBytesAsm(instruction.expectedLengthBytes - instruction.length.length)}`
    : `${isPushData(instruction.opcode)
        ? `${instruction.expectedDataBytes} `
        : ''}${formatAsmPushHex(instruction.data)}${formatMissingBytesAsm(instruction.expectedDataBytes - instruction.data.length)}`}`;
/**
 * Disassemble a properly-formed authentication instruction into a string
 * description.
 * @param opcodes - a mapping of possible opcodes to their string representation
 * @param instruction - the instruction to disassemble
 */
const disassembleAuthenticationInstruction = (opcodes, instruction) => `${opcodes[instruction.opcode]}${'data' in instruction &&
    isMultiWordPush(instruction.opcode)
    ? ` ${isPushData(instruction.opcode)
        ? `${instruction.data.length} `
        : ''}${formatAsmPushHex(instruction.data)}`
    : ''}`;
/**
 * Disassemble a single `ParsedAuthenticationInstruction` (includes potentially
 * malformed instructions) into its ASM representation.
 *
 * @param script - the instruction to disassemble
 */
const disassembleParsedAuthenticationInstruction = (opcodes, instruction) => authenticationInstructionIsMalformed(instruction)
    ? disassembleParsedAuthenticationInstructionMalformed(opcodes, instruction)
    : disassembleAuthenticationInstruction(opcodes, instruction);
/**
 * Disassemble an array of `ParsedAuthenticationInstructions` (including
 * potentially malformed instructions) into its ASM representation.
 *
 * @param script - the array of instructions to disassemble
 */
const disassembleParsedAuthenticationInstructions = (opcodes, instructions) => instructions
    .map((instruction) => disassembleParsedAuthenticationInstruction(opcodes, instruction))
    .join(' ');
/**
 * Disassemble authentication bytecode into a lossless ASM representation. (All
 * push operations are represented with the same opcodes used in the bytecode,
 * even when non-minimally encoded.)
 *
 * @param opcodes - the set to use when determining the name of opcodes, e.g. `OpcodesBCH`
 * @param bytecode - the authentication bytecode to disassemble
 */
const disassembleBytecode = (opcodes, bytecode) => disassembleParsedAuthenticationInstructions(opcodes, parseBytecode(bytecode));
/**
 * Disassemble BCH authentication bytecode into its ASM representation.
 * @param bytecode - the authentication bytecode to disassemble
 */
const disassembleBytecodeBCH = (bytecode) => disassembleParsedAuthenticationInstructions(_bch_bch__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH, parseBytecode(bytecode));
/**
 * Disassemble BTC authentication bytecode into its ASM representation.
 * @param bytecode - the authentication bytecode to disassemble
 */
const disassembleBytecodeBTC = (bytecode) => disassembleParsedAuthenticationInstructions(_btc_btc__WEBPACK_IMPORTED_MODULE_3__.OpcodesBTC, parseBytecode(bytecode));
/**
 * Create an object where each key is an opcode identifier and each value is
 * the bytecode value (`Uint8Array`) it represents.
 * @param opcodes - An opcode enum, e.g. `OpcodesBCH`
 */
const generateBytecodeMap = (opcodes) => Object.entries(opcodes)
    .filter((entry) => typeof entry[1] === 'number')
    .reduce((identifiers, pair) => ({
    ...identifiers,
    [pair[0]]: Uint8Array.of(pair[1]),
}), {});
/**
 * Re-assemble a string of disassembled bytecode (see `disassembleBytecode`).
 *
 * @param opcodes - a mapping of opcodes to their respective Uint8Array
 * representation
 * @param disassembledBytecode - the disassembled bytecode to re-assemble
 */
const assembleBytecode = (opcodes, disassembledBytecode) => {
    const environment = {
        opcodes,
        scripts: { asm: disassembledBytecode },
    };
    return (0,_template_compiler__WEBPACK_IMPORTED_MODULE_1__.createCompilerCommonSynchronous)(environment).generateBytecode('asm', {});
};
/**
 * Re-assemble a string of disassembled BCH bytecode (see
 * `disassembleBytecodeBCH`).
 *
 * Note, this method performs automatic minimization of push instructions.
 *
 * @param disassembledBytecode - the disassembled BCH bytecode to re-assemble
 */
const assembleBytecodeBCH = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(_bch_bch__WEBPACK_IMPORTED_MODULE_2__.OpcodesBCH), disassembledBytecode);
/**
 * Re-assemble a string of disassembled BCH bytecode (see
 * `disassembleBytecodeBTC`).
 *
 * Note, this method performs automatic minimization of push instructions.
 *
 * @param disassembledBytecode - the disassembled BTC bytecode to re-assemble
 */
const assembleBytecodeBTC = (disassembledBytecode) => assembleBytecode(generateBytecodeMap(_btc_btc__WEBPACK_IMPORTED_MODULE_3__.OpcodesBTC), disassembledBytecode);
const getInstructionLengthBytes = (instruction) => {
    const opcode = instruction.opcode;
    const expectedLength = lengthBytesForPushOpcode(opcode);
    return expectedLength === uint8Bytes
        ? Uint8Array.of(instruction.data.length)
        : expectedLength === uint16Bytes
            ? (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(instruction.data.length)
            : (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(instruction.data.length);
};
/**
 * Re-serialize a valid authentication instruction.
 * @param instruction - the instruction to serialize
 */
const serializeAuthenticationInstruction = (instruction) => Uint8Array.from([
    instruction.opcode,
    ...('data' in instruction
        ? [
            ...(isPushData(instruction.opcode)
                ? getInstructionLengthBytes(instruction)
                : []),
            ...instruction.data,
        ]
        : []),
]);
/**
 * Re-serialize a malformed authentication instruction.
 * @param instruction - the malformed instruction to serialize
 */
const serializeParsedAuthenticationInstructionMalformed = (instruction) => {
    const opcode = instruction.opcode;
    if (hasMalformedLength(instruction)) {
        return Uint8Array.from([opcode, ...instruction.length]);
    }
    if (isPushData(opcode)) {
        return Uint8Array.from([
            opcode,
            ...(opcode === CommonPushOpcodes.OP_PUSHDATA_1
                ? Uint8Array.of(instruction.expectedDataBytes)
                : opcode === CommonPushOpcodes.OP_PUSHDATA_2
                    ? (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint16LE)(instruction.expectedDataBytes)
                    : (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.numberToBinUint32LE)(instruction.expectedDataBytes)),
            ...instruction.data,
        ]);
    }
    return Uint8Array.from([opcode, ...instruction.data]);
};
/**
 * Re-serialize a potentially-malformed authentication instruction.
 * @param instruction - the potentially-malformed instruction to serialize
 */
const serializeParsedAuthenticationInstruction = (instruction) => authenticationInstructionIsMalformed(instruction)
    ? serializeParsedAuthenticationInstructionMalformed(instruction)
    : serializeAuthenticationInstruction(instruction);
/**
 * Re-serialize an array of valid authentication instructions.
 * @param instructions - the array of valid instructions to serialize
 */
const serializeAuthenticationInstructions = (instructions) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(instructions.map(serializeAuthenticationInstruction));
/**
 * Re-serialize an array of potentially-malformed authentication instructions.
 * @param instructions - the array of instructions to serialize
 */
const serializeParsedAuthenticationInstructions = (instructions) => (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.flattenBinArray)(instructions.map(serializeParsedAuthenticationInstruction));
//# sourceMappingURL=instruction-sets-utils.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export AuthenticationErrorBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export AuthenticationErrorCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompilerDefaults [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .CompilerDefaults */
/*! export CompressionFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .CompressionFlag */
/*! export ConsensusBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ConsensusCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .ConsensusCommon */
/*! export ContextFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .ContextFlag */
/*! export HdKeyDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdKeyDecodingError */
/*! export HdKeyVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdKeyVersion */
/*! export HdNodeCrackingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdNodeCrackingError */
/*! export HdNodeDerivationError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .HdNodeDerivationError */
/*! export InstructionSetBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeAlternateNamesBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeDescriptionsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeDescriptionsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodeDescriptionsUniqueBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodesBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodesBTC [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js .OpcodesBTC */
/*! export OpcodesCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export PushOperationConstants [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ScriptNumberError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export SigningSerializationAlgorithmIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .SigningSerializationAlgorithmIdentifier */
/*! export SigningSerializationFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .TransactionDecodingError */
/*! export WalletImportFormatError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .WalletImportFormatError */
/*! export applyError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export arithmeticOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBitcoinABCScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .assembleBytecode */
/*! export assembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .assembleBytecodeBCH */
/*! export assembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .assembleBytecodeBTC */
/*! export attemptCompilerOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .attemptCompilerOperations */
/*! export authenticationInstructionIsMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .authenticationInstructionIsMalformed */
/*! export authenticationInstructionsAreMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .authenticationInstructionsAreMalformed */
/*! export authenticationInstructionsAreNotMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .authenticationInstructionsAreNotMalformed */
/*! export authenticationTemplateToCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .authenticationTemplateToCompilerBCH */
/*! export bigIntToScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitcoinABCOpcodes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitcoinCashOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitwiseOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export bitwiseOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export booleanToScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export checkLimitsCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .checkLimitsCommon */
/*! export cloneAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .cloneAuthenticationProgramStateCommon */
/*! export cloneStack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .cloneStack */
/*! export combineOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export commonOperations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .commonOperations */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compileInputTemplate */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compileOutputTemplate */
/*! export compilerOperationAddressData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationAddressData */
/*! export compilerOperationAttemptBytecodeResolution [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationAttemptBytecodeResolution */
/*! export compilerOperationCurrentBlockHeight [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationCurrentBlockHeight */
/*! export compilerOperationCurrentBlockTime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationCurrentBlockTime */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeyEcdsaDataSignatureBCH */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeyEcdsaSignatureBCH */
/*! export compilerOperationHdKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeyPublicKeyCommon */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeySchnorrDataSignatureBCH */
/*! export compilerOperationHdKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHdKeySchnorrSignatureBCH */
/*! export compilerOperationHelperAddressIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperAddressIndex */
/*! export compilerOperationHelperCompileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperCompileScript */
/*! export compilerOperationHelperComputeDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperComputeDataSignatureBCH */
/*! export compilerOperationHelperComputeSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperComputeSignatureBCH */
/*! export compilerOperationHelperDeriveHdKeyPrivate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperDeriveHdKeyPrivate */
/*! export compilerOperationHelperDeriveHdPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperDeriveHdPrivateNode */
/*! export compilerOperationHelperGenerateCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperGenerateCoveredBytecode */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperHdKeyDataSignatureBCH */
/*! export compilerOperationHelperHdKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperHdKeySignatureBCH */
/*! export compilerOperationHelperKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperKeyDataSignatureBCH */
/*! export compilerOperationHelperKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperKeySignatureBCH */
/*! export compilerOperationHelperUnknownEntity [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationHelperUnknownEntity */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeyEcdsaDataSignatureBCH */
/*! export compilerOperationKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeyEcdsaSignatureBCH */
/*! export compilerOperationKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeyPublicKeyCommon */
/*! export compilerOperationKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeySchnorrDataSignatureBCH */
/*! export compilerOperationKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationKeySchnorrSignatureBCH */
/*! export compilerOperationRequires [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationRequires */
/*! export compilerOperationSigningSerializationCorrespondingOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCorrespondingOutput */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCorrespondingOutputHash */
/*! export compilerOperationSigningSerializationCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCoveredBytecode */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationCoveredBytecodeLength */
/*! export compilerOperationSigningSerializationFullBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationFullBCH */
/*! export compilerOperationSigningSerializationLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationLocktime */
/*! export compilerOperationSigningSerializationOutpointIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationOutpointIndex */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationOutpointTransactionHash */
/*! export compilerOperationSigningSerializationOutputValue [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationOutputValue */
/*! export compilerOperationSigningSerializationSequenceNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationSequenceNumber */
/*! export compilerOperationSigningSerializationTransactionOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutpoints */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutpointsHash */
/*! export compilerOperationSigningSerializationTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutputs */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionOutputsHash */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionSequenceNumbers */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationTransactionSequenceNumbersHash */
/*! export compilerOperationSigningSerializationVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationSigningSerializationVersion */
/*! export compilerOperationWalletData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationWalletData */
/*! export compilerOperationsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationsBCH */
/*! export compilerOperationsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .compilerOperationsCommon */
/*! export conditionalFlowControlOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export conditionallyEvaluate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode */
/*! export createAuthenticationProgramInternalStateCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createAuthenticationProgramInternalStateCommon */
/*! export createAuthenticationProgramStateCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createAuthenticationProgramStateCommon */
/*! export createAuthenticationProgramStateCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createAuthenticationProgramStateCommonEmpty */
/*! export createCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .createCompilerBCH */
/*! export createInstructionSetBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTestAuthenticationProgramBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommon [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createTransactionContextCommon */
/*! export createTransactionContextCommonEmpty [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createTransactionContextCommonEmpty */
/*! export createTransactionContextCommonTesting [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .createTransactionContextCommonTesting */
/*! export cryptoOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeBitcoinSignature [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeHdKey */
/*! export decodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeHdPrivateKey */
/*! export decodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeHdPublicKey */
/*! export decodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodePrivateKeyWif */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeTransaction */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .decodeTransactionUnsafe */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPath */
/*! export deriveHdPrivateNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPrivateNodeChild */
/*! export deriveHdPrivateNodeFromSeed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPrivateNodeFromSeed */
/*! export deriveHdPrivateNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPrivateNodeIdentifier */
/*! export deriveHdPublicNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPublicNode */
/*! export deriveHdPublicNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPublicNodeChild */
/*! export deriveHdPublicNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .deriveHdPublicNodeIdentifier */
/*! export disabledOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disabledOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleAuthenticationInstruction */
/*! export disassembleBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleBytecode */
/*! export disassembleBytecodeBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleBytecodeBCH */
/*! export disassembleBytecodeBTC [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleBytecodeBTC */
/*! export disassembleParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleParsedAuthenticationInstruction */
/*! export disassembleParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleParsedAuthenticationInstructionMalformed */
/*! export disassembleParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .disassembleParsedAuthenticationInstructions */
/*! export encodeDataPush [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeHdPrivateKey */
/*! export encodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeHdPublicKey */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeInput */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeInputs */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutpoints */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutput */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutputsForSigning */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeOutputsForTransaction */
/*! export encodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodePrivateKeyWif */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeSequenceNumbersForSigning */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .encodeTransaction */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .extractMissingVariables */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .extractResolvedVariables */
/*! export generateBytecodeMap [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .generateBytecodeMap */
/*! export generatePrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .generatePrivateKey */
/*! export generateSigningSerializationBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .generateTransaction */
/*! export getEmbeddedRipemd160Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedRipemd160Binary */
/*! export getEmbeddedSecp256k1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSecp256k1Binary */
/*! export getEmbeddedSha1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSha1Binary */
/*! export getEmbeddedSha256Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSha256Binary */
/*! export getEmbeddedSha512Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getEmbeddedSha512Binary */
/*! export getFlagsForInstructionSetBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getTransactionHash */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getTransactionHashBE */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .getTransactionHashLE */
/*! export hashOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hashPrevouts [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hashSequence [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .hmacSha256 */
/*! export hmacSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .hmacSha512 */
/*! export incrementOperationCount [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateBIP32Crypto [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateBIP32Crypto */
/*! export instantiateHmacFunction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateHmacFunction */
/*! export instantiateRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateRipemd160 */
/*! export instantiateRipemd160Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateRipemd160Bytes */
/*! export instantiateRustWasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateRustWasm */
/*! export instantiateSecp256k1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1 */
/*! export instantiateSecp256k1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1Bytes */
/*! export instantiateSecp256k1Wasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1Wasm */
/*! export instantiateSecp256k1WasmBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSecp256k1WasmBytes */
/*! export instantiateSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha1 */
/*! export instantiateSha1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha1Bytes */
/*! export instantiateSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha256 */
/*! export instantiateSha256Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha256Bytes */
/*! export instantiateSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha512 */
/*! export instantiateSha512Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .instantiateSha512Bytes */
/*! export instantiateVirtualMachineBCH [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js .instantiateVirtualMachineBCH */
/*! export instructionSetBCHCurrentStrict [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .invalidSatoshis */
/*! export isDefinedSigningSerializationType [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isLegacySigningSerialization [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isMinimalDataPush [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isPayToScriptHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isScriptNumberError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidCompressedPublicKeyEncoding [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidPublicKeyEncoding [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidSignatureEncodingBCHRaw [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidSignatureEncodingBCHTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidSignatureEncodingDER [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isValidUncompressedPublicKeyEncoding [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export isWitnessProgram [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export lengthBytesForPushOpcode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .lengthBytesForPushOpcode */
/*! export mapOverOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export nonOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op0NotEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op1Add [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op1Sub [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Drop [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Dup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Over [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Rot [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op2Swap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export op3Dup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opAbs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opAdd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opAnd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opBin2Num [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opBoolAnd [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opBoolOr [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCat [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckDataSig [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckDataSigVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckLockTimeVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckMultiSig [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckMultiSigVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckSequenceVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckSig [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCheckSigVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opCodeSeparator [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDepth [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDiv [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDrop [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opDup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opElse [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opEndIf [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opEqualVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opFromAltStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opGreaterThan [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opGreaterThanOrEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opHash160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opHash256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opIf [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opIfDup [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opLessThan [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opLessThanOrEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opMax [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opMin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opMod [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNegate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNip [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNop [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNot [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNotIf [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNum2Bin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNumEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNumEqualVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opNumNotEqual [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opOr [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opOver [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opPick [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opReturn [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opReverseBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opRoll [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opRot [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSize [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSplit [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSub [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opSwap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opToAltStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opTuck [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opVerify [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opWithin [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export opXor [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export padMinimallyEncodedScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseBytecode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .parseBytecode */
/*! export parseBytesAsScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushByteOpcodes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushNumberOpcodes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushNumberOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export pushToStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .readAuthenticationInstruction */
/*! export readLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .readTransactionInput */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .readTransactionOutput */
/*! export reservedOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ripemd160Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .ripemd160Base64Bytes */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .safelyExtendCompilationData */
/*! export serializeAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeAuthenticationInstruction */
/*! export serializeAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeAuthenticationInstructions */
/*! export serializeParsedAuthenticationInstruction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeParsedAuthenticationInstruction */
/*! export serializeParsedAuthenticationInstructionMalformed [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeParsedAuthenticationInstructionMalformed */
/*! export serializeParsedAuthenticationInstructions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js .serializeParsedAuthenticationInstructions */
/*! export sha1Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .sha1Base64Bytes */
/*! export sha256Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .sha256Base64Bytes */
/*! export sha512Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .sha512Base64Bytes */
/*! export spliceOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export stackItemIsTruthy [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export stackOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export timeOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export unconditionalFlowControlOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export undefinedOperation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js .undefinedOperation */
/*! export useFourStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useOneScriptNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useOneStackItem [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useSixStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useThreeScriptNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useThreeStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useTwoScriptNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export useTwoStackItems [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateSecp256k1PrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .validateSecp256k1PrivateKey */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js .verifyTransaction */
/*! other exports [maybe provided (runtime-defined)] [no usage info] -> ./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OpcodesBTC": () => /* reexport safe */ _btc_btc__WEBPACK_IMPORTED_MODULE_0__.OpcodesBTC,
/* harmony export */   "AuthenticationErrorBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorBCH,
/* harmony export */   "ConsensusBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.ConsensusBCH,
/* harmony export */   "InstructionSetBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.InstructionSetBCH,
/* harmony export */   "OpcodeAlternateNamesBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodeAlternateNamesBCH,
/* harmony export */   "OpcodeDescriptionsBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodeDescriptionsBCH,
/* harmony export */   "OpcodeDescriptionsUniqueBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodeDescriptionsUniqueBCH,
/* harmony export */   "OpcodesBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.OpcodesBCH,
/* harmony export */   "assembleBitcoinABCScript": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.assembleBitcoinABCScript,
/* harmony export */   "bitcoinABCOpcodes": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.bitcoinABCOpcodes,
/* harmony export */   "bitcoinCashOperations": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.bitcoinCashOperations,
/* harmony export */   "bitwiseOperation": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.bitwiseOperation,
/* harmony export */   "createInstructionSetBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.createInstructionSetBCH,
/* harmony export */   "createTestAuthenticationProgramBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.createTestAuthenticationProgramBCH,
/* harmony export */   "getFlagsForInstructionSetBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.getFlagsForInstructionSetBCH,
/* harmony export */   "instantiateVirtualMachineBCH": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.instantiateVirtualMachineBCH,
/* harmony export */   "instructionSetBCHCurrentStrict": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.instructionSetBCHCurrentStrict,
/* harmony export */   "isPayToScriptHash": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.isPayToScriptHash,
/* harmony export */   "isValidSignatureEncodingBCHRaw": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.isValidSignatureEncodingBCHRaw,
/* harmony export */   "isWitnessProgram": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.isWitnessProgram,
/* harmony export */   "opAnd": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opAnd,
/* harmony export */   "opBin2Num": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opBin2Num,
/* harmony export */   "opCat": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opCat,
/* harmony export */   "opCheckDataSig": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opCheckDataSig,
/* harmony export */   "opCheckDataSigVerify": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opCheckDataSigVerify,
/* harmony export */   "opDiv": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opDiv,
/* harmony export */   "opMod": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opMod,
/* harmony export */   "opNum2Bin": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opNum2Bin,
/* harmony export */   "opOr": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opOr,
/* harmony export */   "opReverseBytes": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opReverseBytes,
/* harmony export */   "opSplit": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opSplit,
/* harmony export */   "opXor": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.opXor,
/* harmony export */   "padMinimallyEncodedScriptNumber": () => /* reexport safe */ _bch_bch__WEBPACK_IMPORTED_MODULE_1__.padMinimallyEncodedScriptNumber,
/* harmony export */   "AuthenticationErrorCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.AuthenticationErrorCommon,
/* harmony export */   "ConsensusCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.ConsensusCommon,
/* harmony export */   "OpcodeDescriptionsCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.OpcodeDescriptionsCommon,
/* harmony export */   "OpcodesCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.OpcodesCommon,
/* harmony export */   "PushOperationConstants": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.PushOperationConstants,
/* harmony export */   "ScriptNumberError": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.ScriptNumberError,
/* harmony export */   "SigningSerializationFlag": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.SigningSerializationFlag,
/* harmony export */   "applyError": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.applyError,
/* harmony export */   "arithmeticOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.arithmeticOperations,
/* harmony export */   "bigIntToScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.bigIntToScriptNumber,
/* harmony export */   "bitwiseOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.bitwiseOperations,
/* harmony export */   "booleanToScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.booleanToScriptNumber,
/* harmony export */   "checkLimitsCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.checkLimitsCommon,
/* harmony export */   "cloneAuthenticationProgramStateCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.cloneAuthenticationProgramStateCommon,
/* harmony export */   "cloneStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.cloneStack,
/* harmony export */   "combineOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.combineOperations,
/* harmony export */   "commonOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.commonOperations,
/* harmony export */   "conditionalFlowControlOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.conditionalFlowControlOperations,
/* harmony export */   "conditionallyEvaluate": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.conditionallyEvaluate,
/* harmony export */   "createAuthenticationProgramInternalStateCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramInternalStateCommon,
/* harmony export */   "createAuthenticationProgramStateCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommon,
/* harmony export */   "createAuthenticationProgramStateCommonEmpty": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationProgramStateCommonEmpty,
/* harmony export */   "createTransactionContextCommon": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createTransactionContextCommon,
/* harmony export */   "createTransactionContextCommonEmpty": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createTransactionContextCommonEmpty,
/* harmony export */   "createTransactionContextCommonTesting": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.createTransactionContextCommonTesting,
/* harmony export */   "cryptoOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.cryptoOperations,
/* harmony export */   "decodeBitcoinSignature": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.decodeBitcoinSignature,
/* harmony export */   "disabledOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.disabledOperation,
/* harmony export */   "disabledOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.disabledOperations,
/* harmony export */   "encodeDataPush": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.encodeDataPush,
/* harmony export */   "generateSigningSerializationBCH": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.generateSigningSerializationBCH,
/* harmony export */   "hashOutputs": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.hashOutputs,
/* harmony export */   "hashPrevouts": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.hashPrevouts,
/* harmony export */   "hashSequence": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.hashSequence,
/* harmony export */   "incrementOperationCount": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.incrementOperationCount,
/* harmony export */   "isDefinedSigningSerializationType": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isDefinedSigningSerializationType,
/* harmony export */   "isLegacySigningSerialization": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isLegacySigningSerialization,
/* harmony export */   "isMinimalDataPush": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isMinimalDataPush,
/* harmony export */   "isScriptNumberError": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isScriptNumberError,
/* harmony export */   "isValidCompressedPublicKeyEncoding": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidCompressedPublicKeyEncoding,
/* harmony export */   "isValidPublicKeyEncoding": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidPublicKeyEncoding,
/* harmony export */   "isValidSignatureEncodingBCHTransaction": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidSignatureEncodingBCHTransaction,
/* harmony export */   "isValidSignatureEncodingDER": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidSignatureEncodingDER,
/* harmony export */   "isValidUncompressedPublicKeyEncoding": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.isValidUncompressedPublicKeyEncoding,
/* harmony export */   "mapOverOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.mapOverOperations,
/* harmony export */   "nonOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.nonOperations,
/* harmony export */   "op0NotEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op0NotEqual,
/* harmony export */   "op1Add": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op1Add,
/* harmony export */   "op1Sub": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op1Sub,
/* harmony export */   "op2Drop": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Drop,
/* harmony export */   "op2Dup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Dup,
/* harmony export */   "op2Over": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Over,
/* harmony export */   "op2Rot": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Rot,
/* harmony export */   "op2Swap": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op2Swap,
/* harmony export */   "op3Dup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.op3Dup,
/* harmony export */   "opAbs": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opAbs,
/* harmony export */   "opAdd": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opAdd,
/* harmony export */   "opBoolAnd": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opBoolAnd,
/* harmony export */   "opBoolOr": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opBoolOr,
/* harmony export */   "opCheckLockTimeVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckLockTimeVerify,
/* harmony export */   "opCheckMultiSig": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckMultiSig,
/* harmony export */   "opCheckMultiSigVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckMultiSigVerify,
/* harmony export */   "opCheckSequenceVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckSequenceVerify,
/* harmony export */   "opCheckSig": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckSig,
/* harmony export */   "opCheckSigVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCheckSigVerify,
/* harmony export */   "opCodeSeparator": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opCodeSeparator,
/* harmony export */   "opDepth": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opDepth,
/* harmony export */   "opDrop": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opDrop,
/* harmony export */   "opDup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opDup,
/* harmony export */   "opElse": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opElse,
/* harmony export */   "opEndIf": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opEndIf,
/* harmony export */   "opEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opEqual,
/* harmony export */   "opEqualVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opEqualVerify,
/* harmony export */   "opFromAltStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opFromAltStack,
/* harmony export */   "opGreaterThan": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opGreaterThan,
/* harmony export */   "opGreaterThanOrEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opGreaterThanOrEqual,
/* harmony export */   "opHash160": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opHash160,
/* harmony export */   "opHash256": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opHash256,
/* harmony export */   "opIf": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opIf,
/* harmony export */   "opIfDup": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opIfDup,
/* harmony export */   "opLessThan": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opLessThan,
/* harmony export */   "opLessThanOrEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opLessThanOrEqual,
/* harmony export */   "opMax": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opMax,
/* harmony export */   "opMin": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opMin,
/* harmony export */   "opNegate": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNegate,
/* harmony export */   "opNip": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNip,
/* harmony export */   "opNop": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNop,
/* harmony export */   "opNot": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNot,
/* harmony export */   "opNotIf": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNotIf,
/* harmony export */   "opNumEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNumEqual,
/* harmony export */   "opNumEqualVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNumEqualVerify,
/* harmony export */   "opNumNotEqual": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opNumNotEqual,
/* harmony export */   "opOver": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opOver,
/* harmony export */   "opPick": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opPick,
/* harmony export */   "opReturn": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opReturn,
/* harmony export */   "opRipemd160": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opRipemd160,
/* harmony export */   "opRoll": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opRoll,
/* harmony export */   "opRot": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opRot,
/* harmony export */   "opSha1": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSha1,
/* harmony export */   "opSha256": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSha256,
/* harmony export */   "opSize": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSize,
/* harmony export */   "opSub": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSub,
/* harmony export */   "opSwap": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opSwap,
/* harmony export */   "opToAltStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opToAltStack,
/* harmony export */   "opTuck": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opTuck,
/* harmony export */   "opVerify": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opVerify,
/* harmony export */   "opWithin": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.opWithin,
/* harmony export */   "parseBytesAsScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.parseBytesAsScriptNumber,
/* harmony export */   "pushByteOpcodes": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushByteOpcodes,
/* harmony export */   "pushNumberOpcodes": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushNumberOpcodes,
/* harmony export */   "pushNumberOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushNumberOperations,
/* harmony export */   "pushOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushOperation,
/* harmony export */   "pushOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushOperations,
/* harmony export */   "pushToStack": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.pushToStack,
/* harmony export */   "readLocktime": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.readLocktime,
/* harmony export */   "reservedOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.reservedOperation,
/* harmony export */   "spliceOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.spliceOperations,
/* harmony export */   "stackItemIsTruthy": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.stackItemIsTruthy,
/* harmony export */   "stackOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.stackOperations,
/* harmony export */   "timeOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.timeOperations,
/* harmony export */   "unconditionalFlowControlOperations": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.unconditionalFlowControlOperations,
/* harmony export */   "undefinedOperation": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.undefinedOperation,
/* harmony export */   "useFourStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useFourStackItems,
/* harmony export */   "useOneScriptNumber": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useOneScriptNumber,
/* harmony export */   "useOneStackItem": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useOneStackItem,
/* harmony export */   "useSixStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useSixStackItems,
/* harmony export */   "useThreeScriptNumbers": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useThreeScriptNumbers,
/* harmony export */   "useThreeStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useThreeStackItems,
/* harmony export */   "useTwoScriptNumbers": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useTwoScriptNumbers,
/* harmony export */   "useTwoStackItems": () => /* reexport safe */ _common_common__WEBPACK_IMPORTED_MODULE_2__.useTwoStackItems,
/* harmony export */   "assembleBytecode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.assembleBytecode,
/* harmony export */   "assembleBytecodeBCH": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.assembleBytecodeBCH,
/* harmony export */   "assembleBytecodeBTC": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.assembleBytecodeBTC,
/* harmony export */   "authenticationInstructionIsMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionIsMalformed,
/* harmony export */   "authenticationInstructionsAreMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreMalformed,
/* harmony export */   "authenticationInstructionsAreNotMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.authenticationInstructionsAreNotMalformed,
/* harmony export */   "disassembleAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleAuthenticationInstruction,
/* harmony export */   "disassembleBytecode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleBytecode,
/* harmony export */   "disassembleBytecodeBCH": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleBytecodeBCH,
/* harmony export */   "disassembleBytecodeBTC": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleBytecodeBTC,
/* harmony export */   "disassembleParsedAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleParsedAuthenticationInstruction,
/* harmony export */   "disassembleParsedAuthenticationInstructionMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleParsedAuthenticationInstructionMalformed,
/* harmony export */   "disassembleParsedAuthenticationInstructions": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.disassembleParsedAuthenticationInstructions,
/* harmony export */   "generateBytecodeMap": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.generateBytecodeMap,
/* harmony export */   "lengthBytesForPushOpcode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.lengthBytesForPushOpcode,
/* harmony export */   "parseBytecode": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.parseBytecode,
/* harmony export */   "readAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.readAuthenticationInstruction,
/* harmony export */   "serializeAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeAuthenticationInstruction,
/* harmony export */   "serializeAuthenticationInstructions": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeAuthenticationInstructions,
/* harmony export */   "serializeParsedAuthenticationInstruction": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeParsedAuthenticationInstruction,
/* harmony export */   "serializeParsedAuthenticationInstructionMalformed": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeParsedAuthenticationInstructionMalformed,
/* harmony export */   "serializeParsedAuthenticationInstructions": () => /* reexport safe */ _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__.serializeParsedAuthenticationInstructions
/* harmony export */ });
/* harmony import */ var _btc_btc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./btc/btc */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/btc/btc.js");
/* harmony import */ var _bch_bch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bch/bch */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/bch/bch.js");
/* harmony import */ var _common_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/common */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/common/common.js");
/* harmony import */ var _instruction_sets_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instruction-sets-utils */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-utils.js");
/* harmony import */ var _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instruction-sets-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets-types.js");
/* harmony import */ var _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__) if(["default","OpcodesBTC","AuthenticationErrorBCH","ConsensusBCH","InstructionSetBCH","OpcodeAlternateNamesBCH","OpcodeDescriptionsBCH","OpcodeDescriptionsUniqueBCH","OpcodesBCH","assembleBitcoinABCScript","bitcoinABCOpcodes","bitcoinCashOperations","bitwiseOperation","createInstructionSetBCH","createTestAuthenticationProgramBCH","getFlagsForInstructionSetBCH","instantiateVirtualMachineBCH","instructionSetBCHCurrentStrict","isPayToScriptHash","isValidSignatureEncodingBCHRaw","isWitnessProgram","opAnd","opBin2Num","opCat","opCheckDataSig","opCheckDataSigVerify","opDiv","opMod","opNum2Bin","opOr","opReverseBytes","opSplit","opXor","padMinimallyEncodedScriptNumber","AuthenticationErrorCommon","ConsensusCommon","OpcodeDescriptionsCommon","OpcodesCommon","PushOperationConstants","ScriptNumberError","SigningSerializationFlag","applyError","arithmeticOperations","bigIntToScriptNumber","bitwiseOperations","booleanToScriptNumber","checkLimitsCommon","cloneAuthenticationProgramStateCommon","cloneStack","combineOperations","commonOperations","conditionalFlowControlOperations","conditionallyEvaluate","createAuthenticationProgramInternalStateCommon","createAuthenticationProgramStateCommon","createAuthenticationProgramStateCommonEmpty","createTransactionContextCommon","createTransactionContextCommonEmpty","createTransactionContextCommonTesting","cryptoOperations","decodeBitcoinSignature","disabledOperation","disabledOperations","encodeDataPush","generateSigningSerializationBCH","hashOutputs","hashPrevouts","hashSequence","incrementOperationCount","isDefinedSigningSerializationType","isLegacySigningSerialization","isMinimalDataPush","isScriptNumberError","isValidCompressedPublicKeyEncoding","isValidPublicKeyEncoding","isValidSignatureEncodingBCHTransaction","isValidSignatureEncodingDER","isValidUncompressedPublicKeyEncoding","mapOverOperations","nonOperations","op0NotEqual","op1Add","op1Sub","op2Drop","op2Dup","op2Over","op2Rot","op2Swap","op3Dup","opAbs","opAdd","opBoolAnd","opBoolOr","opCheckLockTimeVerify","opCheckMultiSig","opCheckMultiSigVerify","opCheckSequenceVerify","opCheckSig","opCheckSigVerify","opCodeSeparator","opDepth","opDrop","opDup","opElse","opEndIf","opEqual","opEqualVerify","opFromAltStack","opGreaterThan","opGreaterThanOrEqual","opHash160","opHash256","opIf","opIfDup","opLessThan","opLessThanOrEqual","opMax","opMin","opNegate","opNip","opNop","opNot","opNotIf","opNumEqual","opNumEqualVerify","opNumNotEqual","opOver","opPick","opReturn","opRipemd160","opRoll","opRot","opSha1","opSha256","opSize","opSub","opSwap","opToAltStack","opTuck","opVerify","opWithin","parseBytesAsScriptNumber","pushByteOpcodes","pushNumberOpcodes","pushNumberOperations","pushOperation","pushOperations","pushToStack","readLocktime","reservedOperation","spliceOperations","stackItemIsTruthy","stackOperations","timeOperations","unconditionalFlowControlOperations","undefinedOperation","useFourStackItems","useOneScriptNumber","useOneStackItem","useSixStackItems","useThreeScriptNumbers","useThreeStackItems","useTwoScriptNumbers","useTwoStackItems","assembleBytecode","assembleBytecodeBCH","assembleBytecodeBTC","authenticationInstructionIsMalformed","authenticationInstructionsAreMalformed","authenticationInstructionsAreNotMalformed","disassembleAuthenticationInstruction","disassembleBytecode","disassembleBytecodeBCH","disassembleBytecodeBTC","disassembleParsedAuthenticationInstruction","disassembleParsedAuthenticationInstructionMalformed","disassembleParsedAuthenticationInstructions","generateBytecodeMap","lengthBytesForPushOpcode","parseBytecode","readAuthenticationInstruction","serializeAuthenticationInstruction","serializeAuthenticationInstructions","serializeParsedAuthenticationInstruction","serializeParsedAuthenticationInstructionMalformed","serializeParsedAuthenticationInstructions"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _instruction_sets_types__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);





//# sourceMappingURL=instruction-sets.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export createAuthenticationVirtualMachine [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAuthenticationVirtualMachine": () => /* binding */ createAuthenticationVirtualMachine
/* harmony export */ });
/* harmony import */ var _format_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../format/format */ "./node_modules/@bitauth/libauth/build/module/lib/format/format.js");

/**
 * Create an AuthenticationVirtualMachine to evaluate authentication programs
 * constructed from operations in the `instructionSet`.
 * @param instructionSet - an `InstructionSet`
 */
const createAuthenticationVirtualMachine = (instructionSet) => {
    const availableOpcodes = 256;
    const operators = (0,_format_format__WEBPACK_IMPORTED_MODULE_0__.range)(availableOpcodes).map((codepoint) => instructionSet.operations[codepoint] === undefined
        ? instructionSet.undefined
        : instructionSet.operations[codepoint]);
    const getCodepoint = (state) => state.instructions[state.ip];
    const after = (state) => {
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        state.ip += 1;
        return state;
    };
    const getOperation = (state) => operators[getCodepoint(state).opcode];
    const stateStepMutate = (state) => after(getOperation(state)(state));
    const stateContinue = instructionSet.continue;
    /**
     * When we get real tail call optimization, this can be replaced
     * with recursion.
     */
    const untilComplete = (state, stepFunction) => {
        // eslint-disable-next-line functional/no-loop-statement
        while (stateContinue(state)) {
            // eslint-disable-next-line functional/no-expression-statement, no-param-reassign
            state = stepFunction(state);
        }
        return state;
    };
    const clone = (state) => instructionSet.clone(state);
    const { verify } = instructionSet;
    const stateEvaluate = (state) => untilComplete(clone(state), stateStepMutate);
    const stateDebugStep = (state) => {
        const operator = getOperation(state);
        return after(operator(clone(state)));
    };
    const stateDebug = (state) => {
        const trace = [];
        // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
        trace.push(state);
        // eslint-disable-next-line functional/no-expression-statement
        untilComplete(state, (currentState) => {
            const nextState = stateDebugStep(currentState);
            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
            trace.push(nextState);
            return nextState;
        });
        return trace;
    };
    const stateStep = (state) => stateStepMutate(clone(state));
    const evaluate = (program) => instructionSet.evaluate(program, stateEvaluate);
    const debug = (program) => {
        const results = [];
        const proxyDebug = (state) => {
            const debugResult = stateDebug(state);
            // eslint-disable-next-line functional/no-expression-statement, functional/immutable-data
            results.push(...debugResult);
            return (debugResult[debugResult.length - 1] ??
                state);
        };
        const finalResult = instructionSet.evaluate(program, proxyDebug);
        return [...results, finalResult];
    };
    return {
        debug,
        evaluate,
        stateContinue,
        stateDebug,
        stateEvaluate,
        stateStep,
        stateStepMutate,
        verify,
    };
};
//# sourceMappingURL=virtual-machine.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm-types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/vm-types.js ***!
  \***********************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

//# sourceMappingURL=vm-types.js.map

/***/ }),

/***/ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bitauth/libauth/build/module/lib/vm/vm.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export CompilerDefaults [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export CompressionFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ConsensusCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ContextFlag [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdKeyVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeCrackingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export HdNodeDerivationError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export OpcodesBTC [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export SigningSerializationAlgorithmIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export TransactionDecodingError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export WalletImportFormatError [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecodeBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export assembleBytecodeBTC [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export attemptCompilerOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationInstructionIsMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationInstructionsAreMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationInstructionsAreNotMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export authenticationTemplateToCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export checkLimitsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export cloneAuthenticationProgramStateCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export cloneStack [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export commonOperations [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileInputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compileOutputTemplate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAddressData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationAttemptBytecodeResolution [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockHeight [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationCurrentBlockTime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHdKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperAddressIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperCompileScript [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperComputeSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdKeyPrivate [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperDeriveHdPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperGenerateCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperHdKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeyDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperKeySignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationHelperUnknownEntity [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyEcdsaSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeyPublicKeyCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrDataSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationKeySchnorrSignatureBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationRequires [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCorrespondingOutputHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationCoveredBytecodeLength [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationFullBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationLocktime [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointIndex [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutpointTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationOutputValue [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationSequenceNumber [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutpointsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionOutputsHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbers [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationTransactionSequenceNumbersHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationSigningSerializationVersion [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationWalletData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export compilerOperationsCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export crackHdPrivateNodeFromHdPublicNodeAndChildPrivateNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramInternalStateCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramStateCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationProgramStateCommonEmpty [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createAuthenticationVirtualMachine [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createCompilerBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommon [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommonEmpty [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export createTransactionContextCommonTesting [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export decodeTransactionUnsafe [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export default [not provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveHdPath [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeFromSeed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPrivateNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeChild [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export deriveHdPublicNodeIdentifier [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleBytecodeBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleBytecodeBTC [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleParsedAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleParsedAuthenticationInstructionMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export disassembleParsedAuthenticationInstructions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeHdPublicKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeInputs [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutpoints [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeOutputsForTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodePrivateKeyWif [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeSequenceNumbersForSigning [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export encodeTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractMissingVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export extractResolvedVariables [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateBytecodeMap [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generatePrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export generateTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedRipemd160Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSecp256k1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha1Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha256Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getEmbeddedSha512Binary [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHash [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashBE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export getTransactionHashLE [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export hmacSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateBIP32Crypto [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateHmacFunction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRipemd160Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateRustWasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1Wasm [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSecp256k1WasmBytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha1Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha256Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512 [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateSha512Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export instantiateVirtualMachineBCH [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export invalidSatoshis [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export lengthBytesForPushOpcode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export parseBytecode [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionInput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export readTransactionOutput [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export ripemd160Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export safelyExtendCompilationData [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeAuthenticationInstructions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeParsedAuthenticationInstruction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeParsedAuthenticationInstructionMalformed [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export serializeParsedAuthenticationInstructions [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha1Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha256Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export sha512Base64Bytes [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export undefinedOperation [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export validateSecp256k1PrivateKey [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! export verifyTransaction [maybe provided (runtime-defined)] [no usage info] [provision prevents renaming (no use info)] */
/*! other exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.n, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAuthenticationVirtualMachine": () => /* reexport safe */ _virtual_machine__WEBPACK_IMPORTED_MODULE_2__.createAuthenticationVirtualMachine
/* harmony export */ });
/* harmony import */ var _instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instruction-sets/instruction-sets */ "./node_modules/@bitauth/libauth/build/module/lib/vm/instruction-sets/instruction-sets.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _instruction_sets_instruction_sets__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _vm_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vm-types */ "./node_modules/@bitauth/libauth/build/module/lib/vm/vm-types.js");
/* harmony import */ var _vm_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vm_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _vm_types__WEBPACK_IMPORTED_MODULE_1__) if(["default","ConsensusCommon","OpcodesBTC","assembleBytecode","assembleBytecodeBCH","assembleBytecodeBTC","authenticationInstructionIsMalformed","authenticationInstructionsAreMalformed","authenticationInstructionsAreNotMalformed","checkLimitsCommon","cloneAuthenticationProgramStateCommon","cloneStack","commonOperations","createAuthenticationProgramInternalStateCommon","createAuthenticationProgramStateCommon","createAuthenticationProgramStateCommonEmpty","createTransactionContextCommon","createTransactionContextCommonEmpty","createTransactionContextCommonTesting","disassembleAuthenticationInstruction","disassembleBytecode","disassembleBytecodeBCH","disassembleBytecodeBTC","disassembleParsedAuthenticationInstruction","disassembleParsedAuthenticationInstructionMalformed","disassembleParsedAuthenticationInstructions","generateBytecodeMap","instantiateVirtualMachineBCH","lengthBytesForPushOpcode","parseBytecode","readAuthenticationInstruction","serializeAuthenticationInstruction","serializeAuthenticationInstructions","serializeParsedAuthenticationInstruction","serializeParsedAuthenticationInstructionMalformed","serializeParsedAuthenticationInstructions","undefinedOperation"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _vm_types__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _virtual_machine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./virtual-machine */ "./node_modules/@bitauth/libauth/build/module/lib/vm/virtual-machine.js");



//# sourceMappingURL=vm.js.map

/***/ }),

/***/ "./node_modules/grpc-bchrpc-browser/dist/bchrpc.bundle.js":
/*!****************************************************************!*\
  !*** ./node_modules/grpc-bchrpc-browser/dist/bchrpc.bundle.js ***!
  \****************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 3:2-16 */
/***/ ((module) => {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else { var i, a; }
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_538__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_538__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_538__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_538__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_538__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_538__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__nested_webpack_require_538__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__nested_webpack_require_538__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __nested_webpack_require_538__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__nested_webpack_require_538__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_538__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_538__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_538__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_538__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_538__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_538__(__nested_webpack_require_538__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __nested_webpack_require_4002__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__nested_webpack_require_4002__(1), exports);
__exportStar(__nested_webpack_require_4002__(8), exports);
var client_1 = __nested_webpack_require_4002__(10);
Object.defineProperty(exports, "GrpcClient", { enumerable: true, get: function () { return client_1.default; } });
__exportStar(__nested_webpack_require_4002__(11), exports);
__exportStar(__nested_webpack_require_4002__(12), exports);


/***/ }),
/* 1 */
/***/ (function(module, exports, __nested_webpack_require_4991__) {

// source: bchrpc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = __nested_webpack_require_4991__(2);
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pb.Block', null, global);
goog.exportSymbol('proto.pb.Block.TransactionData', null, global);
goog.exportSymbol('proto.pb.Block.TransactionData.TxidsOrTxsCase', null, global);
goog.exportSymbol('proto.pb.BlockInfo', null, global);
goog.exportSymbol('proto.pb.BlockNotification', null, global);
goog.exportSymbol('proto.pb.BlockNotification.BlockCase', null, global);
goog.exportSymbol('proto.pb.BlockNotification.Type', null, global);
goog.exportSymbol('proto.pb.GetAddressTransactionsRequest', null, global);
goog.exportSymbol('proto.pb.GetAddressTransactionsRequest.StartBlockCase', null, global);
goog.exportSymbol('proto.pb.GetAddressTransactionsResponse', null, global);
goog.exportSymbol('proto.pb.GetAddressUnspentOutputsRequest', null, global);
goog.exportSymbol('proto.pb.GetAddressUnspentOutputsResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockFilterRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockFilterRequest.HashOrHeightCase', null, global);
goog.exportSymbol('proto.pb.GetBlockFilterResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockInfoRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockInfoRequest.HashOrHeightCase', null, global);
goog.exportSymbol('proto.pb.GetBlockInfoResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockRequest.HashOrHeightCase', null, global);
goog.exportSymbol('proto.pb.GetBlockResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockchainInfoRequest', null, global);
goog.exportSymbol('proto.pb.GetBlockchainInfoResponse', null, global);
goog.exportSymbol('proto.pb.GetBlockchainInfoResponse.BitcoinNet', null, global);
goog.exportSymbol('proto.pb.GetHeadersRequest', null, global);
goog.exportSymbol('proto.pb.GetHeadersResponse', null, global);
goog.exportSymbol('proto.pb.GetMempoolInfoRequest', null, global);
goog.exportSymbol('proto.pb.GetMempoolInfoResponse', null, global);
goog.exportSymbol('proto.pb.GetMempoolRequest', null, global);
goog.exportSymbol('proto.pb.GetMempoolResponse', null, global);
goog.exportSymbol('proto.pb.GetMempoolResponse.TransactionData', null, global);
goog.exportSymbol('proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase', null, global);
goog.exportSymbol('proto.pb.GetMerkleProofRequest', null, global);
goog.exportSymbol('proto.pb.GetMerkleProofResponse', null, global);
goog.exportSymbol('proto.pb.GetRawAddressTransactionsRequest', null, global);
goog.exportSymbol('proto.pb.GetRawAddressTransactionsRequest.StartBlockCase', null, global);
goog.exportSymbol('proto.pb.GetRawAddressTransactionsResponse', null, global);
goog.exportSymbol('proto.pb.GetRawBlockRequest', null, global);
goog.exportSymbol('proto.pb.GetRawBlockRequest.HashOrHeightCase', null, global);
goog.exportSymbol('proto.pb.GetRawBlockResponse', null, global);
goog.exportSymbol('proto.pb.GetRawTransactionRequest', null, global);
goog.exportSymbol('proto.pb.GetRawTransactionResponse', null, global);
goog.exportSymbol('proto.pb.GetTransactionRequest', null, global);
goog.exportSymbol('proto.pb.GetTransactionResponse', null, global);
goog.exportSymbol('proto.pb.GetUnspentOutputRequest', null, global);
goog.exportSymbol('proto.pb.GetUnspentOutputResponse', null, global);
goog.exportSymbol('proto.pb.MempoolTransaction', null, global);
goog.exportSymbol('proto.pb.SubmitTransactionRequest', null, global);
goog.exportSymbol('proto.pb.SubmitTransactionResponse', null, global);
goog.exportSymbol('proto.pb.SubscribeBlocksRequest', null, global);
goog.exportSymbol('proto.pb.SubscribeTransactionsRequest', null, global);
goog.exportSymbol('proto.pb.Transaction', null, global);
goog.exportSymbol('proto.pb.Transaction.Input', null, global);
goog.exportSymbol('proto.pb.Transaction.Input.Outpoint', null, global);
goog.exportSymbol('proto.pb.Transaction.Output', null, global);
goog.exportSymbol('proto.pb.TransactionFilter', null, global);
goog.exportSymbol('proto.pb.TransactionNotification', null, global);
goog.exportSymbol('proto.pb.TransactionNotification.TransactionCase', null, global);
goog.exportSymbol('proto.pb.TransactionNotification.Type', null, global);
goog.exportSymbol('proto.pb.UnspentOutput', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMempoolInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMempoolInfoRequest.displayName = 'proto.pb.GetMempoolInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMempoolInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMempoolInfoResponse.displayName = 'proto.pb.GetMempoolInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMempoolRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMempoolRequest.displayName = 'proto.pb.GetMempoolRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetMempoolResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetMempoolResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMempoolResponse.displayName = 'proto.pb.GetMempoolResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMempoolResponse.TransactionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_);
};
goog.inherits(proto.pb.GetMempoolResponse.TransactionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMempoolResponse.TransactionData.displayName = 'proto.pb.GetMempoolResponse.TransactionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockchainInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockchainInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockchainInfoRequest.displayName = 'proto.pb.GetBlockchainInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockchainInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockchainInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockchainInfoResponse.displayName = 'proto.pb.GetBlockchainInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetBlockInfoRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetBlockInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockInfoRequest.displayName = 'proto.pb.GetBlockInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockInfoResponse.displayName = 'proto.pb.GetBlockInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetBlockRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetBlockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockRequest.displayName = 'proto.pb.GetBlockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockResponse.displayName = 'proto.pb.GetBlockResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawBlockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetRawBlockRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetRawBlockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetRawBlockRequest.displayName = 'proto.pb.GetRawBlockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawBlockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetRawBlockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetRawBlockResponse.displayName = 'proto.pb.GetRawBlockResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockFilterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetBlockFilterRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetBlockFilterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockFilterRequest.displayName = 'proto.pb.GetBlockFilterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetBlockFilterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetBlockFilterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetBlockFilterResponse.displayName = 'proto.pb.GetBlockFilterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetHeadersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetHeadersRequest.repeatedFields_, null);
};
goog.inherits(proto.pb.GetHeadersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetHeadersRequest.displayName = 'proto.pb.GetHeadersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetHeadersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetHeadersResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetHeadersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetHeadersResponse.displayName = 'proto.pb.GetHeadersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetTransactionRequest.displayName = 'proto.pb.GetTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetTransactionResponse.displayName = 'proto.pb.GetTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetRawTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetRawTransactionRequest.displayName = 'proto.pb.GetRawTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetRawTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetRawTransactionResponse.displayName = 'proto.pb.GetRawTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetAddressTransactionsRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetAddressTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetAddressTransactionsRequest.displayName = 'proto.pb.GetAddressTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetAddressTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetAddressTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetAddressTransactionsResponse.displayName = 'proto.pb.GetAddressTransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawAddressTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_);
};
goog.inherits(proto.pb.GetRawAddressTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetRawAddressTransactionsRequest.displayName = 'proto.pb.GetRawAddressTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetRawAddressTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetRawAddressTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetRawAddressTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetRawAddressTransactionsResponse.displayName = 'proto.pb.GetRawAddressTransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressUnspentOutputsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetAddressUnspentOutputsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetAddressUnspentOutputsRequest.displayName = 'proto.pb.GetAddressUnspentOutputsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetAddressUnspentOutputsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetAddressUnspentOutputsResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetAddressUnspentOutputsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetAddressUnspentOutputsResponse.displayName = 'proto.pb.GetAddressUnspentOutputsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetUnspentOutputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetUnspentOutputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetUnspentOutputRequest.displayName = 'proto.pb.GetUnspentOutputRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetUnspentOutputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetUnspentOutputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetUnspentOutputResponse.displayName = 'proto.pb.GetUnspentOutputResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMerkleProofRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetMerkleProofRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMerkleProofRequest.displayName = 'proto.pb.GetMerkleProofRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetMerkleProofResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.GetMerkleProofResponse.repeatedFields_, null);
};
goog.inherits(proto.pb.GetMerkleProofResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.GetMerkleProofResponse.displayName = 'proto.pb.GetMerkleProofResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubmitTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubmitTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.SubmitTransactionRequest.displayName = 'proto.pb.SubmitTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubmitTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubmitTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.SubmitTransactionResponse.displayName = 'proto.pb.SubmitTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubscribeTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubscribeTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.SubscribeTransactionsRequest.displayName = 'proto.pb.SubscribeTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.SubscribeBlocksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.SubscribeBlocksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.SubscribeBlocksRequest.displayName = 'proto.pb.SubscribeBlocksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BlockNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.BlockNotification.oneofGroups_);
};
goog.inherits(proto.pb.BlockNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BlockNotification.displayName = 'proto.pb.BlockNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TransactionNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.TransactionNotification.oneofGroups_);
};
goog.inherits(proto.pb.TransactionNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TransactionNotification.displayName = 'proto.pb.TransactionNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.BlockInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.BlockInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.BlockInfo.displayName = 'proto.pb.BlockInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Block = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.Block.repeatedFields_, null);
};
goog.inherits(proto.pb.Block, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Block.displayName = 'proto.pb.Block';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Block.TransactionData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pb.Block.TransactionData.oneofGroups_);
};
goog.inherits(proto.pb.Block.TransactionData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Block.TransactionData.displayName = 'proto.pb.Block.TransactionData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.Transaction.repeatedFields_, null);
};
goog.inherits(proto.pb.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Transaction.displayName = 'proto.pb.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction.Input = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Transaction.Input, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Transaction.Input.displayName = 'proto.pb.Transaction.Input';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction.Input.Outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Transaction.Input.Outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Transaction.Input.Outpoint.displayName = 'proto.pb.Transaction.Input.Outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Transaction.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Transaction.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Transaction.Output.displayName = 'proto.pb.Transaction.Output';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.MempoolTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.MempoolTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.MempoolTransaction.displayName = 'proto.pb.MempoolTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.UnspentOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.UnspentOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.UnspentOutput.displayName = 'proto.pb.UnspentOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.TransactionFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pb.TransactionFilter.repeatedFields_, null);
};
goog.inherits(proto.pb.TransactionFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.TransactionFilter.displayName = 'proto.pb.TransactionFilter';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolInfoRequest}
 */
proto.pb.GetMempoolInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolInfoRequest;
  return proto.pb.GetMempoolInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolInfoRequest}
 */
proto.pb.GetMempoolInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolInfoResponse}
 */
proto.pb.GetMempoolInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolInfoResponse;
  return proto.pb.GetMempoolInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolInfoResponse}
 */
proto.pb.GetMempoolInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBytes();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 size = 1;
 * @return {number}
 */
proto.pb.GetMempoolInfoResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetMempoolInfoResponse} returns this
 */
proto.pb.GetMempoolInfoResponse.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 bytes = 2;
 * @return {number}
 */
proto.pb.GetMempoolInfoResponse.prototype.getBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetMempoolInfoResponse} returns this
 */
proto.pb.GetMempoolInfoResponse.prototype.setBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullTransactions: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolRequest}
 */
proto.pb.GetMempoolRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolRequest;
  return proto.pb.GetMempoolRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolRequest}
 */
proto.pb.GetMempoolRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullTransactions();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool full_transactions = 1;
 * @return {boolean}
 */
proto.pb.GetMempoolRequest.prototype.getFullTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetMempoolRequest} returns this
 */
proto.pb.GetMempoolRequest.prototype.setFullTransactions = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetMempoolResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionDataList: jspb.Message.toObjectList(msg.getTransactionDataList(),
    proto.pb.GetMempoolResponse.TransactionData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolResponse}
 */
proto.pb.GetMempoolResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolResponse;
  return proto.pb.GetMempoolResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolResponse}
 */
proto.pb.GetMempoolResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.GetMempoolResponse.TransactionData;
      reader.readMessage(value,proto.pb.GetMempoolResponse.TransactionData.deserializeBinaryFromReader);
      msg.addTransactionData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.GetMempoolResponse.TransactionData.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetMempoolResponse.TransactionData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase = {
  TXIDS_OR_TXS_NOT_SET: 0,
  TRANSACTION_HASH: 1,
  TRANSACTION: 2
};

/**
 * @return {proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTxidsOrTxsCase = function() {
  return /** @type {proto.pb.GetMempoolResponse.TransactionData.TxidsOrTxsCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMempoolResponse.TransactionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMempoolResponse.TransactionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.TransactionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64(),
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMempoolResponse.TransactionData}
 */
proto.pb.GetMempoolResponse.TransactionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMempoolResponse.TransactionData;
  return proto.pb.GetMempoolResponse.TransactionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMempoolResponse.TransactionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMempoolResponse.TransactionData}
 */
proto.pb.GetMempoolResponse.TransactionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    case 2:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMempoolResponse.TransactionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMempoolResponse.TransactionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMempoolResponse.TransactionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetMempoolResponse.TransactionData} returns this
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.setTransactionHash = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetMempoolResponse.TransactionData} returns this
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.clearTransactionHash = function() {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.hasTransactionHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Transaction transaction = 2;
 * @return {?proto.pb.Transaction}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 2));
};


/**
 * @param {?proto.pb.Transaction|undefined} value
 * @return {!proto.pb.GetMempoolResponse.TransactionData} returns this
*/
proto.pb.GetMempoolResponse.TransactionData.prototype.setTransaction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pb.GetMempoolResponse.TransactionData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.GetMempoolResponse.TransactionData} returns this
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetMempoolResponse.TransactionData.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TransactionData transaction_data = 1;
 * @return {!Array<!proto.pb.GetMempoolResponse.TransactionData>}
 */
proto.pb.GetMempoolResponse.prototype.getTransactionDataList = function() {
  return /** @type{!Array<!proto.pb.GetMempoolResponse.TransactionData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.GetMempoolResponse.TransactionData, 1));
};


/**
 * @param {!Array<!proto.pb.GetMempoolResponse.TransactionData>} value
 * @return {!proto.pb.GetMempoolResponse} returns this
*/
proto.pb.GetMempoolResponse.prototype.setTransactionDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.GetMempoolResponse.TransactionData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.GetMempoolResponse.TransactionData}
 */
proto.pb.GetMempoolResponse.prototype.addTransactionData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.GetMempoolResponse.TransactionData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetMempoolResponse} returns this
 */
proto.pb.GetMempoolResponse.prototype.clearTransactionDataList = function() {
  return this.setTransactionDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockchainInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockchainInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockchainInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockchainInfoRequest}
 */
proto.pb.GetBlockchainInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockchainInfoRequest;
  return proto.pb.GetBlockchainInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockchainInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockchainInfoRequest}
 */
proto.pb.GetBlockchainInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockchainInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockchainInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockchainInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockchainInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockchainInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockchainInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitcoinNet: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bestHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bestBlockHash: msg.getBestBlockHash_asB64(),
    difficulty: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    medianTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    txIndex: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    addrIndex: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockchainInfoResponse}
 */
proto.pb.GetBlockchainInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockchainInfoResponse;
  return proto.pb.GetBlockchainInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockchainInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockchainInfoResponse}
 */
proto.pb.GetBlockchainInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.GetBlockchainInfoResponse.BitcoinNet} */ (reader.readEnum());
      msg.setBitcoinNet(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBestHeight(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBestBlockHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDifficulty(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMedianTime(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTxIndex(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAddrIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockchainInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockchainInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockchainInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockchainInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitcoinNet();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBestHeight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBestBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getMedianTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTxIndex();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAddrIndex();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.GetBlockchainInfoResponse.BitcoinNet = {
  MAINNET: 0,
  REGTEST: 1,
  TESTNET3: 2,
  SIMNET: 3
};

/**
 * optional BitcoinNet bitcoin_net = 1;
 * @return {!proto.pb.GetBlockchainInfoResponse.BitcoinNet}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBitcoinNet = function() {
  return /** @type {!proto.pb.GetBlockchainInfoResponse.BitcoinNet} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pb.GetBlockchainInfoResponse.BitcoinNet} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setBitcoinNet = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 best_height = 2;
 * @return {number}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setBestHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes best_block_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes best_block_hash = 3;
 * This is a type-conversion wrapper around `getBestBlockHash()`
 * @return {string}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBestBlockHash()));
};


/**
 * optional bytes best_block_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBestBlockHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getBestBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBestBlockHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setBestBlockHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double difficulty = 4;
 * @return {number}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getDifficulty = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 median_time = 5;
 * @return {number}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getMedianTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setMedianTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool tx_index = 6;
 * @return {boolean}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getTxIndex = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setTxIndex = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool addr_index = 7;
 * @return {boolean}
 */
proto.pb.GetBlockchainInfoResponse.prototype.getAddrIndex = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetBlockchainInfoResponse} returns this
 */
proto.pb.GetBlockchainInfoResponse.prototype.setAddrIndex = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetBlockInfoRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetBlockInfoRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetBlockInfoRequest.HashOrHeightCase}
 */
proto.pb.GetBlockInfoRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetBlockInfoRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetBlockInfoRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockInfoRequest}
 */
proto.pb.GetBlockInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockInfoRequest;
  return proto.pb.GetBlockInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockInfoRequest}
 */
proto.pb.GetBlockInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockInfoRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetBlockInfoRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockInfoRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetBlockInfoRequest} returns this
 */
proto.pb.GetBlockInfoRequest.prototype.setHash = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetBlockInfoRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetBlockInfoRequest} returns this
 */
proto.pb.GetBlockInfoRequest.prototype.clearHash = function() {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetBlockInfoRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockInfoRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetBlockInfoRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetBlockInfoRequest} returns this
 */
proto.pb.GetBlockInfoRequest.prototype.setHeight = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetBlockInfoRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetBlockInfoRequest} returns this
 */
proto.pb.GetBlockInfoRequest.prototype.clearHeight = function() {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetBlockInfoRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockInfoRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.pb.BlockInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockInfoResponse}
 */
proto.pb.GetBlockInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockInfoResponse;
  return proto.pb.GetBlockInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockInfoResponse}
 */
proto.pb.GetBlockInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional BlockInfo info = 1;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.GetBlockInfoResponse.prototype.getInfo = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 1));
};


/**
 * @param {?proto.pb.BlockInfo|undefined} value
 * @return {!proto.pb.GetBlockInfoResponse} returns this
*/
proto.pb.GetBlockInfoResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.GetBlockInfoResponse} returns this
 */
proto.pb.GetBlockInfoResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockInfoResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetBlockRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetBlockRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetBlockRequest.HashOrHeightCase}
 */
proto.pb.GetBlockRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetBlockRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetBlockRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fullTransactions: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockRequest}
 */
proto.pb.GetBlockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockRequest;
  return proto.pb.GetBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockRequest}
 */
proto.pb.GetBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFullTransactions();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetBlockRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetBlockRequest} returns this
 */
proto.pb.GetBlockRequest.prototype.setHash = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetBlockRequest} returns this
 */
proto.pb.GetBlockRequest.prototype.clearHash = function() {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetBlockRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetBlockRequest} returns this
 */
proto.pb.GetBlockRequest.prototype.setHeight = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetBlockRequest} returns this
 */
proto.pb.GetBlockRequest.prototype.clearHeight = function() {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool full_transactions = 3;
 * @return {boolean}
 */
proto.pb.GetBlockRequest.prototype.getFullTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetBlockRequest} returns this
 */
proto.pb.GetBlockRequest.prototype.setFullTransactions = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && proto.pb.Block.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockResponse}
 */
proto.pb.GetBlockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockResponse;
  return proto.pb.GetBlockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockResponse}
 */
proto.pb.GetBlockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Block;
      reader.readMessage(value,proto.pb.Block.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Block.serializeBinaryToWriter
    );
  }
};


/**
 * optional Block block = 1;
 * @return {?proto.pb.Block}
 */
proto.pb.GetBlockResponse.prototype.getBlock = function() {
  return /** @type{?proto.pb.Block} */ (
    jspb.Message.getWrapperField(this, proto.pb.Block, 1));
};


/**
 * @param {?proto.pb.Block|undefined} value
 * @return {!proto.pb.GetBlockResponse} returns this
*/
proto.pb.GetBlockResponse.prototype.setBlock = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.GetBlockResponse} returns this
 */
proto.pb.GetBlockResponse.prototype.clearBlock = function() {
  return this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockResponse.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetRawBlockRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetRawBlockRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetRawBlockRequest.HashOrHeightCase}
 */
proto.pb.GetRawBlockRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetRawBlockRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetRawBlockRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawBlockRequest}
 */
proto.pb.GetRawBlockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawBlockRequest;
  return proto.pb.GetRawBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawBlockRequest}
 */
proto.pb.GetRawBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawBlockRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetRawBlockRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetRawBlockRequest} returns this
 */
proto.pb.GetRawBlockRequest.prototype.setHash = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetRawBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetRawBlockRequest} returns this
 */
proto.pb.GetRawBlockRequest.prototype.clearHash = function() {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetRawBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawBlockRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetRawBlockRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetRawBlockRequest} returns this
 */
proto.pb.GetRawBlockRequest.prototype.setHeight = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetRawBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetRawBlockRequest} returns this
 */
proto.pb.GetRawBlockRequest.prototype.clearHeight = function() {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetRawBlockRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawBlockRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawBlockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawBlockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawBlockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: msg.getBlock_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawBlockResponse}
 */
proto.pb.GetRawBlockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawBlockResponse;
  return proto.pb.GetRawBlockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawBlockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawBlockResponse}
 */
proto.pb.GetRawBlockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawBlockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawBlockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawBlockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes block = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawBlockResponse.prototype.getBlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes block = 1;
 * This is a type-conversion wrapper around `getBlock()`
 * @return {string}
 */
proto.pb.GetRawBlockResponse.prototype.getBlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlock()));
};


/**
 * optional bytes block = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlock()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawBlockResponse.prototype.getBlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlock()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetRawBlockResponse} returns this
 */
proto.pb.GetRawBlockResponse.prototype.setBlock = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetBlockFilterRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.GetBlockFilterRequest.HashOrHeightCase = {
  HASH_OR_HEIGHT_NOT_SET: 0,
  HASH: 1,
  HEIGHT: 2
};

/**
 * @return {proto.pb.GetBlockFilterRequest.HashOrHeightCase}
 */
proto.pb.GetBlockFilterRequest.prototype.getHashOrHeightCase = function() {
  return /** @type {proto.pb.GetBlockFilterRequest.HashOrHeightCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetBlockFilterRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockFilterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockFilterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockFilterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockFilterRequest}
 */
proto.pb.GetBlockFilterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockFilterRequest;
  return proto.pb.GetBlockFilterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockFilterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockFilterRequest}
 */
proto.pb.GetBlockFilterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockFilterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockFilterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockFilterRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetBlockFilterRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetBlockFilterRequest} returns this
 */
proto.pb.GetBlockFilterRequest.prototype.setHash = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetBlockFilterRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetBlockFilterRequest} returns this
 */
proto.pb.GetBlockFilterRequest.prototype.clearHash = function() {
  return jspb.Message.setOneofField(this, 1, proto.pb.GetBlockFilterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockFilterRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.GetBlockFilterRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetBlockFilterRequest} returns this
 */
proto.pb.GetBlockFilterRequest.prototype.setHeight = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetBlockFilterRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetBlockFilterRequest} returns this
 */
proto.pb.GetBlockFilterRequest.prototype.clearHeight = function() {
  return jspb.Message.setOneofField(this, 2, proto.pb.GetBlockFilterRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetBlockFilterRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetBlockFilterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetBlockFilterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetBlockFilterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: msg.getFilter_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetBlockFilterResponse}
 */
proto.pb.GetBlockFilterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetBlockFilterResponse;
  return proto.pb.GetBlockFilterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetBlockFilterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetBlockFilterResponse}
 */
proto.pb.GetBlockFilterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetBlockFilterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetBlockFilterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetBlockFilterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes filter = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetBlockFilterResponse.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes filter = 1;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.pb.GetBlockFilterResponse.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.pb.GetBlockFilterResponse.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetBlockFilterResponse} returns this
 */
proto.pb.GetBlockFilterResponse.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetHeadersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetHeadersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetHeadersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetHeadersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockLocatorHashesList: msg.getBlockLocatorHashesList_asB64(),
    stopHash: msg.getStopHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetHeadersRequest}
 */
proto.pb.GetHeadersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetHeadersRequest;
  return proto.pb.GetHeadersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetHeadersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetHeadersRequest}
 */
proto.pb.GetHeadersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addBlockLocatorHashes(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStopHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetHeadersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetHeadersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetHeadersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockLocatorHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getStopHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * repeated bytes block_locator_hashes = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetHeadersRequest.prototype.getBlockLocatorHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes block_locator_hashes = 1;
 * This is a type-conversion wrapper around `getBlockLocatorHashesList()`
 * @return {!Array<string>}
 */
proto.pb.GetHeadersRequest.prototype.getBlockLocatorHashesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getBlockLocatorHashesList()));
};


/**
 * repeated bytes block_locator_hashes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockLocatorHashesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetHeadersRequest.prototype.getBlockLocatorHashesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getBlockLocatorHashesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.pb.GetHeadersRequest} returns this
 */
proto.pb.GetHeadersRequest.prototype.setBlockLocatorHashesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.pb.GetHeadersRequest} returns this
 */
proto.pb.GetHeadersRequest.prototype.addBlockLocatorHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetHeadersRequest} returns this
 */
proto.pb.GetHeadersRequest.prototype.clearBlockLocatorHashesList = function() {
  return this.setBlockLocatorHashesList([]);
};


/**
 * optional bytes stop_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetHeadersRequest.prototype.getStopHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes stop_hash = 2;
 * This is a type-conversion wrapper around `getStopHash()`
 * @return {string}
 */
proto.pb.GetHeadersRequest.prototype.getStopHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStopHash()));
};


/**
 * optional bytes stop_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStopHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetHeadersRequest.prototype.getStopHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStopHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetHeadersRequest} returns this
 */
proto.pb.GetHeadersRequest.prototype.setStopHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetHeadersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetHeadersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetHeadersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetHeadersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.pb.BlockInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetHeadersResponse}
 */
proto.pb.GetHeadersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetHeadersResponse;
  return proto.pb.GetHeadersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetHeadersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetHeadersResponse}
 */
proto.pb.GetHeadersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetHeadersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetHeadersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetHeadersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetHeadersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BlockInfo headers = 1;
 * @return {!Array<!proto.pb.BlockInfo>}
 */
proto.pb.GetHeadersResponse.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.pb.BlockInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.BlockInfo, 1));
};


/**
 * @param {!Array<!proto.pb.BlockInfo>} value
 * @return {!proto.pb.GetHeadersResponse} returns this
*/
proto.pb.GetHeadersResponse.prototype.setHeadersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.BlockInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.BlockInfo}
 */
proto.pb.GetHeadersResponse.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.BlockInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetHeadersResponse} returns this
 */
proto.pb.GetHeadersResponse.prototype.clearHeadersList = function() {
  return this.setHeadersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetTransactionRequest}
 */
proto.pb.GetTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetTransactionRequest;
  return proto.pb.GetTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetTransactionRequest}
 */
proto.pb.GetTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetTransactionRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetTransactionRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetTransactionRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetTransactionRequest} returns this
 */
proto.pb.GetTransactionRequest.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetTransactionResponse}
 */
proto.pb.GetTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetTransactionResponse;
  return proto.pb.GetTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetTransactionResponse}
 */
proto.pb.GetTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.pb.Transaction}
 */
proto.pb.GetTransactionResponse.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 1));
};


/**
 * @param {?proto.pb.Transaction|undefined} value
 * @return {!proto.pb.GetTransactionResponse} returns this
*/
proto.pb.GetTransactionResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.GetTransactionResponse} returns this
 */
proto.pb.GetTransactionResponse.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetTransactionResponse.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawTransactionRequest}
 */
proto.pb.GetRawTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawTransactionRequest;
  return proto.pb.GetRawTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawTransactionRequest}
 */
proto.pb.GetRawTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawTransactionRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetRawTransactionRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetRawTransactionRequest} returns this
 */
proto.pb.GetRawTransactionRequest.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: msg.getTransaction_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawTransactionResponse}
 */
proto.pb.GetRawTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawTransactionResponse;
  return proto.pb.GetRawTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawTransactionResponse}
 */
proto.pb.GetRawTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes transaction = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawTransactionResponse.prototype.getTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction = 1;
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {string}
 */
proto.pb.GetRawTransactionResponse.prototype.getTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransaction()));
};


/**
 * optional bytes transaction = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawTransactionResponse.prototype.getTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransaction()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetRawTransactionResponse} returns this
 */
proto.pb.GetRawTransactionResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetAddressTransactionsRequest.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.pb.GetAddressTransactionsRequest.StartBlockCase = {
  START_BLOCK_NOT_SET: 0,
  HASH: 4,
  HEIGHT: 5
};

/**
 * @return {proto.pb.GetAddressTransactionsRequest.StartBlockCase}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getStartBlockCase = function() {
  return /** @type {proto.pb.GetAddressTransactionsRequest.StartBlockCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nbSkip: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nbFetch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressTransactionsRequest}
 */
proto.pb.GetAddressTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressTransactionsRequest;
  return proto.pb.GetAddressTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressTransactionsRequest}
 */
proto.pb.GetAddressTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbSkip(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbFetch(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNbSkip();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getNbFetch();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 nb_skip = 2;
 * @return {number}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getNbSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.setNbSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 nb_fetch = 3;
 * @return {number}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getNbFetch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.setNbFetch = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.setHash = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.clearHash = function() {
  return jspb.Message.setOneofField(this, 4, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetAddressTransactionsRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 height = 5;
 * @return {number}
 */
proto.pb.GetAddressTransactionsRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.setHeight = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetAddressTransactionsRequest} returns this
 */
proto.pb.GetAddressTransactionsRequest.prototype.clearHeight = function() {
  return jspb.Message.setOneofField(this, 5, proto.pb.GetAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetAddressTransactionsRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetAddressTransactionsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    confirmedTransactionsList: jspb.Message.toObjectList(msg.getConfirmedTransactionsList(),
    proto.pb.Transaction.toObject, includeInstance),
    unconfirmedTransactionsList: jspb.Message.toObjectList(msg.getUnconfirmedTransactionsList(),
    proto.pb.MempoolTransaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressTransactionsResponse}
 */
proto.pb.GetAddressTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressTransactionsResponse;
  return proto.pb.GetAddressTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressTransactionsResponse}
 */
proto.pb.GetAddressTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.addConfirmedTransactions(value);
      break;
    case 2:
      var value = new proto.pb.MempoolTransaction;
      reader.readMessage(value,proto.pb.MempoolTransaction.deserializeBinaryFromReader);
      msg.addUnconfirmedTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfirmedTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getUnconfirmedTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.MempoolTransaction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Transaction confirmed_transactions = 1;
 * @return {!Array<!proto.pb.Transaction>}
 */
proto.pb.GetAddressTransactionsResponse.prototype.getConfirmedTransactionsList = function() {
  return /** @type{!Array<!proto.pb.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction, 1));
};


/**
 * @param {!Array<!proto.pb.Transaction>} value
 * @return {!proto.pb.GetAddressTransactionsResponse} returns this
*/
proto.pb.GetAddressTransactionsResponse.prototype.setConfirmedTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction}
 */
proto.pb.GetAddressTransactionsResponse.prototype.addConfirmedTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetAddressTransactionsResponse} returns this
 */
proto.pb.GetAddressTransactionsResponse.prototype.clearConfirmedTransactionsList = function() {
  return this.setConfirmedTransactionsList([]);
};


/**
 * repeated MempoolTransaction unconfirmed_transactions = 2;
 * @return {!Array<!proto.pb.MempoolTransaction>}
 */
proto.pb.GetAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList = function() {
  return /** @type{!Array<!proto.pb.MempoolTransaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.MempoolTransaction, 2));
};


/**
 * @param {!Array<!proto.pb.MempoolTransaction>} value
 * @return {!proto.pb.GetAddressTransactionsResponse} returns this
*/
proto.pb.GetAddressTransactionsResponse.prototype.setUnconfirmedTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.MempoolTransaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.MempoolTransaction}
 */
proto.pb.GetAddressTransactionsResponse.prototype.addUnconfirmedTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.MempoolTransaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetAddressTransactionsResponse} returns this
 */
proto.pb.GetAddressTransactionsResponse.prototype.clearUnconfirmedTransactionsList = function() {
  return this.setUnconfirmedTransactionsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.GetRawAddressTransactionsRequest.oneofGroups_ = [[4,5]];

/**
 * @enum {number}
 */
proto.pb.GetRawAddressTransactionsRequest.StartBlockCase = {
  START_BLOCK_NOT_SET: 0,
  HASH: 4,
  HEIGHT: 5
};

/**
 * @return {proto.pb.GetRawAddressTransactionsRequest.StartBlockCase}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getStartBlockCase = function() {
  return /** @type {proto.pb.GetRawAddressTransactionsRequest.StartBlockCase} */(jspb.Message.computeOneofCase(this, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawAddressTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawAddressTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nbSkip: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nbFetch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawAddressTransactionsRequest}
 */
proto.pb.GetRawAddressTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawAddressTransactionsRequest;
  return proto.pb.GetRawAddressTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawAddressTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawAddressTransactionsRequest}
 */
proto.pb.GetRawAddressTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbSkip(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNbFetch(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawAddressTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawAddressTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNbSkip();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getNbFetch();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 nb_skip = 2;
 * @return {number}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getNbSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.setNbSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 nb_fetch = 3;
 * @return {number}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getNbFetch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.setNbFetch = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.setHash = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.clearHash = function() {
  return jspb.Message.setOneofField(this, 4, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.hasHash = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 height = 5;
 * @return {number}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.setHeight = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.GetRawAddressTransactionsRequest} returns this
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.clearHeight = function() {
  return jspb.Message.setOneofField(this, 5, proto.pb.GetRawAddressTransactionsRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetRawAddressTransactionsRequest.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetRawAddressTransactionsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetRawAddressTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetRawAddressTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    confirmedTransactionsList: msg.getConfirmedTransactionsList_asB64(),
    unconfirmedTransactionsList: msg.getUnconfirmedTransactionsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetRawAddressTransactionsResponse}
 */
proto.pb.GetRawAddressTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetRawAddressTransactionsResponse;
  return proto.pb.GetRawAddressTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetRawAddressTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetRawAddressTransactionsResponse}
 */
proto.pb.GetRawAddressTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addConfirmedTransactions(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addUnconfirmedTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetRawAddressTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetRawAddressTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetRawAddressTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfirmedTransactionsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getUnconfirmedTransactionsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * repeated bytes confirmed_transactions = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getConfirmedTransactionsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes confirmed_transactions = 1;
 * This is a type-conversion wrapper around `getConfirmedTransactionsList()`
 * @return {!Array<string>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getConfirmedTransactionsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getConfirmedTransactionsList()));
};


/**
 * repeated bytes confirmed_transactions = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getConfirmedTransactionsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getConfirmedTransactionsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getConfirmedTransactionsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.pb.GetRawAddressTransactionsResponse} returns this
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.setConfirmedTransactionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.pb.GetRawAddressTransactionsResponse} returns this
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.addConfirmedTransactions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetRawAddressTransactionsResponse} returns this
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.clearConfirmedTransactionsList = function() {
  return this.setConfirmedTransactionsList([]);
};


/**
 * repeated bytes unconfirmed_transactions = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes unconfirmed_transactions = 2;
 * This is a type-conversion wrapper around `getUnconfirmedTransactionsList()`
 * @return {!Array<string>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getUnconfirmedTransactionsList()));
};


/**
 * repeated bytes unconfirmed_transactions = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnconfirmedTransactionsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.getUnconfirmedTransactionsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getUnconfirmedTransactionsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.pb.GetRawAddressTransactionsResponse} returns this
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.setUnconfirmedTransactionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.pb.GetRawAddressTransactionsResponse} returns this
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.addUnconfirmedTransactions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetRawAddressTransactionsResponse} returns this
 */
proto.pb.GetRawAddressTransactionsResponse.prototype.clearUnconfirmedTransactionsList = function() {
  return this.setUnconfirmedTransactionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressUnspentOutputsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressUnspentOutputsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeMempool: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressUnspentOutputsRequest}
 */
proto.pb.GetAddressUnspentOutputsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressUnspentOutputsRequest;
  return proto.pb.GetAddressUnspentOutputsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressUnspentOutputsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressUnspentOutputsRequest}
 */
proto.pb.GetAddressUnspentOutputsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMempool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressUnspentOutputsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressUnspentOutputsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeMempool();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.GetAddressUnspentOutputsRequest} returns this
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_mempool = 2;
 * @return {boolean}
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.getIncludeMempool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetAddressUnspentOutputsRequest} returns this
 */
proto.pb.GetAddressUnspentOutputsRequest.prototype.setIncludeMempool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetAddressUnspentOutputsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetAddressUnspentOutputsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetAddressUnspentOutputsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.pb.UnspentOutput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetAddressUnspentOutputsResponse}
 */
proto.pb.GetAddressUnspentOutputsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetAddressUnspentOutputsResponse;
  return proto.pb.GetAddressUnspentOutputsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetAddressUnspentOutputsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetAddressUnspentOutputsResponse}
 */
proto.pb.GetAddressUnspentOutputsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.UnspentOutput;
      reader.readMessage(value,proto.pb.UnspentOutput.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetAddressUnspentOutputsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetAddressUnspentOutputsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetAddressUnspentOutputsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pb.UnspentOutput.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnspentOutput outputs = 1;
 * @return {!Array<!proto.pb.UnspentOutput>}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.pb.UnspentOutput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.UnspentOutput, 1));
};


/**
 * @param {!Array<!proto.pb.UnspentOutput>} value
 * @return {!proto.pb.GetAddressUnspentOutputsResponse} returns this
*/
proto.pb.GetAddressUnspentOutputsResponse.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pb.UnspentOutput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.UnspentOutput}
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pb.UnspentOutput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetAddressUnspentOutputsResponse} returns this
 */
proto.pb.GetAddressUnspentOutputsResponse.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetUnspentOutputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetUnspentOutputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetUnspentOutputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    includeMempool: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetUnspentOutputRequest}
 */
proto.pb.GetUnspentOutputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetUnspentOutputRequest;
  return proto.pb.GetUnspentOutputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetUnspentOutputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetUnspentOutputRequest}
 */
proto.pb.GetUnspentOutputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMempool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetUnspentOutputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetUnspentOutputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getIncludeMempool();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetUnspentOutputRequest.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.GetUnspentOutputRequest.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputRequest.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetUnspentOutputRequest} returns this
 */
proto.pb.GetUnspentOutputRequest.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.pb.GetUnspentOutputRequest.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetUnspentOutputRequest} returns this
 */
proto.pb.GetUnspentOutputRequest.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool include_mempool = 3;
 * @return {boolean}
 */
proto.pb.GetUnspentOutputRequest.prototype.getIncludeMempool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetUnspentOutputRequest} returns this
 */
proto.pb.GetUnspentOutputRequest.prototype.setIncludeMempool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetUnspentOutputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetUnspentOutputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetUnspentOutputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outpoint: (f = msg.getOutpoint()) && proto.pb.Transaction.Input.Outpoint.toObject(includeInstance, f),
    pubkeyScript: msg.getPubkeyScript_asB64(),
    value: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isCoinbase: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetUnspentOutputResponse}
 */
proto.pb.GetUnspentOutputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetUnspentOutputResponse;
  return proto.pb.GetUnspentOutputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetUnspentOutputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetUnspentOutputResponse}
 */
proto.pb.GetUnspentOutputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkeyScript(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCoinbase(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetUnspentOutputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetUnspentOutputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUnspentOutputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getPubkeyScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getIsCoinbase();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional Transaction.Input.Outpoint outpoint = 1;
 * @return {?proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.GetUnspentOutputResponse.prototype.getOutpoint = function() {
  return /** @type{?proto.pb.Transaction.Input.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction.Input.Outpoint, 1));
};


/**
 * @param {?proto.pb.Transaction.Input.Outpoint|undefined} value
 * @return {!proto.pb.GetUnspentOutputResponse} returns this
*/
proto.pb.GetUnspentOutputResponse.prototype.setOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.GetUnspentOutputResponse} returns this
 */
proto.pb.GetUnspentOutputResponse.prototype.clearOutpoint = function() {
  return this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetUnspentOutputResponse.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes pubkey_script = 2;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetUnspentOutputResponse.prototype.getPubkeyScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey_script = 2;
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {string}
 */
proto.pb.GetUnspentOutputResponse.prototype.getPubkeyScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkeyScript()));
};


/**
 * optional bytes pubkey_script = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {!Uint8Array}
 */
proto.pb.GetUnspentOutputResponse.prototype.getPubkeyScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkeyScript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetUnspentOutputResponse} returns this
 */
proto.pb.GetUnspentOutputResponse.prototype.setPubkeyScript = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 value = 3;
 * @return {number}
 */
proto.pb.GetUnspentOutputResponse.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetUnspentOutputResponse} returns this
 */
proto.pb.GetUnspentOutputResponse.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_coinbase = 4;
 * @return {boolean}
 */
proto.pb.GetUnspentOutputResponse.prototype.getIsCoinbase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.GetUnspentOutputResponse} returns this
 */
proto.pb.GetUnspentOutputResponse.prototype.setIsCoinbase = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 block_height = 5;
 * @return {number}
 */
proto.pb.GetUnspentOutputResponse.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.GetUnspentOutputResponse} returns this
 */
proto.pb.GetUnspentOutputResponse.prototype.setBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMerkleProofRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMerkleProofRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMerkleProofRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMerkleProofRequest}
 */
proto.pb.GetMerkleProofRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMerkleProofRequest;
  return proto.pb.GetMerkleProofRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMerkleProofRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMerkleProofRequest}
 */
proto.pb.GetMerkleProofRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMerkleProofRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMerkleProofRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetMerkleProofRequest.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.pb.GetMerkleProofRequest.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofRequest.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetMerkleProofRequest} returns this
 */
proto.pb.GetMerkleProofRequest.prototype.setTransactionHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.GetMerkleProofResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.GetMerkleProofResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.GetMerkleProofResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.GetMerkleProofResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && proto.pb.BlockInfo.toObject(includeInstance, f),
    hashesList: msg.getHashesList_asB64(),
    flags: msg.getFlags_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetMerkleProofResponse}
 */
proto.pb.GetMerkleProofResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.GetMerkleProofResponse;
  return proto.pb.GetMerkleProofResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetMerkleProofResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetMerkleProofResponse}
 */
proto.pb.GetMerkleProofResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addHashes(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.GetMerkleProofResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetMerkleProofResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetMerkleProofResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
  f = message.getHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getFlags_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional BlockInfo block = 1;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.GetMerkleProofResponse.prototype.getBlock = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 1));
};


/**
 * @param {?proto.pb.BlockInfo|undefined} value
 * @return {!proto.pb.GetMerkleProofResponse} returns this
*/
proto.pb.GetMerkleProofResponse.prototype.setBlock = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.GetMerkleProofResponse} returns this
 */
proto.pb.GetMerkleProofResponse.prototype.clearBlock = function() {
  return this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.GetMerkleProofResponse.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated bytes hashes = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.GetMerkleProofResponse.prototype.getHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes hashes = 2;
 * This is a type-conversion wrapper around `getHashesList()`
 * @return {!Array<string>}
 */
proto.pb.GetMerkleProofResponse.prototype.getHashesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getHashesList()));
};


/**
 * repeated bytes hashes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.GetMerkleProofResponse.prototype.getHashesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getHashesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.pb.GetMerkleProofResponse} returns this
 */
proto.pb.GetMerkleProofResponse.prototype.setHashesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.pb.GetMerkleProofResponse} returns this
 */
proto.pb.GetMerkleProofResponse.prototype.addHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.GetMerkleProofResponse} returns this
 */
proto.pb.GetMerkleProofResponse.prototype.clearHashesList = function() {
  return this.setHashesList([]);
};


/**
 * optional bytes flags = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.GetMerkleProofResponse.prototype.getFlags = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes flags = 3;
 * This is a type-conversion wrapper around `getFlags()`
 * @return {string}
 */
proto.pb.GetMerkleProofResponse.prototype.getFlags_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFlags()));
};


/**
 * optional bytes flags = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFlags()`
 * @return {!Uint8Array}
 */
proto.pb.GetMerkleProofResponse.prototype.getFlags_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFlags()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.GetMerkleProofResponse} returns this
 */
proto.pb.GetMerkleProofResponse.prototype.setFlags = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubmitTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubmitTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubmitTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: msg.getTransaction_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubmitTransactionRequest}
 */
proto.pb.SubmitTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubmitTransactionRequest;
  return proto.pb.SubmitTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubmitTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubmitTransactionRequest}
 */
proto.pb.SubmitTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubmitTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubmitTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes transaction = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.SubmitTransactionRequest.prototype.getTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction = 1;
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {string}
 */
proto.pb.SubmitTransactionRequest.prototype.getTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransaction()));
};


/**
 * optional bytes transaction = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransaction()`
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionRequest.prototype.getTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransaction()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.SubmitTransactionRequest} returns this
 */
proto.pb.SubmitTransactionRequest.prototype.setTransaction = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubmitTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubmitTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubmitTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubmitTransactionResponse}
 */
proto.pb.SubmitTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubmitTransactionResponse;
  return proto.pb.SubmitTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubmitTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubmitTransactionResponse}
 */
proto.pb.SubmitTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubmitTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubmitTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubmitTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.SubmitTransactionResponse.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.SubmitTransactionResponse.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.SubmitTransactionResponse.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.SubmitTransactionResponse} returns this
 */
proto.pb.SubmitTransactionResponse.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubscribeTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubscribeTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubscribeTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscribe: (f = msg.getSubscribe()) && proto.pb.TransactionFilter.toObject(includeInstance, f),
    unsubscribe: (f = msg.getUnsubscribe()) && proto.pb.TransactionFilter.toObject(includeInstance, f),
    includeMempool: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    includeInBlock: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    serializeTx: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubscribeTransactionsRequest}
 */
proto.pb.SubscribeTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubscribeTransactionsRequest;
  return proto.pb.SubscribeTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubscribeTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubscribeTransactionsRequest}
 */
proto.pb.SubscribeTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.TransactionFilter;
      reader.readMessage(value,proto.pb.TransactionFilter.deserializeBinaryFromReader);
      msg.setSubscribe(value);
      break;
    case 2:
      var value = new proto.pb.TransactionFilter;
      reader.readMessage(value,proto.pb.TransactionFilter.deserializeBinaryFromReader);
      msg.setUnsubscribe(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeMempool(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeInBlock(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSerializeTx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubscribeTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubscribeTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubscribeTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscribe();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.TransactionFilter.serializeBinaryToWriter
    );
  }
  f = message.getUnsubscribe();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.TransactionFilter.serializeBinaryToWriter
    );
  }
  f = message.getIncludeMempool();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIncludeInBlock();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSerializeTx();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional TransactionFilter subscribe = 1;
 * @return {?proto.pb.TransactionFilter}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getSubscribe = function() {
  return /** @type{?proto.pb.TransactionFilter} */ (
    jspb.Message.getWrapperField(this, proto.pb.TransactionFilter, 1));
};


/**
 * @param {?proto.pb.TransactionFilter|undefined} value
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
*/
proto.pb.SubscribeTransactionsRequest.prototype.setSubscribe = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
 */
proto.pb.SubscribeTransactionsRequest.prototype.clearSubscribe = function() {
  return this.setSubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.hasSubscribe = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionFilter unsubscribe = 2;
 * @return {?proto.pb.TransactionFilter}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getUnsubscribe = function() {
  return /** @type{?proto.pb.TransactionFilter} */ (
    jspb.Message.getWrapperField(this, proto.pb.TransactionFilter, 2));
};


/**
 * @param {?proto.pb.TransactionFilter|undefined} value
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
*/
proto.pb.SubscribeTransactionsRequest.prototype.setUnsubscribe = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
 */
proto.pb.SubscribeTransactionsRequest.prototype.clearUnsubscribe = function() {
  return this.setUnsubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.hasUnsubscribe = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool include_mempool = 3;
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getIncludeMempool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
 */
proto.pb.SubscribeTransactionsRequest.prototype.setIncludeMempool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool include_in_block = 4;
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getIncludeInBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
 */
proto.pb.SubscribeTransactionsRequest.prototype.setIncludeInBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool serialize_tx = 5;
 * @return {boolean}
 */
proto.pb.SubscribeTransactionsRequest.prototype.getSerializeTx = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.SubscribeTransactionsRequest} returns this
 */
proto.pb.SubscribeTransactionsRequest.prototype.setSerializeTx = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.SubscribeBlocksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.SubscribeBlocksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.SubscribeBlocksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeBlocksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullBlock: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    fullTransactions: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    serializeBlock: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.SubscribeBlocksRequest}
 */
proto.pb.SubscribeBlocksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.SubscribeBlocksRequest;
  return proto.pb.SubscribeBlocksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.SubscribeBlocksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.SubscribeBlocksRequest}
 */
proto.pb.SubscribeBlocksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullBlock(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullTransactions(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSerializeBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.SubscribeBlocksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.SubscribeBlocksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.SubscribeBlocksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.SubscribeBlocksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullBlock();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFullTransactions();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSerializeBlock();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool full_block = 1;
 * @return {boolean}
 */
proto.pb.SubscribeBlocksRequest.prototype.getFullBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.SubscribeBlocksRequest} returns this
 */
proto.pb.SubscribeBlocksRequest.prototype.setFullBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool full_transactions = 2;
 * @return {boolean}
 */
proto.pb.SubscribeBlocksRequest.prototype.getFullTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.SubscribeBlocksRequest} returns this
 */
proto.pb.SubscribeBlocksRequest.prototype.setFullTransactions = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool serialize_block = 3;
 * @return {boolean}
 */
proto.pb.SubscribeBlocksRequest.prototype.getSerializeBlock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.SubscribeBlocksRequest} returns this
 */
proto.pb.SubscribeBlocksRequest.prototype.setSerializeBlock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.BlockNotification.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.pb.BlockNotification.BlockCase = {
  BLOCK_NOT_SET: 0,
  BLOCK_INFO: 2,
  MARSHALED_BLOCK: 3,
  SERIALIZED_BLOCK: 4
};

/**
 * @return {proto.pb.BlockNotification.BlockCase}
 */
proto.pb.BlockNotification.prototype.getBlockCase = function() {
  return /** @type {proto.pb.BlockNotification.BlockCase} */(jspb.Message.computeOneofCase(this, proto.pb.BlockNotification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BlockNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BlockNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BlockNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockInfo: (f = msg.getBlockInfo()) && proto.pb.BlockInfo.toObject(includeInstance, f),
    marshaledBlock: (f = msg.getMarshaledBlock()) && proto.pb.Block.toObject(includeInstance, f),
    serializedBlock: msg.getSerializedBlock_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BlockNotification}
 */
proto.pb.BlockNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BlockNotification;
  return proto.pb.BlockNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BlockNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BlockNotification}
 */
proto.pb.BlockNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.BlockNotification.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setBlockInfo(value);
      break;
    case 3:
      var value = new proto.pb.Block;
      reader.readMessage(value,proto.pb.Block.deserializeBinaryFromReader);
      msg.setMarshaledBlock(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSerializedBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BlockNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BlockNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BlockNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBlockInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
  f = message.getMarshaledBlock();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pb.Block.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.BlockNotification.Type = {
  CONNECTED: 0,
  DISCONNECTED: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.pb.BlockNotification.Type}
 */
proto.pb.BlockNotification.prototype.getType = function() {
  return /** @type {!proto.pb.BlockNotification.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pb.BlockNotification.Type} value
 * @return {!proto.pb.BlockNotification} returns this
 */
proto.pb.BlockNotification.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional BlockInfo block_info = 2;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.BlockNotification.prototype.getBlockInfo = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 2));
};


/**
 * @param {?proto.pb.BlockInfo|undefined} value
 * @return {!proto.pb.BlockNotification} returns this
*/
proto.pb.BlockNotification.prototype.setBlockInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pb.BlockNotification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.BlockNotification} returns this
 */
proto.pb.BlockNotification.prototype.clearBlockInfo = function() {
  return this.setBlockInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BlockNotification.prototype.hasBlockInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Block marshaled_block = 3;
 * @return {?proto.pb.Block}
 */
proto.pb.BlockNotification.prototype.getMarshaledBlock = function() {
  return /** @type{?proto.pb.Block} */ (
    jspb.Message.getWrapperField(this, proto.pb.Block, 3));
};


/**
 * @param {?proto.pb.Block|undefined} value
 * @return {!proto.pb.BlockNotification} returns this
*/
proto.pb.BlockNotification.prototype.setMarshaledBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pb.BlockNotification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.BlockNotification} returns this
 */
proto.pb.BlockNotification.prototype.clearMarshaledBlock = function() {
  return this.setMarshaledBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BlockNotification.prototype.hasMarshaledBlock = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes serialized_block = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockNotification.prototype.getSerializedBlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes serialized_block = 4;
 * This is a type-conversion wrapper around `getSerializedBlock()`
 * @return {string}
 */
proto.pb.BlockNotification.prototype.getSerializedBlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSerializedBlock()));
};


/**
 * optional bytes serialized_block = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSerializedBlock()`
 * @return {!Uint8Array}
 */
proto.pb.BlockNotification.prototype.getSerializedBlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSerializedBlock()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.BlockNotification} returns this
 */
proto.pb.BlockNotification.prototype.setSerializedBlock = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.pb.BlockNotification.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.BlockNotification} returns this
 */
proto.pb.BlockNotification.prototype.clearSerializedBlock = function() {
  return jspb.Message.setOneofField(this, 4, proto.pb.BlockNotification.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.BlockNotification.prototype.hasSerializedBlock = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.TransactionNotification.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.pb.TransactionNotification.TransactionCase = {
  TRANSACTION_NOT_SET: 0,
  CONFIRMED_TRANSACTION: 2,
  UNCONFIRMED_TRANSACTION: 3,
  SERIALIZED_TRANSACTION: 4
};

/**
 * @return {proto.pb.TransactionNotification.TransactionCase}
 */
proto.pb.TransactionNotification.prototype.getTransactionCase = function() {
  return /** @type {proto.pb.TransactionNotification.TransactionCase} */(jspb.Message.computeOneofCase(this, proto.pb.TransactionNotification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TransactionNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TransactionNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TransactionNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confirmedTransaction: (f = msg.getConfirmedTransaction()) && proto.pb.Transaction.toObject(includeInstance, f),
    unconfirmedTransaction: (f = msg.getUnconfirmedTransaction()) && proto.pb.MempoolTransaction.toObject(includeInstance, f),
    serializedTransaction: msg.getSerializedTransaction_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TransactionNotification}
 */
proto.pb.TransactionNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TransactionNotification;
  return proto.pb.TransactionNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TransactionNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TransactionNotification}
 */
proto.pb.TransactionNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pb.TransactionNotification.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setConfirmedTransaction(value);
      break;
    case 3:
      var value = new proto.pb.MempoolTransaction;
      reader.readMessage(value,proto.pb.MempoolTransaction.deserializeBinaryFromReader);
      msg.setUnconfirmedTransaction(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSerializedTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TransactionNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TransactionNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TransactionNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getConfirmedTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getUnconfirmedTransaction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pb.MempoolTransaction.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pb.TransactionNotification.Type = {
  UNCONFIRMED: 0,
  CONFIRMED: 1
};

/**
 * optional Type type = 1;
 * @return {!proto.pb.TransactionNotification.Type}
 */
proto.pb.TransactionNotification.prototype.getType = function() {
  return /** @type {!proto.pb.TransactionNotification.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pb.TransactionNotification.Type} value
 * @return {!proto.pb.TransactionNotification} returns this
 */
proto.pb.TransactionNotification.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Transaction confirmed_transaction = 2;
 * @return {?proto.pb.Transaction}
 */
proto.pb.TransactionNotification.prototype.getConfirmedTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 2));
};


/**
 * @param {?proto.pb.Transaction|undefined} value
 * @return {!proto.pb.TransactionNotification} returns this
*/
proto.pb.TransactionNotification.prototype.setConfirmedTransaction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pb.TransactionNotification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TransactionNotification} returns this
 */
proto.pb.TransactionNotification.prototype.clearConfirmedTransaction = function() {
  return this.setConfirmedTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TransactionNotification.prototype.hasConfirmedTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MempoolTransaction unconfirmed_transaction = 3;
 * @return {?proto.pb.MempoolTransaction}
 */
proto.pb.TransactionNotification.prototype.getUnconfirmedTransaction = function() {
  return /** @type{?proto.pb.MempoolTransaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.MempoolTransaction, 3));
};


/**
 * @param {?proto.pb.MempoolTransaction|undefined} value
 * @return {!proto.pb.TransactionNotification} returns this
*/
proto.pb.TransactionNotification.prototype.setUnconfirmedTransaction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pb.TransactionNotification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.TransactionNotification} returns this
 */
proto.pb.TransactionNotification.prototype.clearUnconfirmedTransaction = function() {
  return this.setUnconfirmedTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TransactionNotification.prototype.hasUnconfirmedTransaction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes serialized_transaction = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.TransactionNotification.prototype.getSerializedTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes serialized_transaction = 4;
 * This is a type-conversion wrapper around `getSerializedTransaction()`
 * @return {string}
 */
proto.pb.TransactionNotification.prototype.getSerializedTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSerializedTransaction()));
};


/**
 * optional bytes serialized_transaction = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSerializedTransaction()`
 * @return {!Uint8Array}
 */
proto.pb.TransactionNotification.prototype.getSerializedTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSerializedTransaction()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.TransactionNotification} returns this
 */
proto.pb.TransactionNotification.prototype.setSerializedTransaction = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.pb.TransactionNotification.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.TransactionNotification} returns this
 */
proto.pb.TransactionNotification.prototype.clearSerializedTransaction = function() {
  return jspb.Message.setOneofField(this, 4, proto.pb.TransactionNotification.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.TransactionNotification.prototype.hasSerializedTransaction = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.BlockInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.BlockInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.BlockInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    version: jspb.Message.getFieldWithDefault(msg, 3, 0),
    previousBlock: msg.getPreviousBlock_asB64(),
    merkleRoot: msg.getMerkleRoot_asB64(),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bits: jspb.Message.getFieldWithDefault(msg, 7, 0),
    nonce: jspb.Message.getFieldWithDefault(msg, 8, 0),
    confirmations: jspb.Message.getFieldWithDefault(msg, 9, 0),
    difficulty: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    nextBlockHash: msg.getNextBlockHash_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 12, 0),
    medianTime: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.BlockInfo}
 */
proto.pb.BlockInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.BlockInfo;
  return proto.pb.BlockInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.BlockInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.BlockInfo}
 */
proto.pb.BlockInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreviousBlock(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMerkleRoot(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBits(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNonce(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfirmations(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDifficulty(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNextBlockHash(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMedianTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.BlockInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.BlockInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.BlockInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPreviousBlock_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getMerkleRoot_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getBits();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getConfirmations();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getDifficulty();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getNextBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getMedianTime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 version = 3;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes previous_block = 4;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getPreviousBlock = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes previous_block = 4;
 * This is a type-conversion wrapper around `getPreviousBlock()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getPreviousBlock_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreviousBlock()));
};


/**
 * optional bytes previous_block = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreviousBlock()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getPreviousBlock_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreviousBlock()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setPreviousBlock = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes merkle_root = 5;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getMerkleRoot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes merkle_root = 5;
 * This is a type-conversion wrapper around `getMerkleRoot()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getMerkleRoot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMerkleRoot()));
};


/**
 * optional bytes merkle_root = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMerkleRoot()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getMerkleRoot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMerkleRoot()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setMerkleRoot = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 timestamp = 6;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 bits = 7;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setBits = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 nonce = 8;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 confirmations = 9;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getConfirmations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setConfirmations = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double difficulty = 10;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getDifficulty = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setDifficulty = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional bytes next_block_hash = 11;
 * @return {!(string|Uint8Array)}
 */
proto.pb.BlockInfo.prototype.getNextBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes next_block_hash = 11;
 * This is a type-conversion wrapper around `getNextBlockHash()`
 * @return {string}
 */
proto.pb.BlockInfo.prototype.getNextBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNextBlockHash()));
};


/**
 * optional bytes next_block_hash = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNextBlockHash()`
 * @return {!Uint8Array}
 */
proto.pb.BlockInfo.prototype.getNextBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNextBlockHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setNextBlockHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional int32 size = 12;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 median_time = 13;
 * @return {number}
 */
proto.pb.BlockInfo.prototype.getMedianTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.BlockInfo} returns this
 */
proto.pb.BlockInfo.prototype.setMedianTime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.Block.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Block.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.pb.BlockInfo.toObject(includeInstance, f),
    transactionDataList: jspb.Message.toObjectList(msg.getTransactionDataList(),
    proto.pb.Block.TransactionData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Block}
 */
proto.pb.Block.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Block;
  return proto.pb.Block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Block}
 */
proto.pb.Block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.BlockInfo;
      reader.readMessage(value,proto.pb.BlockInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new proto.pb.Block.TransactionData;
      reader.readMessage(value,proto.pb.Block.TransactionData.deserializeBinaryFromReader);
      msg.addTransactionData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Block.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.BlockInfo.serializeBinaryToWriter
    );
  }
  f = message.getTransactionDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.Block.TransactionData.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pb.Block.TransactionData.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.pb.Block.TransactionData.TxidsOrTxsCase = {
  TXIDS_OR_TXS_NOT_SET: 0,
  TRANSACTION_HASH: 1,
  TRANSACTION: 2
};

/**
 * @return {proto.pb.Block.TransactionData.TxidsOrTxsCase}
 */
proto.pb.Block.TransactionData.prototype.getTxidsOrTxsCase = function() {
  return /** @type {proto.pb.Block.TransactionData.TxidsOrTxsCase} */(jspb.Message.computeOneofCase(this, proto.pb.Block.TransactionData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Block.TransactionData.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Block.TransactionData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Block.TransactionData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.TransactionData.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionHash: msg.getTransactionHash_asB64(),
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Block.TransactionData}
 */
proto.pb.Block.TransactionData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Block.TransactionData;
  return proto.pb.Block.TransactionData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Block.TransactionData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Block.TransactionData}
 */
proto.pb.Block.TransactionData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionHash(value);
      break;
    case 2:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Block.TransactionData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Block.TransactionData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Block.TransactionData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Block.TransactionData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes transaction_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Block.TransactionData.prototype.getTransactionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes transaction_hash = 1;
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {string}
 */
proto.pb.Block.TransactionData.prototype.getTransactionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionHash()));
};


/**
 * optional bytes transaction_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionHash()`
 * @return {!Uint8Array}
 */
proto.pb.Block.TransactionData.prototype.getTransactionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Block.TransactionData} returns this
 */
proto.pb.Block.TransactionData.prototype.setTransactionHash = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.pb.Block.TransactionData.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pb.Block.TransactionData} returns this
 */
proto.pb.Block.TransactionData.prototype.clearTransactionHash = function() {
  return jspb.Message.setOneofField(this, 1, proto.pb.Block.TransactionData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Block.TransactionData.prototype.hasTransactionHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Transaction transaction = 2;
 * @return {?proto.pb.Transaction}
 */
proto.pb.Block.TransactionData.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 2));
};


/**
 * @param {?proto.pb.Transaction|undefined} value
 * @return {!proto.pb.Block.TransactionData} returns this
*/
proto.pb.Block.TransactionData.prototype.setTransaction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pb.Block.TransactionData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Block.TransactionData} returns this
 */
proto.pb.Block.TransactionData.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Block.TransactionData.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BlockInfo info = 1;
 * @return {?proto.pb.BlockInfo}
 */
proto.pb.Block.prototype.getInfo = function() {
  return /** @type{?proto.pb.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.pb.BlockInfo, 1));
};


/**
 * @param {?proto.pb.BlockInfo|undefined} value
 * @return {!proto.pb.Block} returns this
*/
proto.pb.Block.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Block} returns this
 */
proto.pb.Block.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Block.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TransactionData transaction_data = 2;
 * @return {!Array<!proto.pb.Block.TransactionData>}
 */
proto.pb.Block.prototype.getTransactionDataList = function() {
  return /** @type{!Array<!proto.pb.Block.TransactionData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Block.TransactionData, 2));
};


/**
 * @param {!Array<!proto.pb.Block.TransactionData>} value
 * @return {!proto.pb.Block} returns this
*/
proto.pb.Block.prototype.setTransactionDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.Block.TransactionData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Block.TransactionData}
 */
proto.pb.Block.prototype.addTransactionData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.Block.TransactionData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.Block} returns this
 */
proto.pb.Block.prototype.clearTransactionDataList = function() {
  return this.setTransactionDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.Transaction.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.pb.Transaction.Input.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.pb.Transaction.Output.toObject, includeInstance),
    lockTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    size: jspb.Message.getFieldWithDefault(msg, 8, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    confirmations: jspb.Message.getFieldWithDefault(msg, 10, 0),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 11, 0),
    blockHash: msg.getBlockHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction}
 */
proto.pb.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction;
  return proto.pb.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction}
 */
proto.pb.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = new proto.pb.Transaction.Input;
      reader.readMessage(value,proto.pb.Transaction.Input.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 4:
      var value = new proto.pb.Transaction.Output;
      reader.readMessage(value,proto.pb.Transaction.Output.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLockTime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfirmations(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockHeight(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pb.Transaction.Input.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pb.Transaction.Output.serializeBinaryToWriter
    );
  }
  f = message.getLockTime();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getConfirmations();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.Input.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.Input.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction.Input} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outpoint: (f = msg.getOutpoint()) && proto.pb.Transaction.Input.Outpoint.toObject(includeInstance, f),
    signatureScript: msg.getSignatureScript_asB64(),
    sequence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    value: jspb.Message.getFieldWithDefault(msg, 5, 0),
    previousScript: msg.getPreviousScript_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction.Input}
 */
proto.pb.Transaction.Input.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction.Input;
  return proto.pb.Transaction.Input.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction.Input} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction.Input}
 */
proto.pb.Transaction.Input.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignatureScript(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSequence(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreviousScript(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.Input.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction.Input} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getSignatureScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPreviousScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.Input.Outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.Input.Outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction.Input.Outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.Outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.Transaction.Input.Outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction.Input.Outpoint;
  return proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction.Input.Outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.Outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction.Input.Outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Transaction.Input.Outpoint} returns this
 */
proto.pb.Transaction.Input.Outpoint.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.pb.Transaction.Input.Outpoint.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction.Input.Outpoint} returns this
 */
proto.pb.Transaction.Input.Outpoint.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.pb.Transaction.Input.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Outpoint outpoint = 2;
 * @return {?proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.Transaction.Input.prototype.getOutpoint = function() {
  return /** @type{?proto.pb.Transaction.Input.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction.Input.Outpoint, 2));
};


/**
 * @param {?proto.pb.Transaction.Input.Outpoint|undefined} value
 * @return {!proto.pb.Transaction.Input} returns this
*/
proto.pb.Transaction.Input.prototype.setOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.clearOutpoint = function() {
  return this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.Transaction.Input.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes signature_script = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Input.prototype.getSignatureScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature_script = 3;
 * This is a type-conversion wrapper around `getSignatureScript()`
 * @return {string}
 */
proto.pb.Transaction.Input.prototype.getSignatureScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignatureScript()));
};


/**
 * optional bytes signature_script = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignatureScript()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.prototype.getSignatureScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignatureScript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.setSignatureScript = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 sequence = 4;
 * @return {number}
 */
proto.pb.Transaction.Input.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 value = 5;
 * @return {number}
 */
proto.pb.Transaction.Input.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes previous_script = 6;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Input.prototype.getPreviousScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes previous_script = 6;
 * This is a type-conversion wrapper around `getPreviousScript()`
 * @return {string}
 */
proto.pb.Transaction.Input.prototype.getPreviousScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreviousScript()));
};


/**
 * optional bytes previous_script = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreviousScript()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Input.prototype.getPreviousScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreviousScript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.setPreviousScript = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.pb.Transaction.Input.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Transaction.Input} returns this
 */
proto.pb.Transaction.Input.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Transaction.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Transaction.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Transaction.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pubkeyScript: msg.getPubkeyScript_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scriptClass: jspb.Message.getFieldWithDefault(msg, 5, ""),
    disassembledScript: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Transaction.Output}
 */
proto.pb.Transaction.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Transaction.Output;
  return proto.pb.Transaction.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Transaction.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Transaction.Output}
 */
proto.pb.Transaction.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkeyScript(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScriptClass(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisassembledScript(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Transaction.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Transaction.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Transaction.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPubkeyScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScriptClass();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisassembledScript();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.pb.Transaction.Output.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction.Output} returns this
 */
proto.pb.Transaction.Output.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.pb.Transaction.Output.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction.Output} returns this
 */
proto.pb.Transaction.Output.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes pubkey_script = 3;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.Output.prototype.getPubkeyScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes pubkey_script = 3;
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getPubkeyScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkeyScript()));
};


/**
 * optional bytes pubkey_script = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.Output.prototype.getPubkeyScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkeyScript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Transaction.Output} returns this
 */
proto.pb.Transaction.Output.prototype.setPubkeyScript = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Transaction.Output} returns this
 */
proto.pb.Transaction.Output.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string script_class = 5;
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getScriptClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Transaction.Output} returns this
 */
proto.pb.Transaction.Output.prototype.setScriptClass = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string disassembled_script = 6;
 * @return {string}
 */
proto.pb.Transaction.Output.prototype.getDisassembledScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Transaction.Output} returns this
 */
proto.pb.Transaction.Output.prototype.setDisassembledScript = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.pb.Transaction.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.pb.Transaction.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Input inputs = 3;
 * @return {!Array<!proto.pb.Transaction.Input>}
 */
proto.pb.Transaction.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.pb.Transaction.Input>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction.Input, 3));
};


/**
 * @param {!Array<!proto.pb.Transaction.Input>} value
 * @return {!proto.pb.Transaction} returns this
*/
proto.pb.Transaction.prototype.setInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pb.Transaction.Input=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction.Input}
 */
proto.pb.Transaction.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pb.Transaction.Input, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.clearInputsList = function() {
  return this.setInputsList([]);
};


/**
 * repeated Output outputs = 4;
 * @return {!Array<!proto.pb.Transaction.Output>}
 */
proto.pb.Transaction.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.pb.Transaction.Output>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction.Output, 4));
};


/**
 * @param {!Array<!proto.pb.Transaction.Output>} value
 * @return {!proto.pb.Transaction} returns this
*/
proto.pb.Transaction.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pb.Transaction.Output=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction.Output}
 */
proto.pb.Transaction.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pb.Transaction.Output, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};


/**
 * optional uint32 lock_time = 5;
 * @return {number}
 */
proto.pb.Transaction.prototype.getLockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setLockTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 size = 8;
 * @return {number}
 */
proto.pb.Transaction.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 timestamp = 9;
 * @return {number}
 */
proto.pb.Transaction.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 confirmations = 10;
 * @return {number}
 */
proto.pb.Transaction.prototype.getConfirmations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setConfirmations = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 block_height = 11;
 * @return {number}
 */
proto.pb.Transaction.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes block_hash = 12;
 * @return {!(string|Uint8Array)}
 */
proto.pb.Transaction.prototype.getBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes block_hash = 12;
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {string}
 */
proto.pb.Transaction.prototype.getBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockHash()));
};


/**
 * optional bytes block_hash = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {!Uint8Array}
 */
proto.pb.Transaction.prototype.getBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.Transaction} returns this
 */
proto.pb.Transaction.prototype.setBlockHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.MempoolTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.MempoolTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.MempoolTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.MempoolTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.pb.Transaction.toObject(includeInstance, f),
    addedTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    addedHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 4, 0),
    feePerKb: jspb.Message.getFieldWithDefault(msg, 5, 0),
    startingPriority: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.MempoolTransaction}
 */
proto.pb.MempoolTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.MempoolTransaction;
  return proto.pb.MempoolTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.MempoolTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.MempoolTransaction}
 */
proto.pb.MempoolTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction;
      reader.readMessage(value,proto.pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAddedTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAddedHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFeePerKb(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartingPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.MempoolTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.MempoolTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.MempoolTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.MempoolTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getAddedTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAddedHeight();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getFeePerKb();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStartingPriority();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional Transaction transaction = 1;
 * @return {?proto.pb.Transaction}
 */
proto.pb.MempoolTransaction.prototype.getTransaction = function() {
  return /** @type{?proto.pb.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction, 1));
};


/**
 * @param {?proto.pb.Transaction|undefined} value
 * @return {!proto.pb.MempoolTransaction} returns this
*/
proto.pb.MempoolTransaction.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.MempoolTransaction} returns this
 */
proto.pb.MempoolTransaction.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.MempoolTransaction.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 added_time = 2;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getAddedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.MempoolTransaction} returns this
 */
proto.pb.MempoolTransaction.prototype.setAddedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 added_height = 3;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getAddedHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.MempoolTransaction} returns this
 */
proto.pb.MempoolTransaction.prototype.setAddedHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 fee = 4;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.MempoolTransaction} returns this
 */
proto.pb.MempoolTransaction.prototype.setFee = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 fee_per_kb = 5;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getFeePerKb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.MempoolTransaction} returns this
 */
proto.pb.MempoolTransaction.prototype.setFeePerKb = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double starting_priority = 6;
 * @return {number}
 */
proto.pb.MempoolTransaction.prototype.getStartingPriority = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.MempoolTransaction} returns this
 */
proto.pb.MempoolTransaction.prototype.setStartingPriority = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.UnspentOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.UnspentOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.UnspentOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnspentOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    outpoint: (f = msg.getOutpoint()) && proto.pb.Transaction.Input.Outpoint.toObject(includeInstance, f),
    pubkeyScript: msg.getPubkeyScript_asB64(),
    value: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isCoinbase: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.UnspentOutput}
 */
proto.pb.UnspentOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.UnspentOutput;
  return proto.pb.UnspentOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.UnspentOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.UnspentOutput}
 */
proto.pb.UnspentOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkeyScript(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCoinbase(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.UnspentOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.UnspentOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.UnspentOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.UnspentOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getPubkeyScript_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getIsCoinbase();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional Transaction.Input.Outpoint outpoint = 1;
 * @return {?proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.UnspentOutput.prototype.getOutpoint = function() {
  return /** @type{?proto.pb.Transaction.Input.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.pb.Transaction.Input.Outpoint, 1));
};


/**
 * @param {?proto.pb.Transaction.Input.Outpoint|undefined} value
 * @return {!proto.pb.UnspentOutput} returns this
*/
proto.pb.UnspentOutput.prototype.setOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pb.UnspentOutput} returns this
 */
proto.pb.UnspentOutput.prototype.clearOutpoint = function() {
  return this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pb.UnspentOutput.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes pubkey_script = 2;
 * @return {!(string|Uint8Array)}
 */
proto.pb.UnspentOutput.prototype.getPubkeyScript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey_script = 2;
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {string}
 */
proto.pb.UnspentOutput.prototype.getPubkeyScript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkeyScript()));
};


/**
 * optional bytes pubkey_script = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkeyScript()`
 * @return {!Uint8Array}
 */
proto.pb.UnspentOutput.prototype.getPubkeyScript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkeyScript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.pb.UnspentOutput} returns this
 */
proto.pb.UnspentOutput.prototype.setPubkeyScript = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 value = 3;
 * @return {number}
 */
proto.pb.UnspentOutput.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.UnspentOutput} returns this
 */
proto.pb.UnspentOutput.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_coinbase = 4;
 * @return {boolean}
 */
proto.pb.UnspentOutput.prototype.getIsCoinbase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.UnspentOutput} returns this
 */
proto.pb.UnspentOutput.prototype.setIsCoinbase = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 block_height = 5;
 * @return {number}
 */
proto.pb.UnspentOutput.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.UnspentOutput} returns this
 */
proto.pb.UnspentOutput.prototype.setBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pb.TransactionFilter.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.TransactionFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.TransactionFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.TransactionFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    outpointsList: jspb.Message.toObjectList(msg.getOutpointsList(),
    proto.pb.Transaction.Input.Outpoint.toObject, includeInstance),
    dataElementsList: msg.getDataElementsList_asB64(),
    allTransactions: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.TransactionFilter}
 */
proto.pb.TransactionFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.TransactionFilter;
  return proto.pb.TransactionFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.TransactionFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.TransactionFilter}
 */
proto.pb.TransactionFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddresses(value);
      break;
    case 2:
      var value = new proto.pb.Transaction.Input.Outpoint;
      reader.readMessage(value,proto.pb.Transaction.Input.Outpoint.deserializeBinaryFromReader);
      msg.addOutpoints(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDataElements(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.TransactionFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.TransactionFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.TransactionFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.TransactionFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getOutpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pb.Transaction.Input.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getDataElementsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getAllTransactions();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated string addresses = 1;
 * @return {!Array<string>}
 */
proto.pb.TransactionFilter.prototype.getAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.setAddressesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.addAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};


/**
 * repeated Transaction.Input.Outpoint outpoints = 2;
 * @return {!Array<!proto.pb.Transaction.Input.Outpoint>}
 */
proto.pb.TransactionFilter.prototype.getOutpointsList = function() {
  return /** @type{!Array<!proto.pb.Transaction.Input.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pb.Transaction.Input.Outpoint, 2));
};


/**
 * @param {!Array<!proto.pb.Transaction.Input.Outpoint>} value
 * @return {!proto.pb.TransactionFilter} returns this
*/
proto.pb.TransactionFilter.prototype.setOutpointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pb.Transaction.Input.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pb.Transaction.Input.Outpoint}
 */
proto.pb.TransactionFilter.prototype.addOutpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pb.Transaction.Input.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.clearOutpointsList = function() {
  return this.setOutpointsList([]);
};


/**
 * repeated bytes data_elements = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.pb.TransactionFilter.prototype.getDataElementsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes data_elements = 3;
 * This is a type-conversion wrapper around `getDataElementsList()`
 * @return {!Array<string>}
 */
proto.pb.TransactionFilter.prototype.getDataElementsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDataElementsList()));
};


/**
 * repeated bytes data_elements = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataElementsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.pb.TransactionFilter.prototype.getDataElementsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDataElementsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.setDataElementsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.addDataElements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.clearDataElementsList = function() {
  return this.setDataElementsList([]);
};


/**
 * optional bool all_transactions = 4;
 * @return {boolean}
 */
proto.pb.TransactionFilter.prototype.getAllTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pb.TransactionFilter} returns this
 */
proto.pb.TransactionFilter.prototype.setAllTransactions = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.pb);


/***/ }),
/* 2 */
/***/ (function(module, exports, __nested_webpack_require_363685__) {

/* WEBPACK VAR INJECTION */(function(global, Buffer) {var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.findIndex",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).i}},"es6","es3");
$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return a+""};
$jscomp.polyfill("String.prototype.endsWith",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,a,"endsWith");a+="";void 0===c&&(c=b.length);c=Math.max(0,Math.min(c|0,b.length));for(var e=a.length;0<e&&0<c;)if(b[--c]!=a[--e])return!1;return 0>=e}},"es6","es3");$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).v}},"es6","es3");
$jscomp.polyfill("String.prototype.startsWith",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,a,"startsWith");a+="";var e=b.length,f=a.length;c=Math.max(0,Math.min(c|0,b.length));for(var g=0;g<f&&c<e;)if(b[c++]!=a[g++])return!1;return g>=f}},"es6","es3");
$jscomp.polyfill("String.prototype.repeat",function(a){return a?a:function(a){var b=$jscomp.checkStringArgs(this,null,"repeat");if(0>a||1342177279<a)throw new RangeError("Invalid count value");a|=0;for(var d="";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return d}},"es6","es3");var COMPILED=!0,goog=goog||{};goog.global=this||self;goog.isDef=function(a){return void 0!==a};goog.isString=function(a){return"string"==typeof a};goog.isBoolean=function(a){return"boolean"==typeof a};
goog.isNumber=function(a){return"number"==typeof a};goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2012;goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(".")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};
goog.getScriptNonce=function(a){if(a&&a!=goog.global)return goog.getScriptNonce_(a.document);null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document));return goog.cspNonce_};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.cspNonce_=null;goog.getScriptNonce_=function(a){return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};
goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};
COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={"goog.module":!0});goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],!goog.isDefAndNotNull(b))return null;return b};goog.globalize=function(a,b){b=b||goog.global;for(var c in a)b[c]=a[c]};
goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.nullFunction=function(){};
goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";
goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRANSPILE_TO_LANGUAGE="";goog.TRANSPILER="transpile.js";goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(b){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(a){return"(function(){"+a+"\n;})();\n"};
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};if(goog.isFunction(a))var c=a.call(void 0,{});else if(goog.isString(a))goog.useSafari10Workaround()&&(a=goog.workaroundSafari10EvalBug(a)),c=goog.loadModuleFromSource_.call(void 0,a);else throw Error("Invalid module definition");var d=goog.moduleLoaderState_.moduleName;if(goog.isString(d)&&d)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,
c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof c&&null!=c&&Object.seal(c),goog.loadedModules_[d]={exports:c,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+d+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a){eval(a);return{}};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};
goog.transpile_=function(a,b,c){var d=goog.global.$jscomp;d||(goog.global.$jscomp=d={});var e=d.transpile;if(!e){var f=goog.basePath+goog.TRANSPILER,g=goog.loadFileSync_(f);if(g){(function(){(0,eval)(g+"\n//# sourceURL="+f)}).call(goog.global);if(goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=
goog.global.$gwtExport.$jscomp.transpile;d=goog.global.$jscomp;e=d.transpile}}e||(e=d.transpile=function(a,b){goog.logToConsole_(b+" requires transpilation but no transpiler was found.");return a});return e(a,b,c)};
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return"array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isFunction=function(a){return"function"==goog.typeOf(a)};
goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;
goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_){try{goog.global.eval("var _evalTest_ = 1;")}catch(d){}if("undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript";c.defer=
!1;c.appendChild(b.createTextNode(a));b.head.appendChild(c);b.head.removeChild(c)}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,c){return null!=b&&c in b?b[c]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};
goog.exportProperty=function(a,b,c){a[b]=c};goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if("undefined"!==typeof d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}if("string"!=typeof b&&"symbol"!=typeof b)throw Error("method names provided to goog.base must be a string or a symbol");
e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor.prototype;g;g=Object.getPrototypeOf(g))if(g[b]===d)f=!0;else if(f)return g[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name");};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};
COMPILED||(goog.global.COMPILED=COMPILED);goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};
goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;goog.defineClass.createSealingConstructor_=function(a,b){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return a;var c=!goog.defineClass.isUnsealable_(b),d=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===d&&c&&Object.seal instanceof Function&&Object.seal(b);return b};return d};goog.defineClass.isUnsealable_=function(a){return a&&a.prototype&&a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};
goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;
a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null;this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(a,b){e?d[a]=!0:b()?(c=a,d[a]=!1):e=d[a]=!0}function b(a){try{return!!eval(a)}catch(h){return!1}}
var c="es3",d={es3:!1},e=!1,f=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";a("es5",function(){return b("[1,].length==1")});a("es6",function(){return f.match(/Edge\/(\d+)(\.\d)*/i)?!1:b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')});
a("es7",function(){return b("2 ** 2 == 4")});a("es8",function(){return b("async () => 1, true")});a("es9",function(){return b("({...rest} = {}), true")});a("es_next",function(){return!1});return{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(a,b){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var c=this.createRequiresTranspilation_();this.requiresTranspilation_=c.map;this.transpilationTarget_=this.transpilationTarget_||
c.target}if(a in this.requiresTranspilation_)return this.requiresTranspilation_[a]?!0:!goog.inHtmlDocument_()||"es6"!=b||"noModule"in goog.global.document.createElement("script")?!1:!0;throw Error("Unknown language mode: "+a);},goog.Transpiler.prototype.transpile=function(a,b){return goog.transpile_(a,b,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(a){return a.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={};
this.idToPath_={};this.written_={};this.loadingDeps_=[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory(goog.transpiler_);this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error("Unregonized namespace: "+a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=
0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=
function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(a){var e=b.getPathFromDeps_(a);if(!e)throw Error("Bad dependency path or symbol: "+a);if(!b.written_[e]){b.written_[e]=!0;a=b.dependencies_[e];for(e=0;e<a.requires.length;e++)goog.isProvided_(a.requires[e])||d(a.requires[e]);c.push(a)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else throw a="goog.require could not find: "+
a,goog.logToConsole_(a),Error(a);},goog.DebugLoader_.prototype.loadDeps_=function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},pending:function(){for(var b=[],c=0;c<a.loadingDeps_.length;c++)b.push(a.loadingDeps_[c]);
return b},setModuleState:function(a){goog.moduleLoaderState_={type:a,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(a,b,c){c&&(goog.loadedModules_[c]={exports:b,type:goog.ModuleType.ES6,moduleId:c||""})},registerGoogModuleExports:function(a,b){goog.loadedModules_[a]={exports:b,type:goog.ModuleType.GOOG,moduleId:a}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(b){if(c)throw Error("Cannot register with defer after the call to load.");a.defer_(d,
b)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,1);
break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=
function(a){return a in this.idToPath_?this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,
b,c){},goog.LoadController.prototype.setModuleState=function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=
a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=
function(a){delete goog.Dependency.callbackMap_[a]},goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=
goog.global.document;if("complete"==b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var c=goog.Dependency.registerCallback_(function(b){goog.DebugLoader_.IS_OLD_IE_&&"complete"!=b.readyState||(goog.Dependency.unregisterCallback_(c),a.loaded())}),d=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?
' nonce="'+goog.getScriptNonce()+'"':"";d='<script src="'+this.path+'" '+(goog.DebugLoader_.IS_OLD_IE_?"onreadystatechange":"onload")+"=\"goog.Dependency.callback_('"+c+'\', this)" type="text/javascript" '+(goog.Dependency.defer_?"defer":"")+d+">\x3c/script>";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(d):d)}else{var e=b.createElement("script");e.defer=goog.Dependency.defer_;e.async=!1;e.type="text/javascript";(d=goog.getScriptNonce())&&e.setAttribute("nonce",d);goog.DebugLoader_.IS_OLD_IE_?
(a.pause(),e.onreadystatechange=function(){if("loaded"==e.readyState||"complete"==e.readyState)a.loaded(),a.resume()}):e.onload=function(){e.onload=null;a.loaded()};e.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(e)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),
a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(a,b){a=b?'<script type="module" crossorigin>'+b+"\x3c/script>":'<script type="module" crossorigin src="'+a+'">\x3c/script>';d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(a):a)}function c(a,b){var c=d.createElement("script");c.defer=!0;c.async=!1;c.type=
"module";c.setAttribute("crossorigin",!0);var e=goog.getScriptNonce();e&&c.setAttribute("nonce",e);b?c.textContent=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(b):b:c.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(a):a;d.head.appendChild(c)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=
!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(b){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,b,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);
a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+k+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=
goog.loadFileSync_(e.path);e.contents_&&(e.contents_=e.transform(e.contents_),e.contents_&&(e.contents_+="\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var c=e.contents_;e.contents_=null;goog.globalEval(c);if(f)var d=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),
d)});a.loaded()}}function d(){var a=goog.global.document,b=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(b);c()}),d='<script type="text/javascript">'+goog.protectScriptTag_('goog.Dependency.callback_("'+b+'");')+"\x3c/script>";a.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(d):d)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):a.pause();
else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length,h=g&&goog.DebugLoader_.IS_OLD_IE_;g=goog.Dependency.defer_&&(g||goog.isDocumentLoading_());if(h||g)a.defer(function(){c()});else{var k=goog.global.document;h=goog.inHtmlDocument_()&&"ActiveXObject"in goog.global;if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!h){goog.Dependency.defer_=!0;a.pause();var l=k.onreadystatechange;k.onreadystatechange=function(){"interactive"==k.readyState&&(k.onreadystatechange=
l,c(),a.resume());goog.isFunction(l)&&l.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.TranspiledDependency=function(a,b,c,d,e,f){goog.TransformedDependency.call(this,a,b,c,d,e);this.transpiler=f},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(a){return this.transpiler.transpile(a,this.getPathName())},
goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,c,d,e,f,g){goog.TransformedDependency.call(this,a,b,c,d,e);this.needsTranspile_=f;this.transpiler_=g},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=
function(a){this.needsTranspile_&&(a=this.transpiler_.transpile(a,this.getPathName()));return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(a+"\n//# sourceURL="+this.path+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\n;return exports});\n//# sourceURL="+this.path+"\n"},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(a,b,
c,d){b=b||[];a=a.replace(/\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d,goog.transpiler_.needsTranspile(d.lang||"es3",d.module));this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(a){this.transpiler=a},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e,f){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,
b,c,d,e,f,this.transpiler):f?new goog.TranspiledDependency(a,b,c,d,e,this.transpiler):e.module==goog.ModuleType.ES6?"never"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.global.CLOSURE_NO_DEPS||
goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});goog.TRUSTED_TYPES_POLICY_NAME="";goog.identity_=function(a){return a};goog.createTrustedTypesPolicy=function(a){var b=null;if("undefined"===typeof TrustedTypes||!TrustedTypes.createPolicy)return b;try{b=TrustedTypes.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_,createURL:goog.identity_})}catch(c){goog.logToConsole_(c.message)}return b};
goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null;var jspb={BinaryConstants:{},ConstBinaryMessage:function(){},BinaryMessage:function(){}};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};
jspb.BinaryConstants.FieldTypeToWireType=function(a){var b=jspb.BinaryConstants.FieldType,c=jspb.BinaryConstants.WireType;switch(a){case b.INT32:case b.INT64:case b.UINT32:case b.UINT64:case b.SINT32:case b.SINT64:case b.BOOL:case b.ENUM:case b.VHASH64:return c.VARINT;case b.DOUBLE:case b.FIXED64:case b.SFIXED64:case b.FHASH64:return c.FIXED64;case b.STRING:case b.MESSAGE:case b.BYTES:return c.DELIMITED;case b.FLOAT:case b.FIXED32:case b.SFIXED32:return c.FIXED32;default:return c.INVALID}};
jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817E-45;jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875E-38;jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886E38;jspb.BinaryConstants.FLOAT64_EPS=4.9E-324;jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014E-308;jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157E308;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;
jspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=0x7fffffffffffffff;jspb.BinaryConstants.TWO_TO_64=1.8446744073709552E19;jspb.BinaryConstants.ZERO_HASH="\x00\x00\x00\x00\x00\x00\x00\x00";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){goog.debug.Error.call(this,goog.asserts.subs_(a,b));this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_=function(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]};goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d}else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&goog.asserts.doAssertFailure_("Expected to exist: %s.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.")};goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEachRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)});return e};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c);return d};
goog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};
goog.array.findIndexRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)};
goog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)};goog.array.remove=function(a,b){b=goog.array.indexOf(a,b);var c;(c=0<=b)&&goog.array.removeAt(a,b);return c};
goog.array.removeLast=function(a,b){b=goog.array.lastIndexOf(a,b);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++});return d};
goog.array.concat=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};
goog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};
goog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?"o"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;d={};for(var e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};
goog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1;var l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)};goog.array.stableSort=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||goog.array.defaultCompare;goog.array.sort(c,function(a,b){return e(a.value,b.value)||a.index-b.index});for(d=0;d<a.length;d++)a[d]=c[d].value};
goog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0};
goog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};
goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};
goog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};
goog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192){var f=goog.array.slice(d,e,e+8192);f=goog.array.flatten.apply(null,f);for(var g=0;g<f.length;g++)b.push(f[g])}else b.push(d)}return b};
goog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])};
goog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b};goog.array.shuffle=function(a,b){b=b||Math.random;for(var c=a.length-1;0<c;c--){var d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b])});return c};
goog.array.concatMap=function(a,b,c){return goog.array.concat.apply([],goog.array.map(a,b,c))};goog.crypt={};goog.crypt.stringToByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e}return b};goog.crypt.byteArrayToString=function(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b="",c=0;c<a.length;c+=8192){var d=goog.array.slice(a,c,c+8192);b+=String.fromCharCode.apply(null,d)}return b};
goog.crypt.byteArrayToHex=function(a,b){return goog.array.map(a,function(a){a=a.toString(16);return 1<a.length?a:"0"+a}).join(b||"")};goog.crypt.hexToByteArray=function(a){goog.asserts.assert(0==a.length%2,"Key string length must be multiple of 2");for(var b=[],c=0;c<a.length;c+=2)b.push(parseInt(a.substring(c,c+2),16));return b};
goog.crypt.stringToUtf8ByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};
goog.crypt.utf8ByteArrayToString=function(a){for(var b=[],c=0,d=0;c<a.length;){var e=a[c++];if(128>e)b[d++]=String.fromCharCode(e);else if(191<e&&224>e){var f=a[c++];b[d++]=String.fromCharCode((e&31)<<6|f&63)}else if(239<e&&365>e){f=a[c++];var g=a[c++],h=a[c++];e=((e&7)<<18|(f&63)<<12|(g&63)<<6|h&63)-65536;b[d++]=String.fromCharCode(55296+(e>>10));b[d++]=String.fromCharCode(56320+(e&1023))}else f=a[c++],g=a[c++],b[d++]=String.fromCharCode((e&15)<<12|(f&63)<<6|g&63)}return b.join("")};
goog.crypt.xorByteArray=function(a,b){goog.asserts.assert(a.length==b.length,"XOR array lengths must match");for(var c=[],d=0;d<a.length;d++)c.push(a[d]^b[d]);return c};goog.string={};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};
goog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\s\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.internal.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")};
goog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.internal.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.internal.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.internal.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.internal.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(goog.string.internal.NULL_RE_,"&#0;"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;
goog.string.internal.NULL_RE_=/\x00/g;goog.string.internal.ALL_RE_=/[\x00&<>"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g," &#160;"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};
goog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(".");b=goog.string.internal.trim(String(b)).split(".");for(var d=Math.max(a.length,b.length),e=0;0==c&&e<d;e++){var f=a[e]||"",g=b[e]||"";do{f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""];g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];if(0==f[0].length&&0==g[0].length)break;c=0==f[1].length?0:parseInt(f[1],10);var h=0==g[1].length?0:parseInt(g[1],10);c=goog.string.internal.compareElements_(c,h)||goog.string.internal.compareElements_(0==
f[2].length,0==g[2].length)||goog.string.internal.compareElements_(f[2],g[2]);f=f[3];g=g[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||"";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"};goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return"type_error:Const"};
goog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.getUrlObject_=function(){var a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};
goog.fs.url.findUrlObject_=function(){return goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL)?goog.global.URL:goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL)?goog.global.webkitURL:goog.isDef(goog.global.createObjectURL)?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#html"):null;goog.i18n={};goog.i18n.bidi={};goog.i18n.bidi.FORCE_RTL=!1;
goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||("ar"==goog.LOCALE.substring(0,2).toLowerCase()||"fa"==goog.LOCALE.substring(0,2).toLowerCase()||"he"==goog.LOCALE.substring(0,2).toLowerCase()||"iw"==goog.LOCALE.substring(0,2).toLowerCase()||"ps"==goog.LOCALE.substring(0,2).toLowerCase()||"sd"==goog.LOCALE.substring(0,2).toLowerCase()||"ug"==goog.LOCALE.substring(0,2).toLowerCase()||"ur"==goog.LOCALE.substring(0,2).toLowerCase()||"yi"==goog.LOCALE.substring(0,2).toLowerCase())&&(2==goog.LOCALE.length||
"-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))||3<=goog.LOCALE.length&&"ckb"==goog.LOCALE.substring(0,3).toLowerCase()&&(3==goog.LOCALE.length||"-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))||7<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))&&("adlm"==goog.LOCALE.substring(3,7).toLowerCase()||"arab"==goog.LOCALE.substring(3,7).toLowerCase()||"hebr"==goog.LOCALE.substring(3,7).toLowerCase()||"nkoo"==goog.LOCALE.substring(3,
7).toLowerCase()||"rohg"==goog.LOCALE.substring(3,7).toLowerCase()||"thaa"==goog.LOCALE.substring(3,7).toLowerCase())||8<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))&&("adlm"==goog.LOCALE.substring(4,8).toLowerCase()||"arab"==goog.LOCALE.substring(4,8).toLowerCase()||"hebr"==goog.LOCALE.substring(4,8).toLowerCase()||"nkoo"==goog.LOCALE.substring(4,8).toLowerCase()||"rohg"==goog.LOCALE.substring(4,8).toLowerCase()||"thaa"==goog.LOCALE.substring(4,8).toLowerCase());
goog.i18n.bidi.Format={LRE:"\u202a",RLE:"\u202b",PDF:"\u202c",LRM:"\u200e",RLM:"\u200f"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir=function(a,b){return"number"==typeof a?0<a?goog.i18n.bidi.Dir.LTR:0>a?goog.i18n.bidi.Dir.RTL:b?null:goog.i18n.bidi.Dir.NEUTRAL:null==a?null:a?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";goog.i18n.bidi.rtlChars_="\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(a,b){return b?a.replace(goog.i18n.bidi.htmlSkipReg_,""):a};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.hasAnyRtl=function(a,b){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr=function(a,b){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(a){return goog.i18n.bidi.rtlRe_.test(a)};goog.i18n.bidi.isLtrChar=function(a){return goog.i18n.bidi.ltrRe_.test(a)};goog.i18n.bidi.isNeutralChar=function(a){return!goog.i18n.bidi.isLtrChar(a)&&!goog.i18n.bidi.isRtlChar(a)};
goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.startsWithRtl=function(a,b){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr=function(a,b){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;goog.i18n.bidi.isNeutralText=function(a,b){a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b);return goog.i18n.bidi.isRequiredLtrRe_.test(a)||!goog.i18n.bidi.hasAnyLtr(a)&&!goog.i18n.bidi.hasAnyRtl(a)};
goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");goog.i18n.bidi.endsWithLtr=function(a,b){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl=function(a,b){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;goog.i18n.bidi.isRtlLanguage=function(a){return goog.i18n.bidi.rtlLocalesRe_.test(a)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText=function(a,b){b=(void 0===b?goog.i18n.bidi.hasAnyRtl(a):b)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM;return a.replace(goog.i18n.bidi.bracketGuardTextRe_,b+"$&"+b)};goog.i18n.bidi.enforceRtlInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=rtl"):"\n<span dir=rtl>"+a+"</span>"};goog.i18n.bidi.enforceRtlInText=function(a){return goog.i18n.bidi.Format.RLE+a+goog.i18n.bidi.Format.PDF};
goog.i18n.bidi.enforceLtrInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=ltr"):"\n<span dir=ltr>"+a+"</span>"};goog.i18n.bidi.enforceLtrInText=function(a){return goog.i18n.bidi.Format.LRE+a+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;
goog.i18n.bidi.mirrorCSS=function(a){return a.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote=function(a){return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05f3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;
goog.i18n.bidi.estimateDirection=function(a,b){var c=0,d=0,e=!1;a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b).split(goog.i18n.bidi.wordSeparatorRe_);for(b=0;b<a.length;b++){var f=a[b];goog.i18n.bidi.startsWithRtl(f)?(c++,d++):goog.i18n.bidi.isRequiredLtrRe_.test(f)?e=!0:goog.i18n.bidi.hasAnyLtr(f)?d++:goog.i18n.bidi.hasNumeralsRe_.test(f)&&(e=!0)}return 0==d?e?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:c/d>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};
goog.i18n.bidi.detectRtlDirectionality=function(a,b){return goog.i18n.bidi.estimateDirection(a,b)==goog.i18n.bidi.Dir.RTL};goog.i18n.bidi.setElementDirAndAlign=function(a,b){a&&(b=goog.i18n.bidi.toDir(b))&&(a.style.textAlign=b==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,a.dir=b==goog.i18n.bidi.Dir.RTL?"rtl":"ltr")};
goog.i18n.bidi.setElementDirByTextDirectionality=function(a,b){switch(goog.i18n.bidi.estimateDirection(b)){case goog.i18n.bidi.Dir.LTR:a.dir="ltr";break;case goog.i18n.bidi.Dir.RTL:a.dir="rtl";break;default:a.removeAttribute("dir")}};goog.i18n.bidi.DirectionalString=function(){};goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_="";this.trustedURL_=null;this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};
goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",c[2]||"",a)+goog.html.TrustedResourceUrl.stringifyParams_("#",d,b))};
goog.DEBUG&&(goog.html.TrustedResourceUrl.prototype.toString=function(){return"TrustedResourceUrl{"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+"}"});goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl&&a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.unwrapTrustedURL=function(a){return a.trustedURL_?a.trustedURL_:goog.html.TrustedResourceUrl.unwrap(a)};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof goog.string.Const?goog.string.Const.unwrap(a):
encodeURIComponent(String(a))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.TrustedResourceUrl;b.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(a):a;goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY&&(b.trustedURL_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a));return b};
goog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if(goog.isString(c))return c?a+encodeURIComponent(c):"";for(var d in c){var e=c[d];e=goog.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?"&":"")+encodeURIComponent(d)+"="+encodeURIComponent(String(g)))}}return b};goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeUrlWrappedValue_="";this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.DEBUG&&(goog.html.SafeUrl.prototype.toString=function(){return"SafeUrl{"+this.privateDoNotAccessOrElseSafeUrlWrappedValue_+"}"});goog.html.SafeUrl.unwrap=function(a){return goog.html.SafeUrl.unwrapTrustedURL(a).toString()};
goog.html.SafeUrl.unwrapTrustedURL=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl&&a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeUrl"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SAFE_MIME_TYPE_PATTERN_.test(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.DATA_URL_PATTERN_=/^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;goog.html.SafeUrl.fromDataUrl=function(a){a=a.replace(/(%0A|%0D)/g,"");var b=a.match(goog.html.DATA_URL_PATTERN_);b=b&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(b[1]);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b?a:goog.html.SafeUrl.INNOCUOUS_STRING)};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SIP_URL_PATTERN_=/^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"fb-messenger://share")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"whatsapp://send")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf("#");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"ssh://")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//,a,b)};
goog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(a){return goog.string.Const.unwrap(a)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.sanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);goog.html.SAFE_URL_PATTERN_.test(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),"%s does not match the safe URL pattern",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.SafeUrl;b.privateDoNotAccessOrElseSafeUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a):a;return b};goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_="";this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyle.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyle.EMPTY;goog.asserts.assert(goog.string.internal.endsWith(a,";"),"Last character of style string is not ';': "+a);goog.asserts.assert(goog.string.internal.contains(a,":"),"Style string must contain at least one ':', to specify a \"name: value\" pair: "+a);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};goog.DEBUG&&(goog.html.SafeStyle.prototype.toString=function(){return"SafeStyle{"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+"}"});
goog.html.SafeStyle.unwrap=function(a){if(a instanceof goog.html.SafeStyle&&a.constructor===goog.html.SafeStyle&&a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;goog.asserts.fail("expected object of type SafeStyle, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyle"};goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=a;return this};goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";
goog.html.SafeStyle.create=function(a){var b="",c;for(c in a){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error("Name allows only [-_a-zA-Z0-9], got: "+c);var d=a[c];null!=d&&(d=goog.isArray(d)?goog.array.map(d,goog.html.SafeStyle.sanitizePropertyValue_).join(" "):goog.html.SafeStyle.sanitizePropertyValue_(d),b+=c+":"+d+";")}return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};
goog.html.SafeStyle.sanitizePropertyValue_=function(a){if(a instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):goog.html.SafeStyle.sanitizePropertyValueString_(String(a));if(/[{;}]/.test(a))throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.",[a]);return a};
goog.html.SafeStyle.sanitizePropertyValueString_=function(a){var b=a.replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.URL_RE_,"url");if(goog.html.SafeStyle.VALUE_RE_.test(b)){if(goog.html.SafeStyle.COMMENT_RE_.test(a))return goog.asserts.fail("String value disallows comments, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedQuotes_(a))return goog.asserts.fail("String value requires balanced quotes, got: "+
a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedSquareBrackets_(a))return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING}else return goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;return goog.html.SafeStyle.sanitizeUrl_(a)};
goog.html.SafeStyle.hasBalancedQuotes_=function(a){for(var b=!0,c=!0,d=0;d<a.length;d++){var e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c)}return b&&c};goog.html.SafeStyle.hasBalancedSquareBrackets_=function(a){for(var b=!0,c=/^[-_a-zA-Z0-9]$/,d=0;d<a.length;d++){var e=a.charAt(d);if("]"==e){if(b)return!1;b=!0}else if("["==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_="[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeStyle.URL_RE_=/\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;goog.html.SafeStyle.FUNCTIONS_RE_=/\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\([-+*/0-9a-z.%\[\], ]+\)/g;goog.html.SafeStyle.COMMENT_RE_=/\/\*/;
goog.html.SafeStyle.sanitizeUrl_=function(a){return a.replace(goog.html.SafeStyle.URL_RE_,function(a,c,d,e){var b="";d=d.replace(/^(['"])(.*)\1$/,function(a,c,d){b=c;return d});a=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+b+a+b+e})};goog.html.SafeStyle.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyle.unwrap(a)};goog.array.forEach(arguments,c);return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_="";this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeScript.prototype.implementsGoogStringTypedString=!0;goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeScript.fromConstant=function(a){a=goog.string.Const.unwrap(a);return 0===a.length?goog.html.SafeScript.EMPTY:goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeScript.fromConstantAndArgs=function(a,b){for(var c=[],d=1;d<arguments.length;d++)c.push(goog.html.SafeScript.stringify_(arguments[d]));return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("("+goog.string.Const.unwrap(a)+")("+c.join(", ")+");")};goog.html.SafeScript.fromJson=function(a){return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(a))};goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()};
goog.DEBUG&&(goog.html.SafeScript.prototype.toString=function(){return"SafeScript{"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+"}"});goog.html.SafeScript.unwrap=function(a){return goog.html.SafeScript.unwrapTrustedScript(a).toString()};
goog.html.SafeScript.unwrapTrustedScript=function(a){if(a instanceof goog.html.SafeScript&&a.constructor===goog.html.SafeScript&&a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;goog.asserts.fail("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeScript"};
goog.html.SafeScript.stringify_=function(a){return JSON.stringify(a).replace(/</g,"\\x3c")};goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(a):a;return this};goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");goog.object={};goog.object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1};
goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0};goog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};
goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};goog.object.getValueByKeys=function(a,b){var c=goog.isArrayLike(b),d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};
goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};goog.object.isEmpty=function(a){for(var b in a)return!1;return!0};goog.object.clear=function(a){for(var b in a)delete a[b]};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};
goog.object.set=function(a,b,c){a[b]=c};goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(var d in b)if(!(d in a))return!1;return!0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};
goog.object.unsafeClone=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(goog.isFunction(a.clone))return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};
goog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};
goog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};
goog.object.getAllPropertyNames=function(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(a);for(var d={};a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){for(var e=Object.getOwnPropertyNames(a),f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return goog.object.getKeys(d)};goog.object.getSuperClass=function(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor};goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_="";this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyleSheet.createRule=function(a,b){if(goog.string.internal.contains(a,"<"))throw Error("Selector does not allow '<', got: "+a);var c=a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+a);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof goog.html.SafeStyle||(b=goog.html.SafeStyle.create(b));
a=a+"{"+goog.html.SafeStyle.unwrap(b).replace(/</g,"\\3C ")+"}";return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.hasBalancedBrackets_=function(a){for(var b={"(":")","[":"]"},c=[],d=0;d<a.length;d++){var e=a[d];if(b[e])c.push(b[e]);else if(goog.object.contains(b,e)&&c.pop()!=e)return!1}return 0==c.length};
goog.html.SafeStyleSheet.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyleSheet.unwrap(a)};goog.array.forEach(arguments,c);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.SafeStyleSheet.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyleSheet.EMPTY;goog.asserts.assert(!goog.string.internal.contains(a,"<"),"Forbidden '<' character in style sheet string: "+a);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_};
goog.DEBUG&&(goog.html.SafeStyleSheet.prototype.toString=function(){return"SafeStyleSheet{"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+"}"});
goog.html.SafeStyleSheet.unwrap=function(a){if(a instanceof goog.html.SafeStyleSheet&&a.constructor===goog.html.SafeStyleSheet&&a.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;goog.asserts.fail("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyleSheet"};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(a){return(new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(a)};goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=a;return this};goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};goog.dom.HtmlElement=function(){};goog.dom.TagName=function(a){this.tagName_=a};goog.dom.TagName.prototype.toString=function(){return this.tagName_};goog.dom.TagName.A=new goog.dom.TagName("A");goog.dom.TagName.ABBR=new goog.dom.TagName("ABBR");goog.dom.TagName.ACRONYM=new goog.dom.TagName("ACRONYM");goog.dom.TagName.ADDRESS=new goog.dom.TagName("ADDRESS");goog.dom.TagName.APPLET=new goog.dom.TagName("APPLET");goog.dom.TagName.AREA=new goog.dom.TagName("AREA");goog.dom.TagName.ARTICLE=new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE=new goog.dom.TagName("ASIDE");goog.dom.TagName.AUDIO=new goog.dom.TagName("AUDIO");goog.dom.TagName.B=new goog.dom.TagName("B");goog.dom.TagName.BASE=new goog.dom.TagName("BASE");goog.dom.TagName.BASEFONT=new goog.dom.TagName("BASEFONT");goog.dom.TagName.BDI=new goog.dom.TagName("BDI");goog.dom.TagName.BDO=new goog.dom.TagName("BDO");goog.dom.TagName.BIG=new goog.dom.TagName("BIG");goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName("BLOCKQUOTE");goog.dom.TagName.BODY=new goog.dom.TagName("BODY");
goog.dom.TagName.BR=new goog.dom.TagName("BR");goog.dom.TagName.BUTTON=new goog.dom.TagName("BUTTON");goog.dom.TagName.CANVAS=new goog.dom.TagName("CANVAS");goog.dom.TagName.CAPTION=new goog.dom.TagName("CAPTION");goog.dom.TagName.CENTER=new goog.dom.TagName("CENTER");goog.dom.TagName.CITE=new goog.dom.TagName("CITE");goog.dom.TagName.CODE=new goog.dom.TagName("CODE");goog.dom.TagName.COL=new goog.dom.TagName("COL");goog.dom.TagName.COLGROUP=new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND=new goog.dom.TagName("COMMAND");goog.dom.TagName.DATA=new goog.dom.TagName("DATA");goog.dom.TagName.DATALIST=new goog.dom.TagName("DATALIST");goog.dom.TagName.DD=new goog.dom.TagName("DD");goog.dom.TagName.DEL=new goog.dom.TagName("DEL");goog.dom.TagName.DETAILS=new goog.dom.TagName("DETAILS");goog.dom.TagName.DFN=new goog.dom.TagName("DFN");goog.dom.TagName.DIALOG=new goog.dom.TagName("DIALOG");goog.dom.TagName.DIR=new goog.dom.TagName("DIR");goog.dom.TagName.DIV=new goog.dom.TagName("DIV");
goog.dom.TagName.DL=new goog.dom.TagName("DL");goog.dom.TagName.DT=new goog.dom.TagName("DT");goog.dom.TagName.EM=new goog.dom.TagName("EM");goog.dom.TagName.EMBED=new goog.dom.TagName("EMBED");goog.dom.TagName.FIELDSET=new goog.dom.TagName("FIELDSET");goog.dom.TagName.FIGCAPTION=new goog.dom.TagName("FIGCAPTION");goog.dom.TagName.FIGURE=new goog.dom.TagName("FIGURE");goog.dom.TagName.FONT=new goog.dom.TagName("FONT");goog.dom.TagName.FOOTER=new goog.dom.TagName("FOOTER");goog.dom.TagName.FORM=new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME=new goog.dom.TagName("FRAME");goog.dom.TagName.FRAMESET=new goog.dom.TagName("FRAMESET");goog.dom.TagName.H1=new goog.dom.TagName("H1");goog.dom.TagName.H2=new goog.dom.TagName("H2");goog.dom.TagName.H3=new goog.dom.TagName("H3");goog.dom.TagName.H4=new goog.dom.TagName("H4");goog.dom.TagName.H5=new goog.dom.TagName("H5");goog.dom.TagName.H6=new goog.dom.TagName("H6");goog.dom.TagName.HEAD=new goog.dom.TagName("HEAD");goog.dom.TagName.HEADER=new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP=new goog.dom.TagName("HGROUP");goog.dom.TagName.HR=new goog.dom.TagName("HR");goog.dom.TagName.HTML=new goog.dom.TagName("HTML");goog.dom.TagName.I=new goog.dom.TagName("I");goog.dom.TagName.IFRAME=new goog.dom.TagName("IFRAME");goog.dom.TagName.IMG=new goog.dom.TagName("IMG");goog.dom.TagName.INPUT=new goog.dom.TagName("INPUT");goog.dom.TagName.INS=new goog.dom.TagName("INS");goog.dom.TagName.ISINDEX=new goog.dom.TagName("ISINDEX");goog.dom.TagName.KBD=new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN=new goog.dom.TagName("KEYGEN");goog.dom.TagName.LABEL=new goog.dom.TagName("LABEL");goog.dom.TagName.LEGEND=new goog.dom.TagName("LEGEND");goog.dom.TagName.LI=new goog.dom.TagName("LI");goog.dom.TagName.LINK=new goog.dom.TagName("LINK");goog.dom.TagName.MAIN=new goog.dom.TagName("MAIN");goog.dom.TagName.MAP=new goog.dom.TagName("MAP");goog.dom.TagName.MARK=new goog.dom.TagName("MARK");goog.dom.TagName.MATH=new goog.dom.TagName("MATH");goog.dom.TagName.MENU=new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM=new goog.dom.TagName("MENUITEM");goog.dom.TagName.META=new goog.dom.TagName("META");goog.dom.TagName.METER=new goog.dom.TagName("METER");goog.dom.TagName.NAV=new goog.dom.TagName("NAV");goog.dom.TagName.NOFRAMES=new goog.dom.TagName("NOFRAMES");goog.dom.TagName.NOSCRIPT=new goog.dom.TagName("NOSCRIPT");goog.dom.TagName.OBJECT=new goog.dom.TagName("OBJECT");goog.dom.TagName.OL=new goog.dom.TagName("OL");goog.dom.TagName.OPTGROUP=new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION=new goog.dom.TagName("OPTION");goog.dom.TagName.OUTPUT=new goog.dom.TagName("OUTPUT");goog.dom.TagName.P=new goog.dom.TagName("P");goog.dom.TagName.PARAM=new goog.dom.TagName("PARAM");goog.dom.TagName.PICTURE=new goog.dom.TagName("PICTURE");goog.dom.TagName.PRE=new goog.dom.TagName("PRE");goog.dom.TagName.PROGRESS=new goog.dom.TagName("PROGRESS");goog.dom.TagName.Q=new goog.dom.TagName("Q");goog.dom.TagName.RP=new goog.dom.TagName("RP");goog.dom.TagName.RT=new goog.dom.TagName("RT");
goog.dom.TagName.RTC=new goog.dom.TagName("RTC");goog.dom.TagName.RUBY=new goog.dom.TagName("RUBY");goog.dom.TagName.S=new goog.dom.TagName("S");goog.dom.TagName.SAMP=new goog.dom.TagName("SAMP");goog.dom.TagName.SCRIPT=new goog.dom.TagName("SCRIPT");goog.dom.TagName.SECTION=new goog.dom.TagName("SECTION");goog.dom.TagName.SELECT=new goog.dom.TagName("SELECT");goog.dom.TagName.SMALL=new goog.dom.TagName("SMALL");goog.dom.TagName.SOURCE=new goog.dom.TagName("SOURCE");goog.dom.TagName.SPAN=new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE=new goog.dom.TagName("STRIKE");goog.dom.TagName.STRONG=new goog.dom.TagName("STRONG");goog.dom.TagName.STYLE=new goog.dom.TagName("STYLE");goog.dom.TagName.SUB=new goog.dom.TagName("SUB");goog.dom.TagName.SUMMARY=new goog.dom.TagName("SUMMARY");goog.dom.TagName.SUP=new goog.dom.TagName("SUP");goog.dom.TagName.SVG=new goog.dom.TagName("SVG");goog.dom.TagName.TABLE=new goog.dom.TagName("TABLE");goog.dom.TagName.TBODY=new goog.dom.TagName("TBODY");goog.dom.TagName.TD=new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE=new goog.dom.TagName("TEMPLATE");goog.dom.TagName.TEXTAREA=new goog.dom.TagName("TEXTAREA");goog.dom.TagName.TFOOT=new goog.dom.TagName("TFOOT");goog.dom.TagName.TH=new goog.dom.TagName("TH");goog.dom.TagName.THEAD=new goog.dom.TagName("THEAD");goog.dom.TagName.TIME=new goog.dom.TagName("TIME");goog.dom.TagName.TITLE=new goog.dom.TagName("TITLE");goog.dom.TagName.TR=new goog.dom.TagName("TR");goog.dom.TagName.TRACK=new goog.dom.TagName("TRACK");goog.dom.TagName.TT=new goog.dom.TagName("TT");
goog.dom.TagName.U=new goog.dom.TagName("U");goog.dom.TagName.UL=new goog.dom.TagName("UL");goog.dom.TagName.VAR=new goog.dom.TagName("VAR");goog.dom.TagName.VIDEO=new goog.dom.TagName("VIDEO");goog.dom.TagName.WBR=new goog.dom.TagName("WBR");goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};
goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.caseInsensitiveContains(b,a)};
goog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=/(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g,c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdgeHtml_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchEdgeChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("Edg/")};
goog.labs.userAgent.browser.matchOperaChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("OPR")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")||goog.labs.userAgent.util.matchUserAgent("FxiOS")};
goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdgeHtml_()||goog.labs.userAgent.browser.matchEdgeChromium_()||goog.labs.userAgent.browser.matchOperaChromium_()||goog.labs.userAgent.browser.matchFirefox_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};
goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&!goog.labs.userAgent.browser.matchFirefox_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdgeHtml_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdgeHtml_;goog.labs.userAgent.browser.isEdgeChromium=goog.labs.userAgent.browser.matchEdgeChromium_;goog.labs.userAgent.browser.isOperaChromium=goog.labs.userAgent.browser.matchOperaChromium_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||""}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);b=goog.labs.userAgent.util.extractVersionTuples(b);var c={};goog.array.forEach(b,function(a){c[a[0]]=a[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a(["Version","Opera"]):goog.labs.userAgent.browser.isEdge()?a(["Edge"]):
goog.labs.userAgent.browser.isEdgeChromium()?a(["Edg"]):goog.labs.userAgent.browser.isChrome()?a(["Chrome","CriOS"]):(b=b[2])&&b[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};
goog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\d\.]*)/.exec(a);if(b&&b[1])return b[1];b="";var c=/MSIE +([\d\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\/(\d.\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b};goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;this.dir_=null};goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0;goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()};
goog.DEBUG&&(goog.html.SafeHtml.prototype.toString=function(){return"SafeHtml{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"});goog.html.SafeHtml.unwrap=function(a){return goog.html.SafeHtml.unwrapTrustedHTML(a).toString()};
goog.html.SafeHtml.unwrapTrustedHTML=function(a){if(a instanceof goog.html.SafeHtml&&a.constructor===goog.html.SafeHtml&&a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail("expected object of type SafeHtml, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeHtml"};
goog.html.SafeHtml.htmlEscape=function(a){if(a instanceof goog.html.SafeHtml)return a;var b="object"==typeof a,c=null;b&&a.implementsGoogI18nBidiDirectionalString&&(c=a.getDirection());a=b&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a),c)};
goog.html.SafeHtml.htmlEscapePreservingNewlines=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a)),a.getDirection())};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a)),a.getDirection())};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0};goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={APPLET:!0,BASE:!0,EMBED:!0,IFRAME:!0,LINK:!0,MATH:!0,META:!0,OBJECT:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.html.SafeHtml.create=function(a,b,c){goog.html.SafeHtml.verifyTagName(String(a));return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)};
goog.html.SafeHtml.verifyTagName=function(a){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a))throw Error("Invalid tag name <"+a+">.");if(a.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error("Tag name <"+a+"> is not allowed for SafeHtml.");};
goog.html.SafeHtml.createIframe=function(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);var e={};e.src=a||null;e.srcdoc=b&&goog.html.SafeHtml.unwrap(b);a=goog.html.SafeHtml.combineAttributes(e,{sandbox:""},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.createSandboxIframe=function(a,b,c,d){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error("The browser does not support sandboxed iframes.");var e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=goog.html.SafeHtml.combineAttributes(e,{},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype};goog.html.SafeHtml.createScriptSrc=function(a,b){goog.html.TrustedResourceUrl.unwrap(a);a=goog.html.SafeHtml.combineAttributes({src:a},{},b);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)};
goog.html.SafeHtml.createScript=function(a,b){for(var c in b){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d||"type"==d)throw Error('Cannot set "'+d+'" attribute');}c="";a=goog.array.concat(a);for(d=0;d<a.length;d++)c+=goog.html.SafeScript.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",b,a)};
goog.html.SafeHtml.createStyle=function(a,b){b=goog.html.SafeHtml.combineAttributes({type:"text/css"},{},b);var c="";a=goog.array.concat(a);for(var d=0;d<a.length;d++)c+=goog.html.SafeStyleSheet.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)};
goog.html.SafeHtml.createMetaRefresh=function(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.internal.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(b||0)+"; url="+a})};
goog.html.SafeHtml.getAttrNameAndValue_=function(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())c=goog.html.SafeHtml.getStyleValue_(c);else{if(/^on/i.test(b))throw Error('Attribute "'+b+'" requires goog.string.Const value, "'+c+'" given.');if(b.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);
else if(goog.isString(c))c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error('Attribute "'+b+'" on tag "'+a+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+c+'" given.');}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(goog.isString(c)||goog.isNumber(c),"String or number value expected, got "+typeof c+" with value: "+c);return b+'="'+goog.string.internal.htmlEscape(String(c))+'"'};
goog.html.SafeHtml.getStyleValue_=function(a){if(!goog.isObject(a))throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a);a instanceof goog.html.SafeStyle||(a=goog.html.SafeStyle.create(a));return goog.html.SafeStyle.unwrap(a)};goog.html.SafeHtml.createWithDir=function(a,b,c,d){b=goog.html.SafeHtml.create(b,c,d);b.dir_=a;return b};
goog.html.SafeHtml.join=function(a,b){a=goog.html.SafeHtml.htmlEscape(a);var c=a.getDirection(),d=[],e=function(a){goog.isArray(a)?goog.array.forEach(a,e):(a=goog.html.SafeHtml.htmlEscape(a),d.push(goog.html.SafeHtml.unwrap(a)),a=a.getDirection(),c==goog.i18n.bidi.Dir.NEUTRAL?c=a:a!=goog.i18n.bidi.Dir.NEUTRAL&&c!=a&&(c=null))};goog.array.forEach(b,e);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(goog.html.SafeHtml.unwrap(a)),c)};
goog.html.SafeHtml.concat=function(a){return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY,Array.prototype.slice.call(arguments))};goog.html.SafeHtml.concatWithDir=function(a,b){var c=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));c.dir_=a;return c};goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(a,b){return(new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(a,b)};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(a):a;this.dir_=b;return this};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(a,b,c){var d=null;var e="<"+a+goog.html.SafeHtml.stringifyAttributes(a,b);goog.isDefAndNotNull(c)?goog.isArray(c)||(c=[c]):c=[];goog.dom.tags.isVoidTag(a.toLowerCase())?(goog.asserts.assert(!c.length,"Void tag <"+a+"> does not allow content."),e+=">"):(d=goog.html.SafeHtml.concat(c),e+=">"+goog.html.SafeHtml.unwrap(d)+"</"+a+">",d=d.getDirection());(a=b&&b.dir)&&(d=/^(ltr|rtl|auto)$/i.test(a)?goog.i18n.bidi.Dir.NEUTRAL:
null);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e,d)};goog.html.SafeHtml.stringifyAttributes=function(a,b){var c="";if(b)for(var d in b){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d))throw Error('Invalid attribute name "'+d+'".');var e=b[d];goog.isDefAndNotNull(e)&&(c+=" "+goog.html.SafeHtml.getAttrNameAndValue_(a,d,e))}return c};
goog.html.SafeHtml.combineAttributes=function(a,b,c){var d={},e;for(e in a)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e];for(e in b)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=b[e];for(e in c){var f=e.toLowerCase();if(f in a)throw Error('Cannot override "'+f+'" attribute, got "'+e+'" with value "'+c[e]+'"');f in b&&delete d[f];d[e]=c[e]}return d};
goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b,c){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b,c||null)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&"undefined"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};
goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAudioElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLCanvasElement")};
goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};
goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return"<object could not be stringified>"}else return void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=Array.prototype.slice.call(arguments);b.push.apply(b,c);return a.apply(this,b)}};goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};
goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){var c=arguments,d=c.length;return function(){var a;d&&(a=c[d-1].apply(this,arguments));for(var b=d-2;0<=b;b--)a=c[b].call(this,a);return a}};goog.functions.sequence=function(a){var b=arguments,c=b.length;return function(){for(var a,e=0;e<c;e++)a=b[e].apply(this,arguments);return a}};
goog.functions.and=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(!b[a].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(b[a].apply(this,arguments))return!0;return!1}};goog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};
goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){var b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){var b=a;return function(){if(b){var a=b;b=null;a()}}};
goog.functions.debounce=function(a,b,c){var d=0;return function(e){goog.global.clearTimeout(d);var f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){var d=0,e=!1,f=[],g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);a.apply(c,f)};return function(a){f=arguments;d?e=!0:h()}};goog.functions.rateLimit=function(a,b,c){var d=0,e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,goog.html.SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&"undefined"===typeof document)return!1;var a=document.createElement("div"),b=document.createElement("div");b.appendChild(document.createElement("div"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);return!b.parentElement});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=goog.html.SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(goog.html.SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setImageSrc=function(a,b){goog.dom.asserts.assertIsHTMLImageElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:image\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrapTrustedURL(b)};goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)};goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)};
goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrapTrustedURL(b):b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrapTrustedURL(b):
goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);(b=goog.getScriptNonce())&&a.setAttribute("nonce",b)};
goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.text=goog.html.SafeScript.unwrapTrustedScript(b);(b=goog.getScriptNonce())&&a.setAttribute("nonce",b)};goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrapTrustedURL(b)};
goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrapTrustedURL(b))};goog.dom.safe.replaceLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrapTrustedURL(b))};
goog.dom.safe.openInWindow=function(a,b,c,d,e){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);return(b||goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(a),c?goog.string.Const.unwrap(c):"",d,e)};goog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,"text/html")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b),c)};
goog.dom.safe.createImageFromBlob=function(a){if(!/^image\/.*/g.test(a.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};goog.dom.safe.setImageSrc(a,goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."),b));return a};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;
goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};
goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\t\n\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\u0080"<=a&&"\ufffd">=a};
goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;
goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;
goog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};var d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var e=c[a];if(e)return e;"#"==b.charAt(0)&&(b=Number("0"+b.substr(1)),isNaN(b)||(e=String.fromCharCode(b)));e||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),
a+" ")),e=d.firstChild.nodeValue.slice(0,-1));return c[a]=e})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.substr(1)),isNaN(c))?a:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b=a.charCodeAt(0);if(31<b&&127>b)var c=a;else{if(256>b){if(c="\\x",16>b||256<b)c+="0"}else c="\\u",4096>b&&(c+="0");c+=b.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=c};goog.string.contains=goog.string.internal.contains;goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;
goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\$/g,"$$$$"))};
goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};goog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(".");-1==c&&(c=a.length);return goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};
goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;
goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(a,c){return c.toUpperCase()})};
goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(a,b){b=goog.isString(b)?goog.string.regExpEscape(b):"\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(a,b,e){return b+e.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};
goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;for(var c=-1,d=0;d<b.length;d++)if(""!=b[d]){var e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};
goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent("CrKey")};goog.labs.userAgent.platform.isKaiOS=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS")};goog.labs.userAgent.platform.isGo2Phone=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP")};
goog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b="";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isKaiOS()?(b=/(?:KaiOS)\/(\S+)/i,
b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isAndroid()?(b=/Android\s+([^\);]+)(\)|;)/,b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||""};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.reflect={};goog.reflect.object=function(a,b){return b};goog.reflect.objectProperty=function(a,b){return a};goog.reflect.sinkValue=function(a){goog.reflect.sinkValue[" "](a);return a};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(a,b){try{return goog.reflect.sinkValue(a[b]),!0}catch(c){}return!1};goog.reflect.cache=function(a,b,c,d){d=d?d(b):b;return Object.prototype.hasOwnProperty.call(a,d)?a[d]:a[d]=c(b)};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){a=goog.labs.userAgent.util.extractVersionTuples(a);var b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return"Gecko"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,"Firefox"):b[1];a=a[0];var c;if(a&&(c=a[2])&&(c=/Trident\/([^\s;]+)/.exec(c)))return c[1]}return""};
goog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if("Edge"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){return(a=goog.array.find(a,function(a){return b==a[0]}))&&a[1]||""};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigatorTyped=function(){return goog.global.navigator||null};goog.userAgent.getNavigator=function(){return goog.userAgent.getNavigatorTyped()};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};
goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;goog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigatorTyped();return a&&a.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;
goog.userAgent.ASSUME_IPAD=!1;goog.userAgent.ASSUME_IPOD=!1;goog.userAgent.ASSUME_KAIOS=!1;goog.userAgent.ASSUME_GO2PHONE=!1;goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigatorTyped();return!!a&&goog.string.contains(a.appVersion||"","X11")};
goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();goog.userAgent.KAIOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_KAIOS:goog.labs.userAgent.platform.isKaiOS();goog.userAgent.GO2PHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_GO2PHONE:goog.labs.userAgent.platform.isGo2Phone();
goog.userAgent.determineVersion_=function(){var a="",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:"");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),null!=b&&b>parseFloat(a))?String(b):a};
goog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv:([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(a);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(a);if(goog.userAgent.OPERA)return/(?:Version)[ \/]?(\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};
goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,a,function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,a)})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){if(goog.global.document&&goog.userAgent.IE)return goog.userAgent.getDocumentMode_()}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;
goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.DEFAULT_ALPHABET_COMMON_="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"+/=";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"-_.";goog.crypt.base64.Alphabet={DEFAULT:0,NO_PADDING:1,WEBSAFE:2,WEBSAFE_DOT_PADDING:3,WEBSAFE_NO_PADDING:4};goog.crypt.base64.paddingChars_="=.";
goog.crypt.base64.isPadding_=function(a){return goog.string.contains(goog.crypt.base64.paddingChars_,a)};goog.crypt.base64.byteToCharMaps_={};goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||"function"==typeof goog.global.btoa;
goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&"function"==typeof goog.global.atob;
goog.crypt.base64.encodeByteArray=function(a,b){goog.asserts.assert(goog.isArrayLike(a),"encodeByteArray takes an array as a parameter");void 0===b&&(b=goog.crypt.base64.Alphabet.DEFAULT);goog.crypt.base64.init_();b=goog.crypt.base64.byteToCharMaps_[b];for(var c=[],d=0;d<a.length;d+=3){var e=a[d],f=d+1<a.length,g=f?a[d+1]:0,h=d+2<a.length,k=h?a[d+2]:0,l=e>>2;e=(e&3)<<4|g>>4;g=(g&15)<<2|k>>6;k&=63;h||(k=64,f||(g=64));c.push(b[l],b[e],b[g]||"",b[k]||"")}return c.join("")};
goog.crypt.base64.encodeString=function(a,b){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!b?goog.global.btoa(a):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a),b)};goog.crypt.base64.decodeString=function(a,b){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!b)return goog.global.atob(a);var c="";goog.crypt.base64.decodeStringInternal_(a,function(a){c+=String.fromCharCode(a)});return c};
goog.crypt.base64.decodeStringToByteArray=function(a,b){var c=[];goog.crypt.base64.decodeStringInternal_(a,function(a){c.push(a)});return c};
goog.crypt.base64.decodeStringToUint8Array=function(a){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var b=a.length,c=3*b/4;c%3?c=Math.floor(c):goog.crypt.base64.isPadding_(a[b-1])&&(c=goog.crypt.base64.isPadding_(a[b-2])?c-2:c-1);var d=new Uint8Array(c),e=0;goog.crypt.base64.decodeStringInternal_(a,function(a){d[e++]=a});return d.subarray(0,e)};
goog.crypt.base64.decodeStringInternal_=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=goog.crypt.base64.charToByteMap_[c];if(null!=e)return e;if(!goog.string.isEmptyOrWhitespace(c))throw Error("Unknown base64 encoding at char: "+c);}return b}goog.crypt.base64.init_();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}};
goog.crypt.base64.init_=function(){if(!goog.crypt.base64.charToByteMap_){goog.crypt.base64.charToByteMap_={};for(var a=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));goog.crypt.base64.byteToCharMaps_[c]=d;for(var e=0;e<d.length;e++){var f=d[e],g=goog.crypt.base64.charToByteMap_[f];void 0===g?goog.crypt.base64.charToByteMap_[f]=e:goog.asserts.assert(g===e)}}}};jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(a){var b=a>>>0;a=Math.floor((a-b)/jspb.BinaryConstants.TWO_TO_32)>>>0;jspb.utils.split64Low=b;jspb.utils.split64High=a};jspb.utils.splitInt64=function(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/jspb.BinaryConstants.TWO_TO_32);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));jspb.utils.split64Low=c;jspb.utils.split64High=a};
jspb.utils.splitZigzag64=function(a){var b=0>a;a=2*Math.abs(a);jspb.utils.splitUint64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);jspb.utils.split64Low=a;jspb.utils.split64High=c};
jspb.utils.splitFloat32=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)0<1/a?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648);else if(isNaN(a))jspb.utils.split64High=0,jspb.utils.split64Low=2147483647;else if(a>jspb.BinaryConstants.FLOAT32_MAX)jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|2139095040)>>>0;else if(a<jspb.BinaryConstants.FLOAT32_MIN)a=Math.round(a/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|
a)>>>0;else{var c=Math.floor(Math.log(a)/Math.LN2);a*=Math.pow(2,-c);a=Math.round(a*jspb.BinaryConstants.TWO_TO_23)&8388607;jspb.utils.split64High=0;jspb.utils.split64Low=(b<<31|c+127<<23|a)>>>0}};
jspb.utils.splitFloat64=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)jspb.utils.split64High=0<1/a?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(a))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(a>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(b<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(a<jspb.BinaryConstants.FLOAT64_MIN){var c=a/Math.pow(2,-1074);a=c/jspb.BinaryConstants.TWO_TO_32;jspb.utils.split64High=(b<<31|a)>>>0;jspb.utils.split64Low=c>>>0}else{c=
a;var d=0;if(2<=c)for(;2<=c&&1023>d;)d++,c/=2;else for(;1>c&&-1022<d;)c*=2,d--;c=a*Math.pow(2,-d);a=c*jspb.BinaryConstants.TWO_TO_20&1048575;c=c*jspb.BinaryConstants.TWO_TO_52>>>0;jspb.utils.split64High=(b<<31|d+1023<<20|a)>>>0;jspb.utils.split64Low=c}};
jspb.utils.splitHash64=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=a.charCodeAt(4),g=a.charCodeAt(5),h=a.charCodeAt(6);a=a.charCodeAt(7);jspb.utils.split64Low=b+(c<<8)+(d<<16)+(e<<24)>>>0;jspb.utils.split64High=f+(g<<8)+(h<<16)+(a<<24)>>>0};jspb.utils.joinUint64=function(a,b){return b*jspb.BinaryConstants.TWO_TO_32+(a>>>0)};
jspb.utils.joinInt64=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));a=jspb.utils.joinUint64(a,b);return c?-a:a};jspb.utils.toZigzag64=function(a,b,c){var d=b>>31;return c(a<<1^d,(b<<1|a>>>31)^d)};jspb.utils.joinZigzag64=function(a,b){return jspb.utils.fromZigzag64(a,b,jspb.utils.joinInt64)};jspb.utils.fromZigzag64=function(a,b,c){var d=-(a&1);return c((a>>>1|b<<31)^d,b>>>1^d)};
jspb.utils.joinFloat32=function(a,b){b=2*(a>>31)+1;var c=a>>>23&255;a&=8388607;return 255==c?a?NaN:Infinity*b:0==c?b*Math.pow(2,-149)*a:b*Math.pow(2,c-150)*(a+Math.pow(2,23))};jspb.utils.joinFloat64=function(a,b){var c=2*(b>>31)+1,d=b>>>20&2047;a=jspb.BinaryConstants.TWO_TO_32*(b&1048575)+a;return 2047==d?a?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*a:c*Math.pow(2,d-1075)*(a+jspb.BinaryConstants.TWO_TO_52)};
jspb.utils.joinHash64=function(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)};jspb.utils.DIGITS="0123456789abcdef".split("");jspb.utils.ZERO_CHAR_CODE_=48;jspb.utils.A_CHAR_CODE_=97;
jspb.utils.joinUnsignedDecimalString=function(a,b){function c(a,b){a=a?String(a):"";return b?"0000000".slice(a.length)+a:a}if(2097151>=b)return""+(jspb.BinaryConstants.TWO_TO_32*b+a);var d=(a>>>24|b<<8)>>>0&16777215;b=b>>16&65535;a=(a&16777215)+6777216*d+6710656*b;d+=8147497*b;b*=2;1E7<=a&&(d+=Math.floor(a/1E7),a%=1E7);1E7<=d&&(b+=Math.floor(d/1E7),d%=1E7);return c(b,0)+c(d,b)+c(a,1)};
jspb.utils.joinSignedDecimalString=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);a=jspb.utils.joinUnsignedDecimalString(a,b);return c?"-"+a:a};jspb.utils.hash64ToDecimalString=function(a,b){jspb.utils.splitHash64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;return b?jspb.utils.joinSignedDecimalString(a,c):jspb.utils.joinUnsignedDecimalString(a,c)};
jspb.utils.hash64ArrayToDecimalStrings=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=jspb.utils.hash64ToDecimalString(a[d],b);return c};
jspb.utils.decimalStringToHash64=function(a){function b(a,b){for(var c=0;8>c&&(1!==a||0<b);c++)b=a*e[c]+b,e[c]=b&255,b>>>=8}function c(){for(var a=0;8>a;a++)e[a]=~e[a]&255}goog.asserts.assert(0<a.length);var d=!1;"-"===a[0]&&(d=!0,a=a.slice(1));for(var e=[0,0,0,0,0,0,0,0],f=0;f<a.length;f++)b(10,a.charCodeAt(f)-jspb.utils.ZERO_CHAR_CODE_);d&&(c(),b(1,1));return goog.crypt.byteArrayToString(e)};jspb.utils.splitDecimalString=function(a){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a))};
jspb.utils.toHexDigit_=function(a){return String.fromCharCode(10>a?jspb.utils.ZERO_CHAR_CODE_+a:jspb.utils.A_CHAR_CODE_-10+a)};jspb.utils.fromHexCharCode_=function(a){return a>=jspb.utils.A_CHAR_CODE_?a-jspb.utils.A_CHAR_CODE_+10:a-jspb.utils.ZERO_CHAR_CODE_};jspb.utils.hash64ToHexString=function(a){var b=Array(18);b[0]="0";b[1]="x";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=jspb.utils.toHexDigit_(d>>4);b[2*c+3]=jspb.utils.toHexDigit_(d&15)}return b.join("")};
jspb.utils.hexStringToHash64=function(a){a=a.toLowerCase();goog.asserts.assert(18==a.length);goog.asserts.assert("0"==a[0]);goog.asserts.assert("x"==a[1]);for(var b="",c=0;8>c;c++){var d=jspb.utils.fromHexCharCode_(a.charCodeAt(2*c+2)),e=jspb.utils.fromHexCharCode_(a.charCodeAt(2*c+3));b=String.fromCharCode(16*d+e)+b}return b};
jspb.utils.hash64ToNumber=function(a,b){jspb.utils.splitHash64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;return b?jspb.utils.joinInt64(a,c):jspb.utils.joinUint64(a,c)};jspb.utils.numberToHash64=function(a){jspb.utils.splitInt64(a);return jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(a,b,c){for(var d=0,e=b;e<c;e++)d+=a[e]>>7;return c-b-d};
jspb.utils.countVarintFields=function(a,b,c,d){var e=0;d=8*d+jspb.BinaryConstants.WireType.VARINT;if(128>d)for(;b<c&&a[b++]==d;)for(e++;;){var f=a[b++];if(0==(f&128))break}else for(;b<c;){for(f=d;128<f;){if(a[b]!=(f&127|128))return e;b++;f>>=7}if(a[b++]!=f)break;for(e++;f=a[b++],0!=(f&128););}return e};jspb.utils.countFixedFields_=function(a,b,c,d,e){var f=0;if(128>d)for(;b<c&&a[b++]==d;)f++,b+=e;else for(;b<c;){for(var g=d;128<g;){if(a[b++]!=(g&127|128))return f;g>>=7}if(a[b++]!=g)break;f++;b+=e}return f};
jspb.utils.countFixed32Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED64,8)};
jspb.utils.countDelimitedFields=function(a,b,c,d){var e=0;for(d=8*d+jspb.BinaryConstants.WireType.DELIMITED;b<c;){for(var f=d;128<f;){if(a[b++]!=(f&127|128))return e;f>>=7}if(a[b++]!=f)break;e++;for(var g=0,h=1;f=a[b++],g+=(f&127)*h,h*=128,0!=(f&128););b+=g}return e};jspb.utils.debugBytesToTextFormat=function(a){var b='"';if(a){a=jspb.utils.byteSourceToUint8Array(a);for(var c=0;c<a.length;c++)b+="\\x",16>a[c]&&(b+="0"),b+=a[c].toString(16)}return b+'"'};
jspb.utils.debugScalarToTextFormat=function(a){return"string"===typeof a?goog.string.quote(a):a.toString()};jspb.utils.stringToByteArray=function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error("Conversion error: string contains codepoint outside of byte range");b[c]=d}return b};
jspb.utils.byteSourceToUint8Array=function(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer||"undefined"!=typeof Buffer&&a.constructor===Buffer||a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Type not convertible to Uint8Array.");return new Uint8Array(0)};jspb.BinaryDecoder=function(a,b,c){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1;a&&this.setBlock(a,b,c)};jspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(a,b,c){if(jspb.BinaryDecoder.instanceCache_.length){var d=jspb.BinaryDecoder.instanceCache_.pop();a&&d.setBlock(a,b,c);return d}return new jspb.BinaryDecoder(a,b,c)};jspb.BinaryDecoder.prototype.free=function(){this.clear();100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)};
jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};
jspb.BinaryDecoder.prototype.setBlock=function(a,b,c){this.bytes_=jspb.utils.byteSourceToUint8Array(a);this.start_=void 0!==b?b:0;this.end_=void 0!==c?this.start_+c:this.bytes_.length;this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};jspb.BinaryDecoder.prototype.setEnd=function(a){this.end_=a};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};
jspb.BinaryDecoder.prototype.setCursor=function(a){this.cursor_=a};jspb.BinaryDecoder.prototype.advance=function(a){this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_)};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};
jspb.BinaryDecoder.prototype.readSplitVarint64=function(a){for(var b=128,c=0,d=0,e=0;4>e&&128<=b;e++)b=this.bytes_[this.cursor_++],c|=(b&127)<<7*e;128<=b&&(b=this.bytes_[this.cursor_++],c|=(b&127)<<28,d|=(b&127)>>4);if(128<=b)for(e=0;5>e&&128<=b;e++)b=this.bytes_[this.cursor_++],d|=(b&127)<<7*e+3;if(128>b)return a(c>>>0,d>>>0);goog.asserts.fail("Failed to read varint, encoding is invalid.");this.error_=!0};
jspb.BinaryDecoder.prototype.readSplitZigzagVarint64=function(a){return this.readSplitVarint64(function(b,c){return jspb.utils.fromZigzag64(b,c,a)})};jspb.BinaryDecoder.prototype.readSplitFixed64=function(a){var b=this.bytes_,c=this.cursor_;this.cursor_+=8;for(var d=0,e=0,f=c+7;f>=c;f--)d=d<<8|b[f],e=e<<8|b[f+4];return a(d,e)};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++};
jspb.BinaryDecoder.prototype.unskipVarint=function(a){for(;128<a;)this.cursor_--,a>>>=7;this.cursor_--};
jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var a=this.bytes_;var b=a[this.cursor_+0];var c=b&127;if(128>b)return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+1];c|=(b&127)<<7;if(128>b)return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+2];c|=(b&127)<<14;if(128>b)return this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+3];c|=(b&127)<<21;if(128>b)return this.cursor_+=4,goog.asserts.assert(this.cursor_<=
this.end_),c;b=a[this.cursor_+4];c|=(b&15)<<28;if(128>b)return this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),c>>>0;this.cursor_+=5;128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&goog.asserts.assert(!1);goog.asserts.assert(this.cursor_<=this.end_);return c};jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};
jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var a=this.readUnsignedVarint32();return a>>>1^-(a&1)};jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinUint64)};jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString)};
jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinInt64)};jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64(jspb.utils.joinZigzag64)};jspb.BinaryDecoder.prototype.readZigzagVarintHash64=function(){return this.readSplitZigzagVarint64(jspb.utils.joinHash64)};
jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readUint8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a};jspb.BinaryDecoder.prototype.readUint16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8};
jspb.BinaryDecoder.prototype.readUint32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8|c<<16|d<<24)>>>0};jspb.BinaryDecoder.prototype.readUint64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUint64(a,b)};
jspb.BinaryDecoder.prototype.readUint64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUnsignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readInt8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a<<24>>24};
jspb.BinaryDecoder.prototype.readInt16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8)<<16>>16};jspb.BinaryDecoder.prototype.readInt32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8|c<<16|d<<24};
jspb.BinaryDecoder.prototype.readInt64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinInt64(a,b)};jspb.BinaryDecoder.prototype.readInt64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinSignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readFloat=function(){var a=this.readUint32();return jspb.utils.joinFloat32(a,0)};
jspb.BinaryDecoder.prototype.readDouble=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinFloat64(a,b)};jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};
jspb.BinaryDecoder.prototype.readString=function(a){var b=this.bytes_,c=this.cursor_;a=c+a;for(var d=[],e="";c<a;){var f=b[c++];if(128>f)d.push(f);else if(192>f)continue;else if(224>f){var g=b[c++];d.push((f&31)<<6|g&63)}else if(240>f){g=b[c++];var h=b[c++];d.push((f&15)<<12|(g&63)<<6|h&63)}else if(248>f){g=b[c++];h=b[c++];var k=b[c++];f=(f&7)<<18|(g&63)<<12|(h&63)<<6|k&63;f-=65536;d.push((f>>10&1023)+55296,(f&1023)+56320)}8192<=d.length&&(e+=String.fromCharCode.apply(null,d),d.length=0)}e+=goog.crypt.byteArrayToString(d);
this.cursor_=c;return e};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var a=this.readUnsignedVarint32();return this.readString(a)};jspb.BinaryDecoder.prototype.readBytes=function(a){if(0>a||this.cursor_+a>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var b=this.bytes_.subarray(this.cursor_,this.cursor_+a);this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);return b};jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64(jspb.utils.joinHash64)};
jspb.BinaryDecoder.prototype.readFixedHash64=function(){var a=this.bytes_,b=this.cursor_,c=a[b+0],d=a[b+1],e=a[b+2],f=a[b+3],g=a[b+4],h=a[b+5],k=a[b+6];a=a[b+7];this.cursor_+=8;return String.fromCharCode(c,d,e,f,g,h,k,a)};jspb.BinaryReader=function(a,b,c){this.decoder_=jspb.BinaryDecoder.alloc(a,b,c);this.fieldCursor_=this.decoder_.getCursor();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null};jspb.BinaryReader.instanceCache_=[];
jspb.BinaryReader.alloc=function(a,b,c){if(jspb.BinaryReader.instanceCache_.length){var d=jspb.BinaryReader.instanceCache_.pop();a&&d.decoder_.setBlock(a,b,c);return d}return new jspb.BinaryReader(a,b,c)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;
jspb.BinaryReader.prototype.free=function(){this.decoder_.clear();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};
jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};
jspb.BinaryReader.prototype.setBlock=function(a,b,c){this.decoder_.setBlock(a,b,c);this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.advance=function(a){this.decoder_.advance(a)};
jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var a=this.decoder_.readUnsignedVarint32(),b=a>>>3;a&=7;if(a!=jspb.BinaryConstants.WireType.VARINT&&a!=jspb.BinaryConstants.WireType.FIXED32&&a!=jspb.BinaryConstants.WireType.FIXED64&&a!=jspb.BinaryConstants.WireType.DELIMITED&&a!=jspb.BinaryConstants.WireType.START_GROUP&&a!=jspb.BinaryConstants.WireType.END_GROUP)return goog.asserts.fail("Invalid wire type: %s (at position %s)",
a,this.fieldCursor_),this.error_=!0,!1;this.nextField_=b;this.nextWireType_=a;return!0};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)};jspb.BinaryReader.prototype.skipMatchingFields=function(){var a=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==a;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()};
jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint()};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else{var a=this.decoder_.readUnsignedVarint32();this.decoder_.advance(a)}};
jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4)};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8)};
jspb.BinaryReader.prototype.skipGroup=function(){var a=this.nextField_;do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF");this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP){this.nextField_!=a&&(goog.asserts.fail("Unmatched end-group tag"),this.error_=!0);break}this.skipField()}while(1)};
jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.")}};
jspb.BinaryReader.prototype.registerReadCallback=function(a,b){null===this.readCallbacks_&&(this.readCallbacks_={});goog.asserts.assert(!this.readCallbacks_[a]);this.readCallbacks_[a]=b};jspb.BinaryReader.prototype.runReadCallback=function(a){goog.asserts.assert(null!==this.readCallbacks_);a=this.readCallbacks_[a];goog.asserts.assert(a);return a(this)};
jspb.BinaryReader.prototype.readAny=function(a){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(a);var b=jspb.BinaryConstants.FieldType;switch(a){case b.DOUBLE:return this.readDouble();case b.FLOAT:return this.readFloat();case b.INT64:return this.readInt64();case b.UINT64:return this.readUint64();case b.INT32:return this.readInt32();case b.FIXED64:return this.readFixed64();case b.FIXED32:return this.readFixed32();case b.BOOL:return this.readBool();case b.STRING:return this.readString();
case b.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case b.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case b.BYTES:return this.readBytes();case b.UINT32:return this.readUint32();case b.ENUM:return this.readEnum();case b.SFIXED32:return this.readSfixed32();case b.SFIXED64:return this.readSfixed64();case b.SINT32:return this.readSint32();case b.SINT64:return this.readSint64();case b.FHASH64:return this.readFixedHash64();case b.VHASH64:return this.readVarintHash64();
default:goog.asserts.fail("Invalid field type in readAny()")}return 0};jspb.BinaryReader.prototype.readMessage=function(a,b){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var c=this.decoder_.getEnd(),d=this.decoder_.readUnsignedVarint32();d=this.decoder_.getCursor()+d;this.decoder_.setEnd(d);b(a,this);this.decoder_.setCursor(d);this.decoder_.setEnd(c)};
jspb.BinaryReader.prototype.readGroup=function(a,b,c){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP);goog.asserts.assert(this.nextField_==a);c(b,this);this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0)};
jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor(),c=b+a;a=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),b,a);this.decoder_.setCursor(c);return a};jspb.BinaryReader.prototype.readInt32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32()};
jspb.BinaryReader.prototype.readInt32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64String()};
jspb.BinaryReader.prototype.readUint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64()};
jspb.BinaryReader.prototype.readUint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64()};
jspb.BinaryReader.prototype.readSint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64String()};jspb.BinaryReader.prototype.readFixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64()};
jspb.BinaryReader.prototype.readFixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64String()};jspb.BinaryReader.prototype.readSfixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32()};jspb.BinaryReader.prototype.readSfixed32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32().toString()};
jspb.BinaryReader.prototype.readSfixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64()};jspb.BinaryReader.prototype.readSfixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64String()};jspb.BinaryReader.prototype.readFloat=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readFloat()};
jspb.BinaryReader.prototype.readDouble=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readDouble()};jspb.BinaryReader.prototype.readBool=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return!!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};
jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(a)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(a)};
jspb.BinaryReader.prototype.readVarintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readSintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarintHash64()};jspb.BinaryReader.prototype.readSplitVarint64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSplitVarint64(a)};
jspb.BinaryReader.prototype.readSplitZigzagVarint64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSplitVarint64(function(b,c){return jspb.utils.fromZigzag64(b,c,a)})};jspb.BinaryReader.prototype.readFixedHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readFixedHash64()};
jspb.BinaryReader.prototype.readSplitFixed64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readSplitFixed64(a)};jspb.BinaryReader.prototype.readPackedField_=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var b=this.decoder_.readUnsignedVarint32();b=this.decoder_.getCursor()+b;for(var c=[];this.decoder_.getCursor()<b;)c.push(a.call(this.decoder_));return c};
jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};
jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};
jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)};jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};
jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)};jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};
jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};
jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.Map=function(a,b){this.arr_=a;this.valueCtor_=b;this.map_={};this.arrClean=!0;0<this.arr_.length&&this.loadFromArray_()};jspb.Map.prototype.loadFromArray_=function(){for(var a=0;a<this.arr_.length;a++){var b=this.arr_[a],c=b[0];this.map_[c.toString()]=new jspb.Map.Entry_(c,b[1])}this.arrClean=!0};
jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var a=this.map_,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].valueWrapper;c&&c.toArray()}}}else{this.arr_.length=0;a=this.stringKeys_();a.sort();for(b=0;b<a.length;b++){var d=this.map_[a[b]];(c=d.valueWrapper)&&c.toArray();this.arr_.push([d.key,d.value])}this.arrClean=!0}return this.arr_};
jspb.Map.prototype.toObject=function(a,b){for(var c=this.toArray(),d=[],e=0;e<c.length;e++){var f=this.map_[c[e][0].toString()];this.wrapEntry_(f);var g=f.valueWrapper;g?(goog.asserts.assert(b),d.push([f.key,b(a,g)])):d.push([f.key,f.value])}return d};jspb.Map.fromObject=function(a,b,c){b=new jspb.Map([],b);for(var d=0;d<a.length;d++){var e=a[d][0],f=c(a[d][1]);b.set(e,f)}return b};jspb.Map.ArrayIteratorIterable_=function(a){this.idx_=0;this.arr_=a};
jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}};"undefined"!=typeof Symbol&&(jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this});jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={};this.arrClean=!1};
jspb.Map.prototype.del=function(a){a=a.toString();var b=this.map_.hasOwnProperty(a);delete this.map_[a];this.arrClean=!1;return b};jspb.Map.prototype.getEntryList=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,d.value])}return a};jspb.Map.prototype.entries=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,this.wrapEntry_(d)])}return new jspb.Map.ArrayIteratorIterable_(a)};
jspb.Map.prototype.keys=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.map_[b[c]].key);return new jspb.Map.ArrayIteratorIterable_(a)};jspb.Map.prototype.values=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.wrapEntry_(this.map_[b[c]]));return new jspb.Map.ArrayIteratorIterable_(a)};
jspb.Map.prototype.forEach=function(a,b){var c=this.stringKeys_();c.sort();for(var d=0;d<c.length;d++){var e=this.map_[c[d]];a.call(b,this.wrapEntry_(e),e.key,this)}};jspb.Map.prototype.set=function(a,b){var c=new jspb.Map.Entry_(a);this.valueCtor_?(c.valueWrapper=b,c.value=b.toArray()):c.value=b;this.map_[a.toString()]=c;this.arrClean=!1;return this};jspb.Map.prototype.wrapEntry_=function(a){return this.valueCtor_?(a.valueWrapper||(a.valueWrapper=new this.valueCtor_(a.value)),a.valueWrapper):a.value};
jspb.Map.prototype.get=function(a){if(a=this.map_[a.toString()])return this.wrapEntry_(a)};jspb.Map.prototype.has=function(a){return a.toString()in this.map_};jspb.Map.prototype.serializeBinary=function(a,b,c,d,e){var f=this.stringKeys_();f.sort();for(var g=0;g<f.length;g++){var h=this.map_[f[g]];b.beginSubMessage(a);c.call(b,1,h.key);this.valueCtor_?d.call(b,2,this.wrapEntry_(h),e):d.call(b,2,h.value);b.endSubMessage()}};
jspb.Map.deserializeBinary=function(a,b,c,d,e,f,g){for(;b.nextField()&&!b.isEndGroup();){var h=b.getFieldNumber();1==h?f=c.call(b):2==h&&(a.valueCtor_?(goog.asserts.assert(e),g||(g=new a.valueCtor_),d.call(b,g,e)):g=d.call(b))}goog.asserts.assert(void 0!=f);goog.asserts.assert(void 0!=g);a.set(f,g)};jspb.Map.prototype.stringKeys_=function(){var a=this.map_,b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b};
jspb.Map.Entry_=function(a,b){this.key=a;this.value=b;this.valueWrapper=void 0};jspb.ExtensionFieldInfo=function(a,b,c,d,e){this.fieldIndex=a;this.fieldName=b;this.ctor=c;this.toObjectFn=d;this.isRepeated=e};jspb.ExtensionFieldBinaryInfo=function(a,b,c,d,e,f){this.fieldInfo=a;this.binaryReaderFn=b;this.binaryWriterFn=c;this.binaryMessageSerializeFn=d;this.binaryMessageDeserializeFn=e;this.isPacked=f};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;
jspb.Message.GENERATE_TO_STRING=!0;jspb.Message.ASSUME_LOCAL_ARRAYS=!1;jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0;jspb.Message.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array;jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(a,b){return b+a.arrayIndexOffset_};jspb.Message.hiddenES6Property_=function(){};jspb.Message.getFieldNumber_=function(a,b){return b-a.arrayIndexOffset_};
jspb.Message.initialize=function(a,b,c,d,e,f){a.wrappers_=null;b||(b=c?[c]:[]);a.messageId_=c?String(c):void 0;a.arrayIndexOffset_=0===c?-1:0;a.array=b;jspb.Message.initPivotAndExtensionObject_(a,d);a.convertedPrimitiveFields_={};jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(a.repeatedFields=e);if(e)for(b=0;b<e.length;b++)c=e[b],c<a.pivot_?(c=jspb.Message.getIndex_(a,c),a.array[c]=a.array[c]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[c]=
a.extensionObject_[c]||jspb.Message.EMPTY_LIST_SENTINEL_);if(f&&f.length)for(b=0;b<f.length;b++)jspb.Message.computeOneofCase(a,f[b])};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];jspb.Message.isArray_=function(a){return jspb.Message.ASSUME_LOCAL_ARRAYS?a instanceof Array:goog.isArray(a)};jspb.Message.isExtensionObject_=function(a){return null!==a&&"object"==typeof a&&!jspb.Message.isArray_(a)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)};
jspb.Message.initPivotAndExtensionObject_=function(a,b){var c=a.array.length,d=-1;if(c&&(d=c-1,c=a.array[d],jspb.Message.isExtensionObject_(c))){a.pivot_=jspb.Message.getFieldNumber_(a,d);a.extensionObject_=c;return}-1<b?(a.pivot_=Math.max(b,jspb.Message.getFieldNumber_(a,d+1)),a.extensionObject_=null):a.pivot_=Number.MAX_VALUE};jspb.Message.maybeInitEmptyExtensionObject_=function(a){var b=jspb.Message.getIndex_(a,a.pivot_);a.array[b]||(a.extensionObject_=a.array[b]={})};
jspb.Message.toObjectList=function(a,b,c){for(var d=[],e=0;e<a.length;e++)d[e]=b.call(a[e],c,a[e]);return d};jspb.Message.toObjectExtension=function(a,b,c,d,e){for(var f in c){var g=c[f],h=d.call(a,g);if(null!=h){for(var k in g.fieldName)if(g.fieldName.hasOwnProperty(k))break;b[k]=g.toObjectFn?g.isRepeated?jspb.Message.toObjectList(h,g.toObjectFn,e):g.toObjectFn(e,h):h}}};
jspb.Message.serializeBinaryExtensions=function(a,b,c,d){for(var e in c){var f=c[e],g=f.fieldInfo;if(!f.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var h=d.call(a,g);if(null!=h)if(g.isMessageType())if(f.binaryMessageSerializeFn)f.binaryWriterFn.call(b,g.fieldIndex,h,f.binaryMessageSerializeFn);else throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
else f.binaryWriterFn.call(b,g.fieldIndex,h)}};jspb.Message.readBinaryExtension=function(a,b,c,d,e){var f=c[b.getFieldNumber()];if(f){c=f.fieldInfo;if(!f.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");if(c.isMessageType()){var g=new c.ctor;f.binaryReaderFn.call(b,g,f.binaryMessageDeserializeFn)}else g=f.binaryReaderFn.call(b);c.isRepeated&&!f.isPacked?(b=d.call(a,c))?b.push(g):e.call(a,c,[g]):e.call(a,c,g)}else b.skipField()};
jspb.Message.getField=function(a,b){if(b<a.pivot_){b=jspb.Message.getIndex_(a,b);var c=a.array[b];return c===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[b]=[]:c}if(a.extensionObject_)return c=a.extensionObject_[b],c===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:c};jspb.Message.getRepeatedField=function(a,b){return jspb.Message.getField(a,b)};jspb.Message.getOptionalFloatingPointField=function(a,b){a=jspb.Message.getField(a,b);return null==a?a:+a};
jspb.Message.getBooleanField=function(a,b){a=jspb.Message.getField(a,b);return null==a?a:!!a};jspb.Message.getRepeatedFloatingPointField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedPrimitiveFields_||(a.convertedPrimitiveFields_={});if(!a.convertedPrimitiveFields_[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.convertedPrimitiveFields_[b]=!0}return c};
jspb.Message.getRepeatedBooleanField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedPrimitiveFields_||(a.convertedPrimitiveFields_={});if(!a.convertedPrimitiveFields_[b]){for(var d=0;d<c.length;d++)c[d]=!!c[d];a.convertedPrimitiveFields_[b]=!0}return c};
jspb.Message.bytesAsB64=function(a){if(null==a||"string"===typeof a)return a;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return goog.crypt.base64.encodeByteArray(a);goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(a));return null};jspb.Message.bytesAsU8=function(a){if(null==a||a instanceof Uint8Array)return a;if("string"===typeof a)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(a));return null};
jspb.Message.bytesListAsB64=function(a){jspb.Message.assertConsistentTypes_(a);return a.length&&"string"!==typeof a[0]?goog.array.map(a,jspb.Message.bytesAsB64):a};jspb.Message.bytesListAsU8=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||a[0]instanceof Uint8Array?a:goog.array.map(a,jspb.Message.bytesAsU8)};
jspb.Message.assertConsistentTypes_=function(a){if(goog.DEBUG&&a&&1<a.length){var b=goog.typeOf(a[0]);goog.array.forEach(a,function(a){goog.typeOf(a)!=b&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(a)+" expected "+b)})}};jspb.Message.getFieldWithDefault=function(a,b,c){a=jspb.Message.getField(a,b);return null==a?c:a};jspb.Message.getBooleanFieldWithDefault=function(a,b,c){a=jspb.Message.getBooleanField(a,b);return null==a?c:a};
jspb.Message.getFloatingPointFieldWithDefault=function(a,b,c){a=jspb.Message.getOptionalFloatingPointField(a,b);return null==a?c:a};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;jspb.Message.getMapField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(b in a.wrappers_)return a.wrappers_[b];var e=jspb.Message.getField(a,b);if(!e){if(c)return;e=[];jspb.Message.setField(a,b,e)}return a.wrappers_[b]=new jspb.Map(e,d)};
jspb.Message.setField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=c:(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[b]=c);return a};jspb.Message.setProto3IntField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setProto3FloatField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};
jspb.Message.setProto3BooleanField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,!1)};jspb.Message.setProto3StringField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"")};jspb.Message.setProto3BytesField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"")};jspb.Message.setProto3EnumField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};
jspb.Message.setProto3StringIntField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"0")};jspb.Message.setFieldIgnoringDefault_=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);c!==d?jspb.Message.setField(a,b,c):a.array[jspb.Message.getIndex_(a,b)]=null;return a};jspb.Message.addToRepeatedField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);b=jspb.Message.getRepeatedField(a,b);void 0!=d?b.splice(d,0,c):b.push(c);return a};
jspb.Message.setOneofField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);(c=jspb.Message.computeOneofCase(a,c))&&c!==b&&void 0!==d&&(a.wrappers_&&c in a.wrappers_&&(a.wrappers_[c]=void 0),jspb.Message.setField(a,c,void 0));return jspb.Message.setField(a,b,d)};jspb.Message.computeOneofCase=function(a,b){for(var c,d,e=0;e<b.length;e++){var f=b[e],g=jspb.Message.getField(a,f);null!=g&&(c=f,d=g,jspb.Message.setField(a,f,void 0))}return c?(jspb.Message.setField(a,c,d),c):0};
jspb.Message.getWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){var e=jspb.Message.getField(a,c);if(d||e)a.wrappers_[c]=new b(e)}return a.wrappers_[c]};jspb.Message.getRepeatedWrapperField=function(a,b,c){jspb.Message.wrapRepeatedField_(a,b,c);b=a.wrappers_[c];b==jspb.Message.EMPTY_LIST_SENTINEL_&&(b=a.wrappers_[c]=[]);return b};
jspb.Message.wrapRepeatedField_=function(a,b,c){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){for(var d=jspb.Message.getRepeatedField(a,c),e=[],f=0;f<d.length;f++)e[f]=new b(d[f]);a.wrappers_[c]=e}};jspb.Message.setWrapperField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});var d=c?c.toArray():c;a.wrappers_[b]=c;return jspb.Message.setField(a,b,d)};
jspb.Message.setOneofWrapperField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});var e=d?d.toArray():d;a.wrappers_[b]=d;return jspb.Message.setOneofField(a,b,c,e)};jspb.Message.setRepeatedWrapperField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});c=c||[];for(var d=[],e=0;e<c.length;e++)d[e]=c[e].toArray();a.wrappers_[b]=c;return jspb.Message.setField(a,b,d)};
jspb.Message.addToRepeatedWrapperField=function(a,b,c,d,e){jspb.Message.wrapRepeatedField_(a,d,b);var f=a.wrappers_[b];f||(f=a.wrappers_[b]=[]);c=c?c:new d;a=jspb.Message.getRepeatedField(a,b);void 0!=e?(f.splice(e,0,c),a.splice(e,0,c.toArray())):(f.push(c),a.push(c.toArray()));return c};jspb.Message.toMap=function(a,b,c,d){for(var e={},f=0;f<a.length;f++)e[b.call(a[f])]=c?c.call(a[f],d,a[f]):a[f];return e};
jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var a in this.wrappers_){var b=this.wrappers_[a];if(goog.isArray(b))for(var c=0;c<b.length;c++)b[c]&&b[c].toArray();else b&&b.toArray()}};jspb.Message.prototype.toArray=function(){this.syncMapFields_();return this.array};jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){this.syncMapFields_();return this.array.toString()});
jspb.Message.prototype.getExtension=function(a){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var b=a.fieldIndex;if(a.isRepeated){if(a.isMessageType())return this.wrappers_[b]||(this.wrappers_[b]=goog.array.map(this.extensionObject_[b]||[],function(b){return new a.ctor(b)})),this.wrappers_[b]}else if(a.isMessageType())return!this.wrappers_[b]&&this.extensionObject_[b]&&(this.wrappers_[b]=new a.ctor(this.extensionObject_[b])),this.wrappers_[b];return this.extensionObject_[b]}};
jspb.Message.prototype.setExtension=function(a,b){this.wrappers_||(this.wrappers_={});jspb.Message.maybeInitEmptyExtensionObject_(this);var c=a.fieldIndex;a.isRepeated?(b=b||[],a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=goog.array.map(b,function(a){return a.toArray()})):this.extensionObject_[c]=b):a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=b?b.toArray():b):this.extensionObject_[c]=b;return this};
jspb.Message.difference=function(a,b){if(!(a instanceof b.constructor))throw Error("Messages have different types.");var c=a.toArray();b=b.toArray();var d=[],e=0,f=c.length>b.length?c.length:b.length;a.getJsPbMessageId()&&(d[0]=a.getJsPbMessageId(),e=1);for(;e<f;e++)jspb.Message.compareFields(c[e],b[e])||(d[e]=b[e]);return new a.constructor(d)};jspb.Message.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&jspb.Message.compareFields(a.toArray(),b.toArray())};
jspb.Message.compareExtensions=function(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!jspb.Message.compareFields(a[d],b[d]))return!1;return!0};
jspb.Message.compareFields=function(a,b){if(a==b)return!0;if(!goog.isObject(a)||!goog.isObject(b))return"number"===typeof a&&isNaN(a)||"number"===typeof b&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){var d=void 0,e=void 0,f=Math.max(a.length,b.length);for(c=0;c<f;c++){var g=a[c],h=b[c];g&&
g.constructor==Object&&(goog.asserts.assert(void 0===d),goog.asserts.assert(c===a.length-1),d=g,g=void 0);h&&h.constructor==Object&&(goog.asserts.assert(void 0===e),goog.asserts.assert(c===b.length-1),e=h,h=void 0);if(!jspb.Message.compareFields(g,h))return!1}return d||e?(d=d||{},e=e||{},jspb.Message.compareExtensions(d,e)):!0}if(a.constructor===Object)return jspb.Message.compareExtensions(a,b);throw Error("Invalid type in JSPB array");};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};
jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};jspb.Message.clone=function(a){return jspb.Message.cloneMessage(a)};jspb.Message.cloneMessage=function(a){return new a.constructor(jspb.Message.clone_(a.toArray()))};
jspb.Message.copyInto=function(a,b){goog.asserts.assertInstanceof(a,jspb.Message);goog.asserts.assertInstanceof(b,jspb.Message);goog.asserts.assert(a.constructor==b.constructor,"Copy source and target message should have the same type.");a=jspb.Message.clone(a);for(var c=b.toArray(),d=a.toArray(),e=c.length=0;e<d.length;e++)c[e]=d[e];b.wrappers_=a.wrappers_;b.extensionObject_=a.extensionObject_};
jspb.Message.clone_=function(a){if(goog.isArray(a)){for(var b=Array(a.length),c=0;c<a.length;c++){var d=a[c];null!=d&&(b[c]="object"==typeof d?jspb.Message.clone_(goog.asserts.assert(d)):d)}return b}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return new Uint8Array(a);b={};for(c in a)d=a[c],null!=d&&(b[c]="object"==typeof d?jspb.Message.clone_(goog.asserts.assert(d)):d);return b};jspb.Message.registerMessageType=function(a,b){b.messageId=a};jspb.Message.messageSetExtensions={};
jspb.Message.messageSetExtensionsBinary={};jspb.arith={};jspb.arith.UInt64=function(a,b){this.lo=a;this.hi=b};jspb.arith.UInt64.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};
jspb.arith.UInt64.prototype.msb=function(){return!!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return!!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi};jspb.arith.UInt64.prototype.add=function(a){return new jspb.arith.UInt64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};
jspb.arith.UInt64.prototype.sub=function(a){return new jspb.arith.UInt64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(a,b){var c=a&65535;a>>>=16;var d=b&65535,e=b>>>16;b=c*d+65536*(c*e&65535)+65536*(a*d&65535);for(c=a*e+(c*e>>>16)+(a*d>>>16);4294967296<=b;)b-=4294967296,c+=1;return new jspb.arith.UInt64(b>>>0,c>>>0)};
jspb.arith.UInt64.prototype.mul=function(a){var b=jspb.arith.UInt64.mul32x32(this.lo,a);a=jspb.arith.UInt64.mul32x32(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};
jspb.arith.UInt64.prototype.div=function(a){if(0==a)return[];var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(this.lo,this.hi);a=new jspb.arith.UInt64(a,0);for(var d=new jspb.arith.UInt64(1,0);!a.msb();)a=a.leftShift(),d=d.leftShift();for(;!d.zero();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.rightShift(),d=d.rightShift();return[b,c]};jspb.arith.UInt64.prototype.toString=function(){for(var a="",b=this;!b.zero();){b=b.div(10);var c=b[0];a=b[1].lo+a;b=c}""==a&&(a="0");return a};
jspb.arith.UInt64.fromString=function(a){for(var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(0,0),d=0;d<a.length;d++){if("0">a[d]||"9"<a[d])return null;var e=parseInt(a[d],10);c.lo=e;b=b.mul(10).add(c)}return b};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(a,b){this.lo=a;this.hi=b};
jspb.arith.Int64.prototype.add=function(a){return new jspb.arith.Int64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(a){return new jspb.arith.Int64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};
jspb.arith.Int64.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new jspb.arith.UInt64(this.lo,this.hi);a&&(b=(new jspb.arith.UInt64(0,0)).sub(b));return(a?"-":"")+b.toString()};jspb.arith.Int64.fromString=function(a){var b=0<a.length&&"-"==a[0];b&&(a=a.substring(1));a=jspb.arith.UInt64.fromString(a);if(null===a)return null;b&&(a=(new jspb.arith.UInt64(0,0)).sub(a));return new jspb.arith.Int64(a.lo,a.hi)};jspb.BinaryEncoder=function(){this.buffer_=[]};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var a=this.buffer_;this.buffer_=[];return a};
jspb.BinaryEncoder.prototype.writeSplitVarint64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);for(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);0<b||127<a;)this.buffer_.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.buffer_.push(a)};
jspb.BinaryEncoder.prototype.writeSplitFixed64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);this.writeUint32(a);this.writeUint32(b)};
jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));for(goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);127<a;)this.buffer_.push(a&127|128),a>>>=7;this.buffer_.push(a)};
jspb.BinaryEncoder.prototype.writeSignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);if(0<=a)this.writeUnsignedVarint32(a);else{for(var b=0;9>b;b++)this.buffer_.push(a&127|128),a>>=7;this.buffer_.push(1)}};
jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeSignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeUnsignedVarint32((a<<1^a>>31)>>>0)};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitZigzag64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(a){this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(a))};jspb.BinaryEncoder.prototype.writeZigzagVarintHash64=function(a){var b=this;jspb.utils.splitHash64(a);jspb.utils.toZigzag64(jspb.utils.split64Low,jspb.utils.split64High,function(a,d){b.writeSplitVarint64(a>>>0,d>>>0)})};
jspb.BinaryEncoder.prototype.writeUint8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&256>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeUint16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&65536>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};
jspb.BinaryEncoder.prototype.writeUint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};jspb.BinaryEncoder.prototype.writeUint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitUint64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeInt8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-128<=a&&128>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeInt16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-32768<=a&&32768>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};
jspb.BinaryEncoder.prototype.writeInt32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};
jspb.BinaryEncoder.prototype.writeInt64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeInt64String=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(+a>=-jspb.BinaryConstants.TWO_TO_63&&+a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeFloat=function(a){goog.asserts.assert(Infinity===a||-Infinity===a||isNaN(a)||a>=-jspb.BinaryConstants.FLOAT32_MAX&&a<=jspb.BinaryConstants.FLOAT32_MAX);jspb.utils.splitFloat32(a);this.writeUint32(jspb.utils.split64Low)};
jspb.BinaryEncoder.prototype.writeDouble=function(a){goog.asserts.assert(Infinity===a||-Infinity===a||isNaN(a)||a>=-jspb.BinaryConstants.FLOAT64_MAX&&a<=jspb.BinaryConstants.FLOAT64_MAX);jspb.utils.splitFloat64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeBool=function(a){goog.asserts.assert("boolean"===typeof a||"number"===typeof a);this.buffer_.push(a?1:0)};
jspb.BinaryEncoder.prototype.writeEnum=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32(a)};jspb.BinaryEncoder.prototype.writeBytes=function(a){this.buffer_.push.apply(this.buffer_,a)};jspb.BinaryEncoder.prototype.writeVarintHash64=function(a){jspb.utils.splitHash64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeFixedHash64=function(a){jspb.utils.splitHash64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};
jspb.BinaryEncoder.prototype.writeString=function(a){for(var b=this.buffer_.length,c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.buffer_.push(d);else if(2048>d)this.buffer_.push(d>>6|192),this.buffer_.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var e=a.charCodeAt(c+1);56320<=e&&57343>=e&&(d=1024*(d-55296)+e-56320+65536,this.buffer_.push(d>>18|240),this.buffer_.push(d>>12&63|128),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128),c++)}else this.buffer_.push(d>>
12|224),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128)}return this.buffer_.length-b};jspb.BinaryWriter=function(){this.blocks_=[];this.totalLength_=0;this.encoder_=new jspb.BinaryEncoder;this.bookmarks_=[]};jspb.BinaryWriter.prototype.appendUint8Array_=function(a){var b=this.encoder_.end();this.blocks_.push(b);this.blocks_.push(a);this.totalLength_+=b.length+a.length};
jspb.BinaryWriter.prototype.beginDelimited_=function(a){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);a=this.encoder_.end();this.blocks_.push(a);this.totalLength_+=a.length;a.push(this.totalLength_);return a};jspb.BinaryWriter.prototype.endDelimited_=function(a){var b=a.pop();b=this.totalLength_+this.encoder_.length()-b;for(goog.asserts.assert(0<=b);127<b;)a.push(b&127|128),b>>>=7,this.totalLength_++;a.push(b);this.totalLength_++};
jspb.BinaryWriter.prototype.writeSerializedMessage=function(a,b,c){this.appendUint8Array_(a.subarray(b,c))};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(a,b,c){null!=a&&null!=b&&null!=c&&this.writeSerializedMessage(a,b,c)};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[];this.encoder_.end();this.totalLength_=0;this.bookmarks_=[]};
jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var a=new Uint8Array(this.totalLength_+this.encoder_.length()),b=this.blocks_,c=b.length,d=0,e=0;e<c;e++){var f=b[e];a.set(f,d);d+=f.length}b=this.encoder_.end();a.set(b,d);d+=b.length;goog.asserts.assert(d==a.length);this.blocks_=[a];return a};jspb.BinaryWriter.prototype.getResultBase64String=function(a){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),a)};
jspb.BinaryWriter.prototype.beginSubMessage=function(a){this.bookmarks_.push(this.beginDelimited_(a))};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length);this.endDelimited_(this.bookmarks_.pop())};jspb.BinaryWriter.prototype.writeFieldHeader_=function(a,b){goog.asserts.assert(1<=a&&a==Math.floor(a));this.encoder_.writeUnsignedVarint32(8*a+b)};
jspb.BinaryWriter.prototype.writeAny=function(a,b,c){var d=jspb.BinaryConstants.FieldType;switch(a){case d.DOUBLE:this.writeDouble(b,c);break;case d.FLOAT:this.writeFloat(b,c);break;case d.INT64:this.writeInt64(b,c);break;case d.UINT64:this.writeUint64(b,c);break;case d.INT32:this.writeInt32(b,c);break;case d.FIXED64:this.writeFixed64(b,c);break;case d.FIXED32:this.writeFixed32(b,c);break;case d.BOOL:this.writeBool(b,c);break;case d.STRING:this.writeString(b,c);break;case d.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");
break;case d.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case d.BYTES:this.writeBytes(b,c);break;case d.UINT32:this.writeUint32(b,c);break;case d.ENUM:this.writeEnum(b,c);break;case d.SFIXED32:this.writeSfixed32(b,c);break;case d.SFIXED64:this.writeSfixed64(b,c);break;case d.SINT32:this.writeSint32(b,c);break;case d.SINT64:this.writeSint64(b,c);break;case d.FHASH64:this.writeFixedHash64(b,c);break;case d.VHASH64:this.writeVarintHash64(b,c);break;default:goog.asserts.fail("Invalid field type in writeAny()")}};
jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(b))};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(b))};
jspb.BinaryWriter.prototype.writeSignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(b))};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(b))};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(b))};
jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(b))};jspb.BinaryWriter.prototype.writeZigzagVarintHash64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarintHash64(b))};
jspb.BinaryWriter.prototype.writeInt32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeInt32String=function(a,b){null!=b&&(b=parseInt(b,10),goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};
jspb.BinaryWriter.prototype.writeInt64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(a,b))};jspb.BinaryWriter.prototype.writeInt64String=function(a,b){null!=b&&(b=jspb.arith.Int64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(b.lo,b.hi))};
jspb.BinaryWriter.prototype.writeUint32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeUint32String=function(a,b){null!=b&&(b=parseInt(b,10),goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};jspb.BinaryWriter.prototype.writeUint64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(a,b))};
jspb.BinaryWriter.prototype.writeUint64String=function(a,b){null!=b&&(b=jspb.arith.UInt64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(b.lo,b.hi))};jspb.BinaryWriter.prototype.writeSint32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(a,b))};
jspb.BinaryWriter.prototype.writeSint64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(a,b))};jspb.BinaryWriter.prototype.writeSintHash64=function(a,b){null!=b&&this.writeZigzagVarintHash64_(a,b)};jspb.BinaryWriter.prototype.writeSint64String=function(a,b){null!=b&&this.writeZigzagVarint64String_(a,b)};
jspb.BinaryWriter.prototype.writeFixed32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(b))};jspb.BinaryWriter.prototype.writeFixed64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(b))};
jspb.BinaryWriter.prototype.writeFixed64String=function(a,b){null!=b&&(b=jspb.arith.UInt64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(b.lo,b.hi))};jspb.BinaryWriter.prototype.writeSfixed32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(b))};
jspb.BinaryWriter.prototype.writeSfixed64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(b))};jspb.BinaryWriter.prototype.writeSfixed64String=function(a,b){null!=b&&(b=jspb.arith.Int64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(b.lo,b.hi))};
jspb.BinaryWriter.prototype.writeFloat=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(b))};jspb.BinaryWriter.prototype.writeDouble=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(b))};
jspb.BinaryWriter.prototype.writeBool=function(a,b){null!=b&&(goog.asserts.assert("boolean"===typeof b||"number"===typeof b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(b))};jspb.BinaryWriter.prototype.writeEnum=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};
jspb.BinaryWriter.prototype.writeString=function(a,b){null!=b&&(a=this.beginDelimited_(a),this.encoder_.writeString(b),this.endDelimited_(a))};jspb.BinaryWriter.prototype.writeBytes=function(a,b){null!=b&&(b=jspb.utils.byteSourceToUint8Array(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(b.length),this.appendUint8Array_(b))};jspb.BinaryWriter.prototype.writeMessage=function(a,b,c){null!=b&&(a=this.beginDelimited_(a),c(b,this),this.endDelimited_(a))};
jspb.BinaryWriter.prototype.writeMessageSet=function(a,b,c){null!=b&&(this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.START_GROUP),this.writeFieldHeader_(2,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(a),a=this.beginDelimited_(3),c(b,this),this.endDelimited_(a),this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.END_GROUP))};
jspb.BinaryWriter.prototype.writeGroup=function(a,b,c){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b,this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeFixedHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(b))};
jspb.BinaryWriter.prototype.writeVarintHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(b))};jspb.BinaryWriter.prototype.writeSplitFixed64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(b,c)};
jspb.BinaryWriter.prototype.writeSplitVarint64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(b,c)};jspb.BinaryWriter.prototype.writeSplitZigzagVarint64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);var d=this.encoder_;jspb.utils.toZigzag64(b,c,function(a,b){d.writeSplitVarint64(a>>>0,b>>>0)})};
jspb.BinaryWriter.prototype.writeRepeatedInt32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt32String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint64_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitFixed64(a,c(b[e]),d(b[e]))};jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitVarint64(a,c(b[e]),d(b[e]))};jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitZigzagVarint64(a,c(b[e]),d(b[e]))};
jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint32String(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedUint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint32_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedSint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64String_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarintHash64_(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64String(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64String(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedFloat=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFloat(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeDouble(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBool=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBool(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeEnum(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedString=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeString(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBytes(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var e=this.beginDelimited_(a);c(b[d],this);this.endDelimited_(e)}};
jspb.BinaryWriter.prototype.writeRepeatedGroup=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b[d],this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP)};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixedHash64(a,b[c])};
jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeVarintHash64(a,b[c])};jspb.BinaryWriter.prototype.writePackedInt32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint32(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedInt32String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint32(parseInt(b[c],10));this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedInt64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint64(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSplitFixed64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=0;e<b.length;e++)this.encoder_.writeSplitFixed64(c(b[e]),d(b[e]));this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedSplitVarint64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=0;e<b.length;e++)this.encoder_.writeSplitVarint64(c(b[e]),d(b[e]));this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=this.encoder_,f=0;f<b.length;f++)jspb.utils.toZigzag64(c(b[f]),d(b[f]),function(a,b){e.writeSplitVarint64(a>>>0,b>>>0)});this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedInt64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++){var d=jspb.arith.Int64.fromString(b[c]);this.encoder_.writeSplitVarint64(d.lo,d.hi)}this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedUint32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint32(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedUint32String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint32(parseInt(b[c],10));this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedUint64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint64(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedUint64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++){var d=jspb.arith.UInt64.fromString(b[c]);this.encoder_.writeSplitVarint64(d.lo,d.hi)}this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSint32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarint32(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedSint64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarint64(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedSint64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(b[c]));this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedSintHash64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarintHash64(b[c]);this.endDelimited_(a)}};
jspb.BinaryWriter.prototype.writePackedFixed32=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeUint32(b[a])};jspb.BinaryWriter.prototype.writePackedFixed64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeUint64(b[a])};
jspb.BinaryWriter.prototype.writePackedFixed64String=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++){var c=jspb.arith.UInt64.fromString(b[a]);this.encoder_.writeSplitFixed64(c.lo,c.hi)}};
jspb.BinaryWriter.prototype.writePackedSfixed32=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeInt32(b[a])};jspb.BinaryWriter.prototype.writePackedSfixed64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeInt64(b[a])};
jspb.BinaryWriter.prototype.writePackedSfixed64String=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeInt64String(b[a])};jspb.BinaryWriter.prototype.writePackedFloat=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeFloat(b[a])};
jspb.BinaryWriter.prototype.writePackedDouble=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeDouble(b[a])};jspb.BinaryWriter.prototype.writePackedBool=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(b.length),a=0;a<b.length;a++)this.encoder_.writeBool(b[a])};
jspb.BinaryWriter.prototype.writePackedEnum=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeEnum(b[c]);this.endDelimited_(a)}};jspb.BinaryWriter.prototype.writePackedFixedHash64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeFixedHash64(b[a])};
jspb.BinaryWriter.prototype.writePackedVarintHash64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeVarintHash64(b[c]);this.endDelimited_(a)}};jspb.Export={};exports.Map=jspb.Map;exports.Message=jspb.Message;exports.BinaryReader=jspb.BinaryReader;exports.BinaryWriter=jspb.BinaryWriter;exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo;exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo;exports.exportSymbol=goog.exportSymbol;exports.inherits=goog.inherits;exports.object={extend:goog.object.extend};exports.typeOf=goog.typeOf;

/* WEBPACK VAR INJECTION */}.call(this, __nested_webpack_require_363685__(3), __nested_webpack_require_363685__(4).Buffer))

/***/ }),
/* 3 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 4 */
/***/ (function(module, exports, __nested_webpack_require_600088__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __nested_webpack_require_600088__(5)
var ieee754 = __nested_webpack_require_600088__(6)
var isArray = __nested_webpack_require_600088__(7)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __nested_webpack_require_600088__(3)))

/***/ }),
/* 5 */
/***/ (function(module, exports, __nested_webpack_require_648878__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 6 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 7 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __nested_webpack_require_655209__) {

"use strict";

/**
 * @fileoverview gRPC-Web generated client stub for pb
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bchrpcClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
const grpcWeb = __importStar(__nested_webpack_require_655209__(9));
const bchrpc_pb_1 = __nested_webpack_require_655209__(1);
class bchrpcClient {
    constructor(hostname, credentials, options) {
        this.methodInfoGetMempoolInfo = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetMempoolInfoResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetMempoolInfoResponse.deserializeBinary);
        this.methodInfoGetMempool = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetMempoolResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetMempoolResponse.deserializeBinary);
        this.methodInfoGetBlockchainInfo = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetBlockchainInfoResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetBlockchainInfoResponse.deserializeBinary);
        this.methodInfoGetBlockInfo = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetBlockInfoResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetBlockInfoResponse.deserializeBinary);
        this.methodInfoGetBlock = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetBlockResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetBlockResponse.deserializeBinary);
        this.methodInfoGetRawBlock = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetRawBlockResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetRawBlockResponse.deserializeBinary);
        this.methodInfoGetBlockFilter = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetBlockFilterResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetBlockFilterResponse.deserializeBinary);
        this.methodInfoGetHeaders = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetHeadersResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetHeadersResponse.deserializeBinary);
        this.methodInfoGetTransaction = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetTransactionResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetTransactionResponse.deserializeBinary);
        this.methodInfoGetRawTransaction = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetRawTransactionResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetRawTransactionResponse.deserializeBinary);
        this.methodInfoGetAddressTransactions = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetAddressTransactionsResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetAddressTransactionsResponse.deserializeBinary);
        this.methodInfoGetRawAddressTransactions = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetRawAddressTransactionsResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetRawAddressTransactionsResponse.deserializeBinary);
        this.methodInfoGetAddressUnspentOutputs = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetAddressUnspentOutputsResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetAddressUnspentOutputsResponse.deserializeBinary);
        this.methodInfoGetUnspentOutput = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetUnspentOutputResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetUnspentOutputResponse.deserializeBinary);
        this.methodInfoGetMerkleProof = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.GetMerkleProofResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.GetMerkleProofResponse.deserializeBinary);
        this.methodInfoSubmitTransaction = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.SubmitTransactionResponse, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.SubmitTransactionResponse.deserializeBinary);
        this.methodInfoSubscribeTransactions = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.TransactionNotification, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.TransactionNotification.deserializeBinary);
        this.methodInfoSubscribeBlocks = new grpcWeb.AbstractClientBase.MethodInfo(bchrpc_pb_1.BlockNotification, (request) => {
            return request.serializeBinary();
        }, bchrpc_pb_1.BlockNotification.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    getMempoolInfo(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetMempoolInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetMempoolInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetMempoolInfo', request, metadata || {}, this.methodInfoGetMempoolInfo);
    }
    getMempool(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetMempool', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetMempool, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetMempool', request, metadata || {}, this.methodInfoGetMempool);
    }
    getBlockchainInfo(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetBlockchainInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetBlockchainInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetBlockchainInfo', request, metadata || {}, this.methodInfoGetBlockchainInfo);
    }
    getBlockInfo(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetBlockInfo', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetBlockInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetBlockInfo', request, metadata || {}, this.methodInfoGetBlockInfo);
    }
    getBlock(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetBlock', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetBlock, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetBlock', request, metadata || {}, this.methodInfoGetBlock);
    }
    getRawBlock(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetRawBlock', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetRawBlock, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetRawBlock', request, metadata || {}, this.methodInfoGetRawBlock);
    }
    getBlockFilter(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetBlockFilter', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetBlockFilter, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetBlockFilter', request, metadata || {}, this.methodInfoGetBlockFilter);
    }
    getHeaders(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetHeaders', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetHeaders, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetHeaders', request, metadata || {}, this.methodInfoGetHeaders);
    }
    getTransaction(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetTransaction', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetTransaction, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetTransaction', request, metadata || {}, this.methodInfoGetTransaction);
    }
    getRawTransaction(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetRawTransaction', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetRawTransaction, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetRawTransaction', request, metadata || {}, this.methodInfoGetRawTransaction);
    }
    getAddressTransactions(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetAddressTransactions', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetAddressTransactions, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetAddressTransactions', request, metadata || {}, this.methodInfoGetAddressTransactions);
    }
    getRawAddressTransactions(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetRawAddressTransactions', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetRawAddressTransactions, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetRawAddressTransactions', request, metadata || {}, this.methodInfoGetRawAddressTransactions);
    }
    getAddressUnspentOutputs(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetAddressUnspentOutputs', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetAddressUnspentOutputs, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetAddressUnspentOutputs', request, metadata || {}, this.methodInfoGetAddressUnspentOutputs);
    }
    getUnspentOutput(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetUnspentOutput', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetUnspentOutput, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetUnspentOutput', request, metadata || {}, this.methodInfoGetUnspentOutput);
    }
    getMerkleProof(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/GetMerkleProof', this.hostname_).toString(), request, metadata || {}, this.methodInfoGetMerkleProof, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/GetMerkleProof', request, metadata || {}, this.methodInfoGetMerkleProof);
    }
    submitTransaction(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(new URL('/pb.bchrpc/SubmitTransaction', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubmitTransaction, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/pb.bchrpc/SubmitTransaction', request, metadata || {}, this.methodInfoSubmitTransaction);
    }
    subscribeTransactions(request, metadata) {
        return this.client_.serverStreaming(new URL('/pb.bchrpc/SubscribeTransactions', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubscribeTransactions);
    }
    subscribeBlocks(request, metadata) {
        return this.client_.serverStreaming(new URL('/pb.bchrpc/SubscribeBlocks', this.hostname_).toString(), request, metadata || {}, this.methodInfoSubscribeBlocks);
    }
}
exports.bchrpcClient = bchrpcClient;


/***/ }),
/* 9 */
/***/ (function(module, exports, __nested_webpack_require_668820__) {

/* WEBPACK VAR INJECTION */(function(global) {var aa="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},ba="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this;function ca(a,b){if(b){var c=ba;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}
function da(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function ea(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:da(a)}}
ca("Promise",function(a){function b(f){this.b=0;this.c=void 0;this.a=[];var h=this.f();try{f(h.resolve,h.reject)}catch(k){h.reject(k)}}function c(){this.a=null}function d(f){return f instanceof b?f:new b(function(h){h(f)})}if(a)return a;c.prototype.b=function(f){if(null==this.a){this.a=[];var h=this;this.c(function(){h.g()})}this.a.push(f)};var e=ba.setTimeout;c.prototype.c=function(f){e(f,0)};c.prototype.g=function(){for(;this.a&&this.a.length;){var f=this.a;this.a=[];for(var h=0;h<f.length;++h){var k=
f[h];f[h]=null;try{k()}catch(l){this.f(l)}}}this.a=null};c.prototype.f=function(f){this.c(function(){throw f;})};b.prototype.f=function(){function f(l){return function(n){k||(k=!0,l.call(h,n))}}var h=this,k=!1;return{resolve:f(this.m),reject:f(this.g)}};b.prototype.m=function(f){if(f===this)this.g(new TypeError("A Promise cannot resolve to itself"));else if(f instanceof b)this.o(f);else{a:switch(typeof f){case "object":var h=null!=f;break a;case "function":h=!0;break a;default:h=!1}h?this.l(f):this.h(f)}};
b.prototype.l=function(f){var h=void 0;try{h=f.then}catch(k){this.g(k);return}"function"==typeof h?this.u(h,f):this.h(f)};b.prototype.g=function(f){this.i(2,f)};b.prototype.h=function(f){this.i(1,f)};b.prototype.i=function(f,h){if(0!=this.b)throw Error("Cannot settle("+f+", "+h+"): Promise already settled in state"+this.b);this.b=f;this.c=h;this.j()};b.prototype.j=function(){if(null!=this.a){for(var f=0;f<this.a.length;++f)g.b(this.a[f]);this.a=null}};var g=new c;b.prototype.o=function(f){var h=this.f();
f.A(h.resolve,h.reject)};b.prototype.u=function(f,h){var k=this.f();try{f.call(h,k.resolve,k.reject)}catch(l){k.reject(l)}};b.prototype.then=function(f,h){function k(u,A){return"function"==typeof u?function(X){try{l(u(X))}catch(Y){n(Y)}}:A}var l,n,Z=new b(function(u,A){l=u;n=A});this.A(k(f,l),k(h,n));return Z};b.prototype.catch=function(f){return this.then(void 0,f)};b.prototype.A=function(f,h){function k(){switch(l.b){case 1:f(l.c);break;case 2:h(l.c);break;default:throw Error("Unexpected state: "+
l.b);}}var l=this;null==this.a?g.b(k):this.a.push(k)};b.resolve=d;b.reject=function(f){return new b(function(h,k){k(f)})};b.race=function(f){return new b(function(h,k){for(var l=ea(f),n=l.next();!n.done;n=l.next())d(n.value).A(h,k)})};b.all=function(f){var h=ea(f),k=h.next();return k.done?d([]):new b(function(l,n){function Z(X){return function(Y){u[X]=Y;A--;0==A&&l(u)}}var u=[],A=0;do u.push(void 0),A++,d(k.value).A(Z(u.length-1),n),k=h.next();while(!k.done)})};return b});var fa=fa||{},m=this||self;
function p(a){return"string"==typeof a}function q(a,b){a=a.split(".");b=b||m;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b}function r(){}
function t(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b}function v(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}var ha="closure_uid_"+(1E9*Math.random()>>>0),ia=0;function ja(a,b,c){return a.call.apply(a.bind,arguments)}
function ka(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function w(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?w=ja:w=ka;return w.apply(null,arguments)}var la=Date.now||function(){return+new Date};
function x(a,b){function c(){}c.prototype=b.prototype;a.T=b.prototype;a.prototype=new c;a.prototype.constructor=a};function ma(a){switch(a){case 0:return"No Error";case 1:return"Access denied to content document";case 2:return"File not found";case 3:return"Firefox silently errored";case 4:return"Application custom error";case 5:return"An exception occurred";case 6:return"Http response at 400 or 500 level";case 7:return"Request was aborted";case 8:return"Request timed out";case 9:return"The resource is not available offline";default:return"Unrecognized error code"}};function y(a){if(Error.captureStackTrace)Error.captureStackTrace(this,y);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}x(y,Error);y.prototype.name="CustomError";function na(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");y.call(this,c+a[d])}x(na,y);na.prototype.name="AssertionError";function oa(a,b){throw new na("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1));};function pa(){this.j=null;this.i=[];this.l=0;this.b=qa;this.f=this.a=this.h=0;this.c=null;this.g=0}var qa=0;function ra(a,b,c,d){a.b=3;a.j="The stream is broken @"+a.l+"/"+c+". Error: "+d+". With input:\n"+b;throw Error(a.j);}
function sa(a,b){function c(l){0==l?f.h=l:128==l?f.h=l:ra(f,h,k,"invalid frame byte");f.b=1;f.a=0;f.f=0}function d(l){f.f++;f.a=(f.a<<8)+l;4==f.f&&(f.b=2,f.g=0,"undefined"!==typeof Uint8Array?f.c=new Uint8Array(f.a):f.c=Array(f.a),0==f.a&&g())}function e(l){f.c[f.g++]=l;f.g==f.a&&g()}function g(){var l={};l[f.h]=f.c;f.i.push(l);f.b=qa}for(var f=a,h=b instanceof Array?b:new Uint8Array(b),k=0;k<h.length;){switch(f.b){case 3:ra(f,h,k,"stream already broken");break;case qa:c(h[k]);break;case 1:d(h[k]);
break;case 2:e(h[k]);break;default:throw Error("unexpected parser state: "+f.b);}f.l++;k++}a=f.i;f.i=[];return 0<a.length?a:null};function ta(a){switch(a){case 200:return 0;case 400:return 3;case 401:return 16;case 403:return 7;case 404:return 5;case 409:return 10;case 412:return 9;case 429:return 8;case 499:return 1;case 500:return 2;case 501:return 12;case 503:return 14;case 504:return 4;default:return 2}};var ua=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(p(a))return p(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};function va(a){a:{var b=wa;for(var c=a.length,d=p(a)?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:p(a)?a.charAt(b):a[b]};function xa(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function ya(a,b){var c={},d;for(d in a)c[d]=b.call(void 0,a[d],d,a);return c}var za="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function Aa(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var g=0;g<za.length;g++)c=za[g],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var Ba=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};function z(a,b){return-1!=a.indexOf(b)}function Ca(a,b){return a<b?-1:a>b?1:0};var B;a:{var Da=m.navigator;if(Da){var Ea=Da.userAgent;if(Ea){B=Ea;break a}}B=""};function Fa(a){var b=1;a=a.split(":");for(var c=[];0<b&&a.length;)c.push(a.shift()),b--;a.length&&c.push(a.join(":"));return c};function Ga(){0!=Ha&&(this[ha]||(this[ha]=++ia));this.H=this.H}var Ha=0;Ga.prototype.H=!1;function Ia(a){Ia[" "](a);return a}Ia[" "]=r;function Ja(a,b){var c=Ka;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var La=z(B,"Opera"),C=z(B,"Trident")||z(B,"MSIE"),Ma=z(B,"Edge"),Na=z(B,"Gecko")&&!(z(B.toLowerCase(),"webkit")&&!z(B,"Edge"))&&!(z(B,"Trident")||z(B,"MSIE"))&&!z(B,"Edge"),Oa=z(B.toLowerCase(),"webkit")&&!z(B,"Edge");function Pa(){var a=m.document;return a?a.documentMode:void 0}var Qa;
a:{var Ra="",Sa=function(){var a=B;if(Na)return/rv:([^\);]+)(\)|;)/.exec(a);if(Ma)return/Edge\/([\d\.]+)/.exec(a);if(C)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(Oa)return/WebKit\/(\S+)/.exec(a);if(La)return/(?:Version)[ \/]?(\S+)/.exec(a)}();Sa&&(Ra=Sa?Sa[1]:"");if(C){var Ta=Pa();if(null!=Ta&&Ta>parseFloat(Ra)){Qa=String(Ta);break a}}Qa=Ra}var Ka={};
function Ua(a){return Ja(a,function(){for(var b=0,c=Ba(String(Qa)).split("."),d=Ba(String(a)).split("."),e=Math.max(c.length,d.length),g=0;0==b&&g<e;g++){var f=c[g]||"",h=d[g]||"";do{f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""];h=/(\d*)(\D*)(.*)/.exec(h)||["","","",""];if(0==f[0].length&&0==h[0].length)break;b=Ca(0==f[1].length?0:parseInt(f[1],10),0==h[1].length?0:parseInt(h[1],10))||Ca(0==f[2].length,0==h[2].length)||Ca(f[2],h[2]);f=f[3];h=h[3]}while(0==b)}return 0<=b})}var Va;
Va=m.document&&C?Pa():void 0;var Wa=Object.freeze||function(a){return a};var Xa;(Xa=!C)||(Xa=9<=Number(Va));var Ya=Xa,Za=C&&!Ua("9"),$a=function(){if(!m.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{m.addEventListener("test",r,b),m.removeEventListener("test",r,b)}catch(c){}return a}();function D(a,b){this.type=a;this.a=this.target=b}D.prototype.b=function(){};function E(a,b){D.call(this,a?a.type:"");this.relatedTarget=this.a=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType="";this.c=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.a=b;if(b=a.relatedTarget){if(Na){a:{try{Ia(b.nodeName);var e=!0;break a}catch(g){}e=!1}e||(b=null)}}else"mouseover"==
c?b=a.fromElement:"mouseout"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||"";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=
a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=p(a.pointerType)?a.pointerType:ab[a.pointerType]||"";this.c=a;a.defaultPrevented&&this.b()}}x(E,D);var ab=Wa({2:"touch",3:"pen",4:"mouse"});E.prototype.b=function(){E.T.b.call(this);var a=this.c;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Za)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};var F="closure_listenable_"+(1E6*Math.random()|0),bb=0;function cb(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.B=e;this.key=++bb;this.s=this.w=!1}function db(a){a.s=!0;a.listener=null;a.proxy=null;a.src=null;a.B=null};function G(a){this.src=a;this.a={};this.b=0}G.prototype.add=function(a,b,c,d,e){var g=a.toString();a=this.a[g];a||(a=this.a[g]=[],this.b++);var f=eb(a,b,d,e);-1<f?(b=a[f],c||(b.w=!1)):(b=new cb(b,this.src,g,!!d,e),b.w=c,a.push(b));return b};function fb(a,b){var c=b.type;if(c in a.a){var d=a.a[c],e=ua(d,b),g;(g=0<=e)&&Array.prototype.splice.call(d,e,1);g&&(db(b),0==a.a[c].length&&(delete a.a[c],a.b--))}}
function eb(a,b,c,d){for(var e=0;e<a.length;++e){var g=a[e];if(!g.s&&g.listener==b&&g.capture==!!c&&g.B==d)return e}return-1};var gb="closure_lm_"+(1E6*Math.random()|0),hb={},ib=0;function jb(a,b,c,d,e){if(d&&d.once)kb(a,b,c,d,e);else if("array"==t(b))for(var g=0;g<b.length;g++)jb(a,b[g],c,d,e);else c=lb(c),a&&a[F]?a.f.add(String(b),c,!1,v(d)?!!d.capture:!!d,e):mb(a,b,c,!1,d,e)}
function mb(a,b,c,d,e,g){if(!b)throw Error("Invalid event type");var f=v(e)?!!e.capture:!!e,h=H(a);h||(a[gb]=h=new G(a));c=h.add(b,c,d,f,g);if(!c.proxy){d=nb();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)$a||(e=f),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(ob(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");ib++}}
function nb(){var a=pb,b=Ya?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function kb(a,b,c,d,e){if("array"==t(b))for(var g=0;g<b.length;g++)kb(a,b[g],c,d,e);else c=lb(c),a&&a[F]?a.f.add(String(b),c,!0,v(d)?!!d.capture:!!d,e):mb(a,b,c,!0,d,e)}
function qb(a,b,c,d,e){if("array"==t(b))for(var g=0;g<b.length;g++)qb(a,b[g],c,d,e);else(d=v(d)?!!d.capture:!!d,c=lb(c),a&&a[F])?(a=a.f,b=String(b).toString(),b in a.a&&(g=a.a[b],c=eb(g,c,d,e),-1<c&&(db(g[c]),Array.prototype.splice.call(g,c,1),0==g.length&&(delete a.a[b],a.b--)))):a&&(a=H(a))&&(b=a.a[b.toString()],a=-1,b&&(a=eb(b,c,d,e)),(c=-1<a?b[a]:null)&&rb(c))}
function rb(a){if("number"!=typeof a&&a&&!a.s){var b=a.src;if(b&&b[F])fb(b.f,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(ob(c),d):b.addListener&&b.removeListener&&b.removeListener(d);ib--;(c=H(b))?(fb(c,a),0==c.b&&(c.src=null,b[gb]=null)):db(a)}}}function ob(a){return a in hb?hb[a]:hb[a]="on"+a}
function sb(a,b,c,d){var e=!0;if(a=H(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var g=b[a];g&&g.capture==c&&!g.s&&(g=tb(g,d),e=e&&!1!==g)}return e}function tb(a,b){var c=a.listener,d=a.B||a.src;a.w&&rb(a);return c.call(d,b)}
function pb(a,b){if(a.s)return!0;if(!Ya){var c=b||q("window.event");b=new E(c,this);var d=!0;if(!(0>c.keyCode||void 0!=c.returnValue)){a:{var e=!1;if(0==c.keyCode)try{c.keyCode=-1;break a}catch(f){e=!0}if(e||void 0==c.returnValue)c.returnValue=!0}c=[];for(e=b.a;e;e=e.parentNode)c.push(e);a=a.type;for(e=c.length-1;0<=e;e--){b.a=c[e];var g=sb(c[e],a,!0,b);d=d&&g}for(e=0;e<c.length;e++)b.a=c[e],g=sb(c[e],a,!1,b),d=d&&g}return d}return tb(a,new E(b,this))}
function H(a){a=a[gb];return a instanceof G?a:null}var ub="__closure_events_fn_"+(1E9*Math.random()>>>0);function lb(a){if("function"==t(a))return a;a[ub]||(a[ub]=function(b){return a.handleEvent(b)});return a[ub]};function I(){Ga.call(this);this.f=new G(this);this.P=this}x(I,Ga);I.prototype[F]=!0;I.prototype.removeEventListener=function(a,b,c,d){qb(this,a,b,c,d)};function J(a,b){a=a.P;var c=b.type||b;if(p(b))b=new D(b,a);else if(b instanceof D)b.target=b.target||a;else{var d=b;b=new D(c,a);Aa(b,d)}a=b.a=a;vb(a,c,!0,b);vb(a,c,!1,b)}
function vb(a,b,c,d){if(b=a.f.a[String(b)]){b=b.concat();for(var e=!0,g=0;g<b.length;++g){var f=b[g];if(f&&!f.s&&f.capture==c){var h=f.listener,k=f.B||f.src;f.w&&fb(a.f,f);e=!1!==h.call(k,d)&&e}}}};function wb(a,b,c){if("function"==t(a))c&&(a=w(a,c));else if(a&&"function"==typeof a.handleEvent)a=w(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<Number(b)?-1:m.setTimeout(a,b||0)};function xb(a,b,c){this.reset(a,b,c,void 0,void 0)}xb.prototype.a=null;var yb=0;xb.prototype.reset=function(a,b,c,d,e){"number"==typeof e||yb++;d||la();delete this.a};function zb(a){this.f=a;this.b=this.c=this.a=null}function K(a,b){this.name=a;this.value=b}K.prototype.toString=function(){return this.name};var Ab=new K("SEVERE",1E3),Bb=new K("CONFIG",700),Cb=new K("FINE",500);function Db(a){if(a.c)return a.c;if(a.a)return Db(a.a);oa("Root logger has no level set.");return null}zb.prototype.log=function(a,b,c){if(a.value>=Db(this).value)for("function"==t(b)&&(b=b()),a=new xb(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var Eb={},L=null;
function Fb(a){L||(L=new zb(""),Eb[""]=L,L.c=Bb);var b;if(!(b=Eb[a])){b=new zb(a);var c=a.lastIndexOf("."),d=a.substr(c+1);c=Fb(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;Eb[a]=b}return b};function M(a,b){a&&a.log(Cb,b,void 0)};function Gb(){}Gb.prototype.a=null;function Hb(a){var b;(b=a.a)||(b={},Ib(a)&&(b[0]=!0,b[1]=!0),b=a.a=b);return b};var Jb;function Kb(){}x(Kb,Gb);function Lb(a){return(a=Ib(a))?new ActiveXObject(a):new XMLHttpRequest}function Ib(a){if(!a.b&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var b=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.b=d}catch(e){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");}return a.b}Jb=new Kb;function N(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else a&&Mb(this,a)}N.prototype.f=function(){Nb(this);return this.a.concat()};function Ob(a){a.b={};a.a.length=0;a.c=0}
function Nb(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];O(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],O(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}N.prototype.get=function(a,b){return O(this.b,a)?this.b[a]:b};N.prototype.set=function(a,b){O(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};function Mb(a,b){if(b instanceof N)for(var c=b.f(),d=0;d<c.length;d++)a.set(c[d],b.get(c[d]));else for(c in b)a.set(c,b[c])}
N.prototype.forEach=function(a,b){for(var c=this.f(),d=0;d<c.length;d++){var e=c[d],g=this.get(e);a.call(b,g,e,this)}};function Pb(a){Nb(a);for(var b={},c=0;c<a.a.length;c++){var d=a.a[c];b[d]=a.b[d]}return b}function O(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var Qb=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function P(a){I.call(this);this.headers=new N;this.v=a||null;this.c=!1;this.G=this.a=null;this.K=this.u="";this.g=0;this.j="";this.i=this.J=this.o=this.I=!1;this.l=0;this.D=null;this.h=Rb;this.F=this.m=!1}x(P,I);var Rb="",Sb=P.prototype,Tb=Fb("goog.net.XhrIo");Sb.b=Tb;var Ub=/^https?$/i,Vb=["POST","PUT"];
function Wb(a,b,c){if(a.a)throw Error("[goog.net.XhrIo] Object is active with another request="+a.u+"; newUri="+b);a.u=b;a.j="";a.g=0;a.K="POST";a.I=!1;a.c=!0;a.a=a.v?Lb(a.v):Lb(Jb);a.G=a.v?Hb(a.v):Hb(Jb);a.a.onreadystatechange=w(a.L,a);try{M(a.b,Q(a,"Opening Xhr")),a.J=!0,a.a.open("POST",String(b),!0),a.J=!1}catch(g){M(a.b,Q(a,"Error opening Xhr: "+g.message));Xb(a,g);return}b=c||"";c=new N(a.headers);var d=va(c.f()),e=m.FormData&&b instanceof m.FormData;!(0<=ua(Vb,"POST"))||d||e||c.set("Content-Type",
"application/x-www-form-urlencoded;charset=utf-8");c.forEach(function(g,f){this.a.setRequestHeader(f,g)},a);a.h&&(a.a.responseType=a.h);"withCredentials"in a.a&&a.a.withCredentials!==a.m&&(a.a.withCredentials=a.m);try{Yb(a),0<a.l&&(a.F=Zb(a.a),M(a.b,Q(a,"Will abort after "+a.l+"ms if incomplete, xhr2 "+a.F)),a.F?(a.a.timeout=a.l,a.a.ontimeout=w(a.M,a)):a.D=wb(a.M,a.l,a)),M(a.b,Q(a,"Sending request")),a.o=!0,a.a.send(b),a.o=!1}catch(g){M(a.b,Q(a,"Send error: "+g.message)),Xb(a,g)}}
function Zb(a){return C&&Ua(9)&&"number"==typeof a.timeout&&void 0!==a.ontimeout}function wa(a){return"content-type"==a.toLowerCase()}P.prototype.M=function(){"undefined"!=typeof fa&&this.a&&(this.j="Timed out after "+this.l+"ms, aborting",this.g=8,M(this.b,Q(this,this.j)),J(this,"timeout"),this.abort(8))};function Xb(a,b){a.c=!1;a.a&&(a.i=!0,a.a.abort(),a.i=!1);a.j=b;a.g=5;$b(a);ac(a)}function $b(a){a.I||(a.I=!0,J(a,"complete"),J(a,"error"))}
P.prototype.abort=function(a){this.a&&this.c&&(M(this.b,Q(this,"Aborting")),this.c=!1,this.i=!0,this.a.abort(),this.i=!1,this.g=a||7,J(this,"complete"),J(this,"abort"),ac(this))};P.prototype.L=function(){this.H||(this.J||this.o||this.i?bc(this):this.R())};P.prototype.R=function(){bc(this)};
function bc(a){if(a.c&&"undefined"!=typeof fa)if(a.G[1]&&4==R(a)&&2==S(a))M(a.b,Q(a,"Local request error detected and ignored"));else if(a.o&&4==R(a))wb(a.L,0,a);else if(J(a,"readystatechange"),4==R(a)){M(a.b,Q(a,"Request complete"));a.c=!1;try{var b=S(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var g=String(a.u).match(Qb)[1]||null;if(!g&&m.self&&m.self.location){var f=m.self.location.protocol;g=f.substr(0,
f.length-1)}e=!Ub.test(g?g.toLowerCase():"")}d=e}if(d)J(a,"complete"),J(a,"success");else{a.g=6;try{var h=2<R(a)?a.a.statusText:""}catch(k){M(a.b,"Can not get status: "+k.message),h=""}a.j=h+" ["+S(a)+"]";$b(a)}}finally{ac(a)}}}function ac(a){if(a.a){Yb(a);var b=a.a,c=a.G[0]?r:null;a.a=null;a.G=null;J(a,"ready");try{b.onreadystatechange=c}catch(d){(a=a.b)&&a.log(Ab,"Problem encountered resetting onreadystatechange: "+d.message,void 0)}}}
function Yb(a){a.a&&a.F&&(a.a.ontimeout=null);a.D&&(m.clearTimeout(a.D),a.D=null)}function R(a){return a.a?a.a.readyState:0}function S(a){try{return 2<R(a)?a.a.status:-1}catch(b){return-1}}
function cc(a){try{if(!a.a)return null;if("response"in a.a)return a.a.response;switch(a.h){case Rb:case "text":return a.a.responseText;case "arraybuffer":if("mozResponseArrayBuffer"in a.a)return a.a.mozResponseArrayBuffer}var b=a.b;b&&b.log(Ab,"Response type "+a.h+" is not supported on this browser",void 0);return null}catch(c){return M(a.b,"Can not get response: "+c.message),null}}function dc(a,b){if(a.a&&4==R(a))return a=a.a.getResponseHeader(b),null===a?void 0:a}
function ec(a){var b={};a=(a.a&&4==R(a)?a.a.getAllResponseHeaders()||"":"").split("\r\n");for(var c=0;c<a.length;c++)if(!/^[\s\xa0]*$/.test(a[c])){var d=Fa(a[c]),e=d[0];d=d[1];if(p(d)){d=d.trim();var g=b[e]||[];b[e]=g;g.push(d)}}return ya(b,function(f){return f.join(", ")})}function Q(a,b){return b+" ["+a.K+" "+a.u+" "+S(a)+"]"};var fc={},T=null;function gc(a){var b;void 0===b&&(b=0);hc();b=fc[b];for(var c=[],d=0;d<a.length;d+=3){var e=a[d],g=d+1<a.length,f=g?a[d+1]:0,h=d+2<a.length,k=h?a[d+2]:0,l=e>>2;e=(e&3)<<4|f>>4;f=(f&15)<<2|k>>6;k&=63;h||(k=64,g||(f=64));c.push(b[l],b[e],b[f]||"",b[k]||"")}return c.join("")}function ic(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):z("=.",a[b-1])&&(c=z("=.",a[b-2])?c-2:c-1);var d=new Uint8Array(c),e=0;jc(a,function(g){d[e++]=g});return d.subarray(0,e)}
function jc(a,b){function c(k){for(;d<a.length;){var l=a.charAt(d++),n=T[l];if(null!=n)return n;if(!/^[\s\xa0]*$/.test(l))throw Error("Unknown base64 encoding at char: "+l);}return k}hc();for(var d=0;;){var e=c(-1),g=c(0),f=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|g>>4);64!=f&&(b(g<<4&240|f>>2),64!=h&&b(f<<6&192|h))}}
function hc(){if(!T){T={};for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));fc[c]=d;for(var e=0;e<d.length;e++){var g=d[e];void 0===T[g]&&(T[g]=e)}}}};function U(a){this.a=a.O;this.f=this.b=this.c=this.j=this.h=null;this.i=!1;this.g=0;this.l=new pa;var b=this;jb(this.a,"readystatechange",function(){var c=b.a;if(c=c.a?c.a.getResponseHeader("Content-Type"):null){c=c.toLowerCase();if(0==c.lastIndexOf("application/grpc-web-text",0)){c=b.a;try{var d=c.a?c.a.responseText:""}catch(k){M(c.b,"Can not get responseText: "+k.message),d=""}c=d.length-d.length%4;d=d.substr(b.g,c-b.g);if(0==d.length)return;b.g=c;d=ic(d)}else if(0==c.lastIndexOf("application/grpc",
0))d=new Uint8Array(cc(b.a));else return;if(d=sa(b.l,[].slice.call(d)))for(c=0;c<d.length;c++){if(0 in d[c]){var e=d[c][0];e&&(e=b.h(e))&&b.j(e)}if(128 in d[c]&&0<d[c][128].length){e="";for(var g=0;g<d[c][128].length;g++)e+=String.fromCharCode(d[c][128][g]);e=e.trim().split("\r\n");g={};for(var f=0;f<e.length;f++){var h=e[f].indexOf(":");g[e[f].substring(0,h).trim()]=e[f].substring(h+1).trim()}e=g;g=0;f="";"grpc-status"in e&&(g=e["grpc-status"]);"grpc-message"in e&&(f=e["grpc-message"]);b.c&&b.c({code:Number(g),
details:f,metadata:e})}}}});jb(this.a,"complete",function(){var c=b.a.g,d="";if(0!=c){switch(c){case 7:var e=10;break;case 8:e=4;break;case 6:e=ta(S(b.a));break;default:e=14}10==e&&b.i||!b.b||b.b({code:e,message:ma(c)})}else{c=!1;var g=ec(b.a);"grpc-status"in g&&(e=dc(b.a,"grpc-status"),"grpc-message"in g&&(d=dc(b.a,"grpc-message")),0!=Number(e)&&b.b&&(b.b({code:Number(e),message:d,metadata:g}),c=!0),b.c&&b.c({code:Number(e),details:d,metadata:g}));!c&&b.f&&b.f()}})}
U.prototype.C=function(a,b){"data"==a?this.j=b:"status"==a?this.c=b:"end"==a?this.f=b:"error"==a&&(this.b=b);return this};U.prototype.on=U.prototype.C;U.prototype.cancel=function(){this.i=!0;this.a.abort()};U.prototype.cancel=U.prototype.cancel;function kc(a){var b="";xa(a,function(c,d){b+=d;b+=":";b+=c;b+="\r\n"});return b}function lc(a,b){a:{for(c in b){var c=!1;break a}c=!0}if(c)return a;c=kc(b);if(p(a)){b=encodeURIComponent("$httpHeaders");c=null!=c?"="+encodeURIComponent(String(c)):"";if(b+=c){c=a.indexOf("#");0>c&&(c=a.length);var d=a.indexOf("?");if(0>d||d>c){d=c;var e=""}else e=a.substring(d+1,c);a=[a.substr(0,d),e,a.substr(c)];c=a[1];a[1]=b?c?c+"&"+b:b:c;a=a[0]+(a[1]?"?"+a[1]:"")+a[2]}return a}a.a("$httpHeaders",c);return a};function V(a){this.a=q("format",a)||"text";this.c=q("suppressCorsPreflight",a)||!1;this.b=q("withCredentials",a)||!1}
V.prototype.N=function(a,b,c,d,e){var g=new P;g.m=this.b;var f=new U({O:g});f.h=d.b;f.C("data",function(h){e(null,h)});f.C("status",function(h){0!=h.code&&e({code:h.code,message:h.details,metadata:h.metadata},null)});f.C("error",function(h){0!=h.code&&e({code:h.code,message:h.message,metadata:h.metadata},null)});Mb(g.headers,c);mc(this,g);this.c&&(c=Pb(g.headers),Ob(g.headers),a=lc(a,c));b=d.a(b);b=nc(b);"text"==this.a?b=gc(b):"binary"==this.a&&(g.h="arraybuffer");Wb(g,a,b);return f};
V.prototype.rpcCall=V.prototype.N;V.prototype.U=function(a,b,c,d){var e=this;return new Promise(function(g,f){e.N(a,b,c,d,function(h,k){h?f(h):g(k)})})};V.prototype.unaryCall=V.prototype.U;V.prototype.S=function(a,b,c,d){var e=new P;e.m=this.b;var g=new U({O:e});g.h=d.b;Mb(e.headers,c);mc(this,e);this.c&&(c=Pb(e.headers),Ob(e.headers),a=lc(a,c));b=d.a(b);b=nc(b);"text"==this.a?b=gc(b):"binary"==this.a&&(e.h="arraybuffer");Wb(e,a,b);return g};V.prototype.serverStreaming=V.prototype.S;
function nc(a){for(var b=a.length,c=[0,0,0,0],d=new Uint8Array(5+b),e=3;0<=e;e--)c[e]=b%256,b>>>=8;d.set(new Uint8Array(c),1);d.set(a,5);return d}
function mc(a,b){"text"==a.a?(b.headers.set("Content-Type","application/grpc-web-text"),b.headers.set("Accept","application/grpc-web-text")):b.headers.set("Content-Type","application/grpc-web+proto");b.headers.set("X-User-Agent","grpc-web-javascript/0.1");b.headers.set("X-Grpc-Web","1");if(O(b.headers.b,"deadline")){a=b.headers.get("deadline");a=Math.round(a-(new Date).getTime());var c=b.headers;O(c.b,"deadline")&&(delete c.b.deadline,c.c--,c.a.length>2*c.c&&Nb(c));Infinity===a&&(a=0);0<a&&b.headers.set("grpc-timeout",
a+"m")}};var W=module.exports;W.AbstractClientBase={MethodInfo:function(a,b,c,d){this.name=d;this.a=b;this.b=c}};W.GrpcWebClientBase=V;W.StatusCode={OK:0,CANCELLED:1,UNKNOWN:2,INVALID_ARGUMENT:3,DEADLINE_EXCEEDED:4,NOT_FOUND:5,ALREADY_EXISTS:6,PERMISSION_DENIED:7,UNAUTHENTICATED:16,RESOURCE_EXHAUSTED:8,FAILED_PRECONDITION:9,ABORTED:10,OUT_OF_RANGE:11,UNIMPLEMENTED:12,INTERNAL:13,UNAVAILABLE:14,DATA_LOSS:15};W.MethodDescriptor=function(a,b,c,d,e,g){this.name=a;this.a=e;this.b=g};
W.MethodType={UNARY:"unary",SERVER_STREAMING:"server_streaming"};

/* WEBPACK VAR INJECTION */}.call(this, __nested_webpack_require_668820__(3)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __nested_webpack_require_696767__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const bchrpc = __importStar(__nested_webpack_require_696767__(1));
const bchrpc_pb_service = __importStar(__nested_webpack_require_696767__(8));
const util = __importStar(__nested_webpack_require_696767__(11));
class GrpcClient {
    /**
     * Create a client.
     * @param url - The bchd server expressed as host:port.
     * @param testnet - Whether testnet is being used, default:false.
     * @param options - grpc client options.
     */
    constructor({ url, testnet = false, options }) {
        if (typeof url === 'string') {
            url = url;
        }
        else if (!url && !testnet) {
            url = "https://bchd.fountainhead.cash:443";
            // url = "https://bchd.greyh.at:8335";
        }
        else if (!url) {
            url = "https://bchd-testnet.greyh.at:18335";
        }
        if (!options) {
            options = {
                "grpc.max_receive_message_length": "-1",
            };
        }
        this.client = new bchrpc_pb_service.bchrpcClient(url, null, options);
    }
    /**
     * Get information about transactions in mempool
     */
    getMempoolInfo() {
        return new Promise((resolve, reject) => {
            this.client.getMempoolInfo(new bchrpc.GetMempoolInfoRequest(), null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Get transactions from mempool
     * @param fullTransactions - A flag to return full transaction data. Default is `false`, only transaction hashes are returned.
     */
    getMempool({ fullTransactions }) {
        const req = new bchrpc.GetMempoolRequest();
        if (fullTransactions) {
            req.setFullTransactions(fullTransactions);
        }
        return new Promise((resolve, reject) => {
            this.client.getMempool(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Get a raw transaction
     * @param hash - the hash, in either a base64 encoded string or byte array, little-endian.
     * @param hashHex - the hash as a big-endian hexadecimal encoded string, sill be overridden by hash if provided.
     */
    getRawTransaction({ hash, hashHex }) {
        const req = new bchrpc.GetRawTransactionRequest();
        if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        else {
            throw Error("No hash provided for transaction");
        }
        return new Promise((resolve, reject) => {
            this.client.getRawTransaction(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Get a transaction
     * @param hash - the hash, expressed in little-endian in either a base64 encoded string or byte array.
     * @param hashHex - the hash as a big-endian hexadecimal encoded string, will be overridden by hash, if provided.
     */
    getTransaction({ hash, hashHex }) {
        const req = new bchrpc.GetTransactionRequest();
        if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        else {
            throw Error("No hash provided for transaction");
        }
        return new Promise((resolve, reject) => {
            this.client.getTransaction(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Get block header information
     * @param blockLocatorHashes - Sparse list of hashes known to the client.
     * @param stopHash -Last block hash to return.
     */
    getHeaders({ blockLocatorHashes, stopHash }) {
        const req = new bchrpc.GetHeadersRequest();
        if (blockLocatorHashes) {
            req.setBlockLocatorHashesList(blockLocatorHashes);
        }
        if (stopHash) {
            req.setStopHash(stopHash);
        }
        return new Promise((resolve, reject) => {
            this.client.getHeaders(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Get transactions related to a particular address
     * @param address - Bitcoin cash address in casharr format.
     * @param nbSkip - Number of transactions to skip, in chronological order.
     * @param nbFetch - Number of transactions return.
     * @param height - Filter to only return transactions after this block number.
     * @param hash - the hash, expressed in little-endian in either a base64 encoded string or byte array.
     * @param hashHex - the hash as a big-endian hexadecimal encoded string, will be overridden by `hash`, if provided.
     */
    getAddressTransactions({ address, nbSkip, nbFetch, height, hashHex }) {
        const req = new bchrpc.GetAddressTransactionsRequest();
        if (nbSkip) {
            req.setNbSkip(nbSkip);
        }
        if (nbFetch) {
            req.setNbFetch(nbFetch);
        }
        if (height) {
            req.setHeight(height);
        }
        if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        req.setAddress(address);
        return new Promise((resolve, reject) => {
            this.client.getAddressTransactions(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    getUnspentOutput({ hash, hashHex, vout, includeMempool }) {
        const req = new bchrpc.GetUnspentOutputRequest();
        if (includeMempool) {
            req.setIncludeMempool(true);
        }
        if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        req.setIndex(vout);
        return new Promise((resolve, reject) => {
            this.client.getUnspentOutput(req, null, (err, data) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    }
    /**
     * Retrieve merkle (SPV) proof that the given transaction is in the provided block.
     * @param hash - the tx hash, in either a 'base64' encoded string or byte array, little-endian.
     * @param hashHex - the tx hash as a big-endian 'hex' encoded string, will be overridden by hash if also provided.
     */
    getMerkleProof({ hash, hashHex }) {
        const req = new bchrpc.GetMerkleProofRequest();
        if (hashHex) {
            req.setTransactionHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setTransactionHash(hash);
        }
        return new Promise((resolve, reject) => {
            this.client.getMerkleProof(req, null, (err, data) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(data);
                }
            });
        });
    }
    getAddressUtxos({ address, includeMempool }) {
        const req = new bchrpc.GetAddressUnspentOutputsRequest();
        req.setAddress(address);
        if (includeMempool) {
            req.setIncludeMempool(true);
        }
        return new Promise((resolve, reject) => {
            this.client.getAddressUnspentOutputs(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Retrieve raw block from a hash
     * @param hash - the hash, in either a 'base64' encoded string or byte array, little-endian.
     * @param hashHex - the hash as a big-endian 'hex' encoded string, will be overridden by hash if also provided.
     */
    getRawBlock({ hash, hashHex }) {
        const req = new bchrpc.GetRawBlockRequest();
        if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        else {
            throw Error("No hash provided for raw block request");
        }
        return new Promise((resolve, reject) => {
            this.client.getRawBlock(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Retrieve block info given a block number or hash
     * @param index - the block number to be retrieved.
     * @param hash - the hash, in either a 'base64' encoded string or byte array, little-endian.
     * @param hashHex - the hash as a big-endian 'hex' encoded string, will be overridden by hash if also provided.
     * @param fullTransactions - a flag to return full transaction data, by defult `false` only transaction hashes are returned.
     */
    getBlock({ index, hash, hashHex, fullTransactions }) {
        const req = new bchrpc.GetBlockRequest();
        if (index !== null && index !== undefined) {
            req.setHeight(index);
        }
        else if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        else {
            throw Error("No index or hash provided for block");
        }
        if (fullTransactions) {
            req.setFullTransactions(true);
        }
        return new Promise((resolve, reject) => {
            this.client.getBlock(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Retrieve block filter given a block number or hash
     * @param height - the block number index to be retrieved.
     * @param hash - the hash, expressed in little-endian in either a base64 encoded string or byte array.
     * @param hashHex - the hash as a big-endian 'hex' encoded string, will be overridden a hash if provided.
     */
    getBlockFilter({ height, hash, hashHex }) {
        const req = new bchrpc.GetBlockInfoRequest();
        if (height !== null && height !== undefined) {
            req.setHeight(height);
        }
        else if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        return new Promise((resolve, reject) => {
            this.client.getBlockFilter(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Retrieve block info given a block number or hash
     * @param height - the block number index to be retrieved.
     * @param hash - the hash, expressed in little-endian in either a base64 encoded string or byte array.
     * @param hashHex - the hash as a big-endian 'hex' encoded string, will be overridden a hash if provided.
     */
    getBlockInfo({ height, hash, hashHex }) {
        const req = new bchrpc.GetBlockInfoRequest();
        if (height !== null && height !== undefined) {
            req.setHeight(height);
        }
        else if (hashHex) {
            req.setHash(util.hexToU8(hashHex).reverse());
        }
        else if (hash) {
            req.setHash(hash);
        }
        return new Promise((resolve, reject) => {
            this.client.getBlockInfo(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * Retrieve block info for the network, network state and host node.
     */
    getBlockchainInfo() {
        return new Promise((resolve, reject) => {
            this.client.getBlockchainInfo(new bchrpc.GetBlockchainInfoRequest(), null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    /**
     * @param includeMempoolAcceptance - If true, new unconfirmed transactions from mempool are included apart from the ones confirmed in a block.
     * @param includeBlockAcceptance - If true, transactions are included when they are confirmed. This notification is sent in addition to any requested mempool notifications.
     * @param includeSerializedTxn - If true, transactions are serialized using bitcoin protocol encoding. Default is false, transaction will be Marshaled.
     * @param filter - Transaction filter
     * @param subscribeAllTransactions - If true, a filter will be constructed that captures all transactions
     * @param unsubscribe - NOT IMPLEMENTED, see ClientReadableStream.cancel()
     */
    subscribeTransactions({ includeMempoolAcceptance, includeBlockAcceptance, includeSerializedTxn, transactionFilter, unsubscribe }) {
        return new Promise((resolve, reject) => {
            const req = new bchrpc.SubscribeTransactionsRequest();
            includeMempoolAcceptance ? req.setIncludeMempool(true) : req.setIncludeMempool(false);
            includeBlockAcceptance ? req.setIncludeInBlock(true) : req.setIncludeInBlock(false);
            includeSerializedTxn ? req.setSerializeTx(true) : req.setSerializeTx(false);
            if (transactionFilter) {
                transactionFilter.setAllTransactions(false);
                req.setSubscribe(transactionFilter);
            }
            else {
                const defaultFilter = new bchrpc.TransactionFilter();
                defaultFilter.setAllTransactions(true);
                req.setSubscribe(defaultFilter);
            }
            if (unsubscribe) {
                throw new Error('Unsubscribing is not currently (2020) possible on grpc-web, see grpc-web ClientReadableStream.cancel()');
            }
            try {
                resolve(this.client.subscribeTransactions(req));
            }
            catch (err) {
                reject(err);
            }
        });
    }
    subscribeBlocks({ includeSerializedBlock, includeTxnHashes, includeTxnData }) {
        return new Promise((resolve, reject) => {
            const req = new bchrpc.SubscribeBlocksRequest();
            includeTxnHashes ? req.setFullBlock(true) : req.setFullBlock(false);
            includeTxnData ? req.setFullTransactions(true) : req.setFullTransactions(false);
            includeSerializedBlock ? req.setSerializeBlock(true) : req.setSerializeBlock(false);
            try {
                resolve(this.client.subscribeBlocks(req));
            }
            catch (err) {
                reject(err);
            }
        });
    }
    submitTransaction({ txnHex, txn }) {
        let tx;
        const req = new bchrpc.SubmitTransactionRequest();
        if (txnHex) {
            tx = util.hexToU8(txnHex);
        }
        else if (txn) {
            tx = txn;
        }
        else {
            throw Error("Most provide either Hex string or Uint8Array");
        }
        req.setTransaction(tx);
        return new Promise((resolve, reject) => {
            this.client.submitTransaction(req, null, (err, response) => {
                if (err !== null) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
}
exports.default = GrpcClient;


/***/ }),
/* 11 */
/***/ (function(module, exports, __nested_webpack_require_714269__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyTransaction = exports.verifyBlock = exports.arrayBufferToBase64 = exports.u8toBase64 = exports.u8toHex = exports.base64toU8 = exports.base64toHex = exports.hexToBase64 = exports.hexToU8 = exports.numberPairToBase64 = exports.numberTo4ByteLEArray = exports.getMerkleRootFromProof = exports.compareUint8Array = exports.expandMerkleFlags = exports.hashPair = exports.hashSha256 = exports.sha256sha256 = void 0;
async function sha256sha256(ab) {
    try {
        return await crypto.subtle.digest('SHA-256', await crypto.subtle.digest('SHA-256', ab));
    }
    catch (error) {
        throw error;
    }
}
exports.sha256sha256 = sha256sha256;
async function hashSha256(a) {
    a = (typeof a === 'string') ? base64toU8(a) : a;
    return await new Uint8Array(await sha256sha256(new Uint8Array([...a])));
}
exports.hashSha256 = hashSha256;
async function hashPair(a, b) {
    // If an argument is missing, assume it is a starting hash and return it
    if (!a) {
        return b;
    }
    ;
    if (!b) {
        return a;
    }
    ;
    // Convert base64 strings to Uint8Arrays
    a = (typeof a === 'string') ? base64toU8(a) : a;
    b = (typeof b === 'string') ? base64toU8(b) : b;
    return await new Uint8Array(await sha256sha256(new Uint8Array([...a, ...b])));
}
exports.hashPair = hashPair;
function expandMerkleFlags(b) {
    return Array.from(b)
        .reverse()
        .map(x => x.toString(2).padStart(8, '0'))
        .join("")
        .replace(/\b0+/g, '')
        .split("")
        .map(x => parseInt(x, 10))
        .reverse();
}
exports.expandMerkleFlags = expandMerkleFlags;
function compareUint8Array(a, b) {
    // Convert base64 strings to Uint8Arrays
    a = (typeof a === 'string') ? base64toU8(a) : a;
    b = (typeof b === 'string') ? base64toU8(b) : b;
    for (let i = a.length; -1 < i; i -= 1) {
        if ((a[i] !== b[i]))
            return false;
    }
    return true;
}
exports.compareUint8Array = compareUint8Array;
async function getMerkleRootFromProof(proof, flags, fn) {
    // proofCur tracks where in the list of proofs the next one is pulled from
    // count the number of zeros to get the index of the transaction hash in the proof array
    let proofCur = flags.filter(x => x === 0).length;
    // accumulator is the root of the proof walked so far
    let accumulator = null;
    for (let i = flags.length - 1; i >= 0;) {
        // If the previous leaf was on the right side, combine it with the hash on the left
        if (flags[i] === 0) {
            proofCur--;
            accumulator = await fn(proof.splice(proofCur, 1).pop(), accumulator);
            flags.pop(); // remove the flag indicating that the previous node was on the right
            i--;
            flags.pop(); // remove the node flag
            i--;
        }
        // Otherwise, combine it with the leaf to the right
        else {
            accumulator = await fn(accumulator, proof.splice(proofCur, 1).pop());
            flags.pop(); // remove the node flag
            i--;
        }
    }
    return accumulator;
}
exports.getMerkleRootFromProof = getMerkleRootFromProof;
function numberTo4ByteLEArray(num) {
    const byteArray = [0, 0, 0, 0];
    for (let index = 0; index < byteArray.length; index++) {
        const byte = num & 0xff;
        byteArray[index] = byte;
        num = (num - byte) / 256;
    }
    return byteArray;
}
exports.numberTo4ByteLEArray = numberTo4ByteLEArray;
;
function numberPairToBase64(hi, lo) {
    const hiArray = numberTo4ByteLEArray(hi);
    const loArray = numberTo4ByteLEArray(lo);
    return u8toBase64(new Uint8Array([...hiArray, ...loArray]));
}
exports.numberPairToBase64 = numberPairToBase64;
function hexToU8(hashHex) {
    return new Uint8Array(hashHex.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));
}
exports.hexToU8 = hexToU8;
function hexToBase64(hashHex) {
    return btoa(hashHex.match(/\w{2}/g).map((a) => String.fromCharCode(parseInt(a, 16))).join(""));
}
exports.hexToBase64 = hexToBase64;
function base64toHex(b64) {
    return base64toU8(b64).reduce(reduceToHex, '');
}
exports.base64toHex = base64toHex;
// see https://jsperf.com/base64-to-uint8array/19
function base64toU8(b64) {
    const binary = atob(b64);
    const len = binary.length >>> 0;
    const v = new Uint8Array(len);
    for (let i = 0; i < len; ++i)
        v[i] = binary.charCodeAt(i);
    return v;
}
exports.base64toU8 = base64toU8;
const hexArray = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
const reduceToHex = (s, c) => s + hexArray[c >>> 4] + hexArray[c & 0x0F];
function u8toHex(u8) {
    return u8.reduce(reduceToHex, '');
}
exports.u8toHex = u8toHex;
const reduceToBase64 = (s, c) => s + String.fromCharCode(c);
function u8toBase64(u8) {
    return btoa(u8.reduce(reduceToBase64, ''));
}
exports.u8toBase64 = u8toBase64;
function arrayBufferToBase64(ab) {
    return u8toBase64(new Uint8Array(ab));
}
exports.arrayBufferToBase64 = arrayBufferToBase64;
async function verifyBlock({ block, hash }) {
    hash = (typeof hash === 'string') ? base64toU8(hash) : hash;
    if (!block) {
        return false;
    }
    const header = new Uint8Array([
        ...numberTo4ByteLEArray(block.getVersion()),
        ...block.getPreviousBlock_asU8(),
        ...block.getMerkleRoot_asU8(),
        ...numberTo4ByteLEArray(block.getTimestamp()),
        ...numberTo4ByteLEArray(block.getBits()),
        ...numberTo4ByteLEArray(block.getNonce())
    ]);
    const hashComputed = await hashSha256(header);
    return compareUint8Array(hashComputed, hash);
}
exports.verifyBlock = verifyBlock;
async function verifyTransaction({ txnHash, txnHashHex, merkleRoot, merkleRootHex, proof }) {
    let tx;
    let localMerkleRoot;
    if (txnHashHex) {
        tx = hexToU8(txnHashHex);
    }
    else if (txnHash) {
        tx = txnHash;
    }
    else {
        throw Error("Most provide a transaction id for verification");
    }
    if (merkleRootHex) {
        localMerkleRoot = hexToU8(merkleRootHex);
    }
    else if (merkleRoot) {
        localMerkleRoot = merkleRoot;
    }
    else {
        throw Error("Most provide a locally validated merkle root for verification");
    }
    const merkleFlags = expandMerkleFlags(await proof.getFlags_asU8());
    const merkleHashes = await proof.getHashesList();
    const merkleCheckPromise = getMerkleRootFromProof(merkleHashes, merkleFlags, hashPair);
    return compareUint8Array(await merkleCheckPromise, localMerkleRoot);
}
exports.verifyTransaction = verifyTransaction;


/***/ }),
/* 12 */
/***/ (function(module, exports, __nested_webpack_require_720962__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
const siphash = __importStar(__nested_webpack_require_720962__(13));
const util_1 = __nested_webpack_require_720962__(11);
function toValue(hi, lo) {
    if (hi > 0) {
        throw Error("GCS value overflowed 32bits");
    }
    else {
        return Number(lo >>> 0);
    }
}
class Filter {
    /**
     * Create a Golomb-Rice encoded set filter handler for a particular block.
     * @param blockHash - The hash block corresponding to the filter object.
     * @param filterData - The compact filter for the block.
     */
    constructor({ blockHash, filterData, p = 19, m = 784931 }) {
        this.blockHash = (typeof blockHash === 'string') ? util_1.base64toU8(blockHash) : blockHash;
        this.keySize = 16;
        this.p = p;
        this.m = m;
        const filterBlob = this._gscFilterToArray(filterData);
        this.n = this._gcsGetFilterSize(filterBlob);
        this.filterValues = this._gcsGetFilterValues(filterBlob, p);
    }
    /**
     * Determine whether some data likely matches the filter.
     * @param data - The public key script or serialized outpoint to be matched
     */
    match({ data }) {
        const dataValue = this._getFilterValue(data);
        return this.filterValues.has(dataValue);
    }
    /**
     * Determine whether a list of Base64 encoded strings likely matches the filter
     * @param values - A list of data as Base64 encoded strings to match
     */
    matchAllBase64(values) {
        const valuesU8 = values.map(s => util_1.base64toU8(s));
        return this.matchAllU8(valuesU8);
    }
    /**
     * Determine whether a list of Uint8Arrays likely matches the filter
     * @param values - A list of data as Uint8Arrays to match
     */
    matchAllU8(values) {
        const mapFn = (x) => this._getFilterValue(x);
        const valueList = values.map(mapFn);
        const intersection = this._intersection(this.filterValues, new Set([...valueList]));
        return intersection.values().next().value > 0;
    }
    /**
     * Get the numberic value corresponding to the data
     * @param data - A Uint8Array to match
     */
    _getFilterValue(data) {
        const key = this.blockHash.subarray(0, this.keySize);
        const modulus = siphash.mul64(this.m, this.n);
        const b = siphash.sipmod(data, key, modulus.hi, modulus.lo);
        return toValue(b[0], b[1]);
    }
    _intersection(setA, setB) {
        const _intersection = new Set();
        for (const elem of setB) {
            if (setA.has(elem)) {
                _intersection.add(elem);
            }
        }
        return _intersection;
    }
    /**
     * Parse the compact filter for a block and return a set of numeric values.
     * @param rawFilter - The filter as a binary numeric array
     * @param p - The bucket size of the Golomb encoding
     */
    _gcsGetFilterValues(rawFilter, p) {
        // disgard the first 8 bits
        rawFilter = rawFilter.splice(8);
        // Create a Set for the decoded values
        const values = new Set();
        let quo = 0;
        let value = 0;
        while (rawFilter.length > 0) {
            const i = rawFilter.shift();
            // end of quotent bits
            if (i === 0) {
                // get a block value and store it in the Set
                const remainder = Number("0b" + rawFilter.slice(0, p).join(""));
                const delta = (quo << p) + Number(remainder);
                if (delta > 0) {
                    value += delta;
                    values.add(value);
                }
                quo = 0;
                // remove the bucket bits
                rawFilter = rawFilter.splice(p);
            }
            else {
                // increment the quotent
                quo++;
            }
        }
        return values;
    }
    /**
     * Transform the filter from an Uint8Array to type number[] of 1/0s
     * @param f - A Uint8Array to match
     */
    _gscFilterToArray(f) {
        return Array.from(f)
            .map(x => x.toString(2).padStart(8, '0'))
            .join("")
            .split("")
            .map(x => parseInt(x, 2));
    }
    /**
     * Get the decimal value of the first eight bits of a binary array
     * @param f - a binary array provided as an array of numbers
     */
    _gcsGetFilterSize(f) {
        const sizeN = f.slice(0, 8);
        return parseInt(sizeN.join(""), 2);
    }
}
exports.Filter = Filter;


/***/ }),
/* 13 */
/***/ (function(module, exports, __nested_webpack_require_726377__) {

"use strict";
/*!
 *
 * This is a truncated version of the bcoin library for siphash
 *
 *
 * siphash.js - siphash for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */

Object.defineProperty(exports, "__esModule", { value: true });
exports.mul64 = exports.sipmod = exports.siphash = void 0;
/*
 * Constants
 */
const HI = 1 / 0x100000000;
/**
 * Javascript siphash 2-4 implementation.
 * @private
 * @param {Uint8Array} data
 * @param {Uint8Array} key - 128 bit key.
 * @returns {Array} [hi, lo]
 */
function _siphash(data, key) {
    const blocks = data.length >>> 3;
    const c0 = new U64(0x736f6d65, 0x70736575);
    const c1 = new U64(0x646f7261, 0x6e646f6d);
    const c2 = new U64(0x6c796765, 0x6e657261);
    const c3 = new U64(0x74656462, 0x79746573);
    const f0 = new U64(data.length << 24, 0);
    const f1 = new U64(0, 0xff);
    const k0 = U64.fromRaw(key, 0);
    const k1 = U64.fromRaw(key, 8);
    // Init
    const v0 = c0.ixor(k0);
    const v1 = c1.ixor(k1);
    const v2 = c2.ixor(k0);
    const v3 = c3.ixor(k1);
    // Blocks
    let p = 0;
    for (let i = 0; i < blocks; i++) {
        const d = U64.fromRaw(data, p);
        p += 8;
        v3.ixor(d);
        sipround(v0, v1, v2, v3);
        sipround(v0, v1, v2, v3);
        v0.ixor(d);
    }
    switch (data.length & 7) {
        case 7:
            f0.hi |= data[p + 6] << 16;
        case 6:
            f0.hi |= data[p + 5] << 8;
        case 5:
            f0.hi |= data[p + 4];
        case 4:
            f0.lo |= data[p + 3] << 24;
        case 3:
            f0.lo |= data[p + 2] << 16;
        case 2:
            f0.lo |= data[p + 1] << 8;
        case 1:
            f0.lo |= data[p];
    }
    // Finalization
    v3.ixor(f0);
    sipround(v0, v1, v2, v3);
    sipround(v0, v1, v2, v3);
    v0.ixor(f0);
    v2.ixor(f1);
    sipround(v0, v1, v2, v3);
    sipround(v0, v1, v2, v3);
    sipround(v0, v1, v2, v3);
    sipround(v0, v1, v2, v3);
    v0.ixor(v1);
    v0.ixor(v2);
    v0.ixor(v3);
    return [v0.hi, v0.lo];
}
/**
 * Javascript siphash 2-4 implementation.
 * Used by bitcoin for compact block relay.
 * @param {Uint8Array} data
 * @param {Uint8Array} key - 128 bit key.
 * @returns {Array} [hi, lo]
 */
function siphash(data, key) {
    return _siphash(data, key);
}
exports.siphash = siphash;
/**
 * Javascript siphash 2-4 implementation
 * plus 128 bit reduction by a modulus.
 * Used by the neutrino protocol.
 * @param {Uint8Array} data
 * @param {Uint8Array} key - 128 bit key.
 * @param {Number} mhi - Modulus hi bits.
 * @param {Number} mlo - Modulus lo bits.
 * @returns {Array} [hi, lo]
 */
function sipmod(data, key, mhi, mlo) {
    const [hi, lo] = _siphash(data, key);
    return reduce64(hi, lo, mhi, mlo);
}
exports.sipmod = sipmod;
/**
 * U64
 * @ignore
 */
class U64 {
    constructor(hi, lo) {
        this.hi = hi | 0;
        this.lo = lo | 0;
    }
    iadd(b) {
        const a = this;
        // Credit to @indutny for this method.
        const lo = (a.lo + b.lo) | 0;
        const s = lo >> 31;
        const as = a.lo >> 31;
        const bs = b.lo >> 31;
        const c = ((as & bs) | (~s & (as ^ bs))) & 1;
        const hi = ((a.hi + b.hi) | 0) + c;
        a.hi = hi | 0;
        a.lo = lo;
        return a;
    }
    ixor(b) {
        this.hi ^= b.hi;
        this.lo ^= b.lo;
        return this;
    }
    irotl(bits) {
        let ahi = this.hi;
        let alo = this.lo;
        let bhi = this.hi;
        let blo = this.lo;
        // a = x << b
        if (bits < 32) {
            ahi <<= bits;
            ahi |= alo >>> (32 - bits);
            alo <<= bits;
        }
        else {
            ahi = alo << (bits - 32);
            alo = 0;
        }
        bits = 64 - bits;
        // b = x >> (64 - b)
        if (bits < 32) {
            blo >>>= bits;
            blo |= bhi << (32 - bits);
            bhi >>>= bits;
        }
        else {
            blo = bhi >>> (bits - 32);
            bhi = 0;
        }
        // a | b
        this.hi = ahi | bhi;
        this.lo = alo | blo;
        return this;
    }
    static fromRaw(data, off) {
        const lo = readUInt32LE(data, off);
        const hi = readUInt32LE(data, off + 4);
        return new U64(hi, lo);
    }
}
/*
 * Helpers
 */
function sipround(v0, v1, v2, v3) {
    v0.iadd(v1);
    v1.irotl(13);
    v1.ixor(v0);
    v0.irotl(32);
    v2.iadd(v3);
    v3.irotl(16);
    v3.ixor(v2);
    v0.iadd(v3);
    v3.irotl(21);
    v3.ixor(v0);
    v2.iadd(v1);
    v1.irotl(17);
    v1.ixor(v2);
    v2.irotl(32);
}
// Compute `((uint128_t)a * b) >> 64`
function reduce64(ahi, alo, bhi, blo) {
    const axbhi = mul64(ahi, bhi);
    const axbmid = mul64(ahi, blo);
    const bxamid = mul64(bhi, alo);
    const axblo = mul64(alo, blo);
    // Hack:
    const c = (axbmid.lo >>> 0) + (bxamid.lo >>> 0) + (axblo.hi >>> 0);
    const m = (axbmid.hi >>> 0) + (bxamid.hi >>> 0) + ((c * HI) >>> 0);
    // More hacks:
    const mhi = (m * HI) | 0;
    const mlo = m | 0;
    const { hi, lo } = sum64(axbhi.hi, axbhi.lo, mhi, mlo);
    return [hi, lo];
}
function sum64(ahi, alo, bhi, blo) {
    // Credit to @indutny for this method.
    const lo = (alo + blo) | 0;
    const s = lo >> 31;
    const as = alo >> 31;
    const bs = blo >> 31;
    const c = ((as & bs) | (~s & (as ^ bs))) & 1;
    const hi = (((ahi + bhi) | 0) + c) | 0;
    return { hi, lo };
}
function mul64(alo, blo) {
    const a16 = alo >>> 16;
    const a00 = alo & 0xffff;
    const b16 = blo >>> 16;
    const b00 = blo & 0xffff;
    let c48 = 0;
    let c32 = 0;
    let c16 = 0;
    let c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xffff;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xffff;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xffff;
    c48 += c32 >>> 16;
    c32 &= 0xffff;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xffff;
    c48 += c32 >>> 16;
    c48 &= 0xffff;
    const hi = (c48 << 16) | c32;
    const lo = (c16 << 16) | c00;
    return { hi, lo };
}
exports.mul64 = mul64;
function readUInt32LE(data, offset) {
    offset = offset >>> 0;
    return ((data[offset]) |
        (data[offset + 1] << 8) |
        (data[offset + 2] << 16)) +
        (data[offset + 3] * 0x1000000);
}


/***/ })
/******/ ]);
});
//# sourceMappingURL=bchrpc.bundle.js.map

/***/ }),

/***/ "./src/cashaddr.ts":
/*!*************************!*\
  !*** ./src/cashaddr.ts ***!
  \*************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deriveCashAddr [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deriveCashAddr = void 0;
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// Given a private key and network, derive cashaddr from the locking code
// TODO, is there a more direct way to do this?
// TODO, This can be moved off the Wallet Class
async function deriveCashAddr(privateKey, networkPrefix) {
    const lockingScript = "lock";
    const template = libauth_1.validateAuthenticationTemplate(libauth_1.authenticationTemplateP2pkhNonHd);
    if (typeof template === "string") {
        throw new Error("Address template error");
    }
    const lockingData = {
        keys: { privateKeys: { key: privateKey } },
    };
    const compiler = await libauth_1.authenticationTemplateToCompilerBCH(template);
    const lockingBytecode = compiler.generateBytecode(lockingScript, lockingData);
    if (!lockingBytecode.success) {
        throw Error(JSON.stringify(lockingBytecode));
    }
    else {
        return libauth_1.lockingBytecodeToCashAddress(lockingBytecode.bytecode, networkPrefix);
    }
}
exports.deriveCashAddr = deriveCashAddr;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/*! CommonJS bailout: this is used directly at 9:20-24 */
/*! CommonJS bailout: exports is used directly at 13:30-37 */
/*! CommonJS bailout: exports is used directly at 15:38-45 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./ok */ "./src/ok.ts"), exports);
//export * from "./generateBlock";
__exportStar(__webpack_require__(/*! ./wallet/Wif */ "./src/wallet/Wif.ts"), exports);


/***/ }),

/***/ "./src/ok.ts":
/*!*******************!*\
  !*** ./src/ok.ts ***!
  \*******************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ok [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ok = void 0;
function ok() {
    return true;
}
exports.ok = ok;


/***/ }),

/***/ "./src/transaction/Wif.ts":
/*!********************************!*\
  !*** ./src/transaction/Wif.ts ***!
  \********************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export buildP2pkhNonHdTransaction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInputTotal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSuitableUtxos [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getInputTotal = exports.getSuitableUtxos = exports.buildP2pkhNonHdTransaction = void 0;
// Unstable?
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// Build a transaction for a p2pkh transaction for a non HD wallet
async function buildP2pkhNonHdTransaction(inputs, output, signingKey, fee = 0) {
    var _a, _b;
    const template = libauth_1.validateAuthenticationTemplate(libauth_1.authenticationTemplateP2pkhNonHd);
    if (typeof template === "string") {
        throw new Error("Transaction template error");
    }
    const compiler = await libauth_1.authenticationTemplateToCompilerBCH(template);
    const amount = output.amount.inSatoshi();
    let signedInputs = [];
    for (const i of inputs) {
        const utxoTxnValue = i.getValue();
        const utxoIndex = (_a = i.getOutpoint()) === null || _a === void 0 ? void 0 : _a.getIndex();
        // slice will create a clone of the array
        let utxoOutpointTransactionHash = (_b = i
            .getOutpoint()) === null || _b === void 0 ? void 0 : _b.getHash_asU8().slice();
        // reverse the cloned copy
        utxoOutpointTransactionHash === null || utxoOutpointTransactionHash === void 0 ? void 0 : utxoOutpointTransactionHash.reverse();
        if (!utxoOutpointTransactionHash || utxoIndex === undefined) {
            throw new Error("Missing unspent outpoint when building transaction");
        }
        let newInput = {
            outpointIndex: utxoIndex,
            outpointTransactionHash: utxoOutpointTransactionHash,
            sequenceNumber: 0,
            unlockingBytecode: {
                compiler,
                data: {
                    keys: { privateKeys: { key: signingKey } },
                },
                satoshis: libauth_1.bigIntToBinUint64LE(BigInt(utxoTxnValue)),
                script: "unlock",
            },
        };
        signedInputs.push(newInput);
    }
    const changeAmount = ((await getInputTotal(inputs)) - amount) - fee;
    if (!signingKey) {
        throw new Error("Missing signing key when building transaction");
    }
    try {
        let outputLockingBytecode = libauth_1.cashAddressToLockingBytecode(output.address);
        if (!outputLockingBytecode.hasOwnProperty("bytecode") ||
            !outputLockingBytecode.hasOwnProperty("prefix")) {
            throw new Error(outputLockingBytecode.toString());
        }
        outputLockingBytecode = outputLockingBytecode;
        // Get the change locking bytecode
        let changeLockingBytecode = compiler.generateBytecode("lock", {
            keys: { privateKeys: { key: signingKey } },
        });
        if (!changeLockingBytecode.success) {
            throw new Error(changeLockingBytecode.toString());
        }
        const result = libauth_1.generateTransaction({
            inputs: signedInputs,
            locktime: 0,
            outputs: [
                {
                    lockingBytecode: outputLockingBytecode.bytecode,
                    satoshis: libauth_1.bigIntToBinUint64LE(BigInt(output.amount.inSatoshi())),
                },
                {
                    lockingBytecode: changeLockingBytecode.bytecode,
                    satoshis: libauth_1.bigIntToBinUint64LE(BigInt(changeAmount)),
                },
            ],
            version: 2,
        });
        return result;
    }
    catch (error) {
        throw Error(error.toString());
    }
}
exports.buildP2pkhNonHdTransaction = buildP2pkhNonHdTransaction;
async function getSuitableUtxos(unspentOutputs, amount, bestHeight) {
    let suitableUtxos = [];
    let amountRequired = 0;
    for (const u of unspentOutputs) {
        if (u.getIsCoinbase() && bestHeight) {
            let age = bestHeight - u.getBlockHeight();
            if (age > 100) {
                suitableUtxos.push(u);
                amountRequired += u.getValue();
            }
        }
        else {
            suitableUtxos.push(u);
            amountRequired += u.getValue();
        }
        if (amountRequired > amount) {
            break;
        }
    }
    if (amountRequired > amount) {
        return suitableUtxos;
    }
    else {
        throw Error("Could not find suitable outpoints for given amount");
    }
}
exports.getSuitableUtxos = getSuitableUtxos;
// Gets balance by summing value in all utxos in stats
async function getInputTotal(inputs) {
    if (inputs) {
        const balanceArray = await Promise.all(inputs.map(async (o) => {
            return o.getValue();
        }));
        const balance = balanceArray.reduce((a, b) => a + b, 0);
        return balance;
    }
    else {
        return 0;
    }
}
exports.getInputTotal = getInputTotal;


/***/ }),

/***/ "./src/util/randomInt.ts":
/*!*******************************!*\
  !*** ./src/util/randomInt.ts ***!
  \*******************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getRandomInt [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getRandomInt = void 0;
function getRandomInt(max) {
    return Math.floor(Math.random() * Math.floor(max));
}
exports.getRandomInt = getRandomInt;


/***/ }),

/***/ "./src/wallet/Base.ts":
/*!****************************!*\
  !*** ./src/wallet/Base.ts ***!
  \****************************/
/*! flagged exports */
/*! export BaseWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SendRequest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseWallet = exports.SendRequest = void 0;
// Unstable?
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// This is swapped out by webpack for the web module
const grpc_bchrpc_node_1 = __webpack_require__(/*! grpc-bchrpc-node */ "./node_modules/grpc-bchrpc-browser/dist/bchrpc.bundle.js");
class SendRequest {
    constructor(SerializedSendRequest) {
        this.address = SerializedSendRequest[0];
        this.amount = new Amount(SerializedSendRequest[1]);
    }
}
exports.SendRequest = SendRequest;
class Amount {
    constructor(SerializedAmount) {
        this.amount = SerializedAmount[0];
        this.unit = SerializedAmount[1];
    }
    inSatoshi() {
        switch (this.unit) {
            case "satoshi":
                return Number(this.amount);
            case "coin":
                return Number(this.amount / 10e8);
            default:
                throw Error("Unit of value not defined");
        }
    }
}
/**
 * A class to hold features used by all wallets
 * @class  BaseWallet
 */
class BaseWallet {
    constructor(name = "", networkPrefix, url = "") {
        this.name = name;
        this.networkPrefix = networkPrefix;
        this.networkType =
            this.networkPrefix === libauth_1.CashAddressNetworkPrefix.mainnet
                ? "mainnet"
                : "testnet";
        this.isTestnet = this.networkType === "testnet" ? true : false;
        if (this.isTestnet) {
            switch (this.networkPrefix) {
                case libauth_1.CashAddressNetworkPrefix.regtest:
                    url = `${process.env.HOST_IP}:${process.env.GRPC_PORT}`;
                    const cert = `${process.env.BCHD_BIN_DIRECTORY}/${process.env.RPC_CERT}`;
                    const host = `${process.env.HOST}`;
                    this.client = new grpc_bchrpc_node_1.GrpcClient({
                        url: url,
                        testnet: true,
                        rootCertPath: cert,
                        options: {
                            "grpc.ssl_target_name_override": host,
                            "grpc.default_authority": host,
                            "grpc.max_receive_message_length": -1,
                        },
                    });
                    break;
                case libauth_1.CashAddressNetworkPrefix.testnet:
                    url = 'https://bchd-testnet.greyh.at:18335';
                    this.client = new grpc_bchrpc_node_1.GrpcClient({
                        url: url,
                        testnet: true,
                        options: {
                            "grpc.max_receive_message_length": -1,
                        },
                    });
                    break;
            }
        }
        else {
            url = 'https://bchd.greyh.at:8335';
            this.client = new grpc_bchrpc_node_1.GrpcClient({
                url: url,
                testnet: false,
                options: {
                    "grpc.max_receive_message_length": -1,
                },
            });
        }
    }
}
exports.BaseWallet = BaseWallet;


/***/ }),

/***/ "./src/wallet/Wif.ts":
/*!***************************!*\
  !*** ./src/wallet/Wif.ts ***!
  \***************************/
/*! flagged exports */
/*! export RegTestWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TestnetWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Wallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export WifWallet [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RegTestWallet = exports.TestnetWallet = exports.Wallet = exports.WifWallet = void 0;
// Stable
const libauth_1 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
// Unstable?
const libauth_2 = __webpack_require__(/*! @bitauth/libauth */ "./node_modules/@bitauth/libauth/build/module/index.js");
const Base_1 = __webpack_require__(/*! ./Base */ "./src/wallet/Base.ts");
const Wif_1 = __webpack_require__(/*! ../transaction/Wif */ "./src/transaction/Wif.ts");
const cashaddr_1 = __webpack_require__(/*! ../cashaddr */ "./src/cashaddr.ts");
const randomInt_1 = __webpack_require__(/*! ../util/randomInt */ "./src/util/randomInt.ts");
const secp256k1Promise = libauth_1.instantiateSecp256k1();
const sha256Promise = libauth_1.instantiateSha256();
class WifWallet extends Base_1.BaseWallet {
    constructor(name = "", networkPrefix) {
        super(name, networkPrefix);
        this.name = name;
        this.walletType = 'wif';
    }
    // Initialize wallet from a cash addr
    async watchOnly(address) {
        if (address.startsWith("bitcoincash:") && this.networkType === "testnet") {
            throw Error("a testnet address cannot be watched from a mainnet Wallet");
        }
        else if (!address.startsWith("bitcoincash:") &&
            this.networkType === "mainnet") {
            throw Error("a mainnet address cannot be watched from a testnet Wallet");
        }
        this.cashaddr = address;
    }
    // Initialize wallet from Wallet Import Format
    async fromWIF(walletImportFormatString) {
        const sha256 = await sha256Promise;
        const secp256k1 = await secp256k1Promise;
        let result = libauth_2.decodePrivateKeyWif(sha256, walletImportFormatString);
        const hasError = typeof result === "string";
        if (hasError) {
            return new Error(result);
        }
        else {
            let resultData = result;
            this.privateKey = resultData.privateKey;
            this.privateKeyWif = walletImportFormatString;
            this.walletType = "wif";
            this.publicKey = secp256k1.derivePublicKeyCompressed(this.privateKey);
            this.cashaddr = (await cashaddr_1.deriveCashAddr(this.privateKey, this.networkPrefix));
        }
    }
    async generateWif() {
        const sha256 = await sha256Promise;
        const secp256k1 = await secp256k1Promise;
        // nodejs
        if (typeof process !== 'undefined') {
            let crypto = __webpack_require__(/*! crypto */ "?8465");
            this.privateKey = libauth_2.generatePrivateKey(() => crypto.randomBytes(32));
        }
        // window, webworkers, serviceworkers
        else {
            this.privateKey = libauth_2.generatePrivateKey(() => window.crypto.getRandomValues(new Uint8Array(32)));
        }
        this.privateKey = secp256k1.derivePublicKeyCompressed(this.privateKey);
        this.privateKeyWif = libauth_2.encodePrivateKeyWif(sha256, this.privateKey, this.networkType);
        this.walletType = "wif";
        this.cashaddr = (await cashaddr_1.deriveCashAddr(this.privateKey, this.networkPrefix));
    }
    // Processes an array of send requests
    async send(requests) {
        // Deserialize the request
        const sendRequestList = await Promise.all(requests.map(async (rawSendRequest) => {
            return new Base_1.SendRequest(rawSendRequest);
        }));
        // Process the requests
        const sendResponseList = await Promise.all(sendRequestList.map(async (sendRequest) => {
            return this._processSendRequest(sendRequest);
        }));
        return sendResponseList;
    }
    getSerializedWallet() {
        return `${this.walletType}:${this.networkPrefix}:${this.privateKeyWif}`;
    }
    // Gets balance by summing value in all utxos in stats
    async getBalance(address) {
        var _a;
        const res = await ((_a = this.client) === null || _a === void 0 ? void 0 : _a.getAddressUtxos({
            address: address,
            includeMempool: true,
        }));
        const txns = res === null || res === void 0 ? void 0 : res.getOutputsList();
        if (txns) {
            const balanceArray = await Promise.all(txns.map(async (o) => {
                return o.getValue();
            }));
            const balance = balanceArray.reduce((a, b) => a + b, 0);
            return balance;
        }
        else {
            return 0;
        }
    }
    toString() {
        return `${this.walletType}:${this.networkType}:${this.privateKeyWif}`;
    }
    // Return address balance in satoshi
    async balanceSats(address) {
        return await this.getBalance(address);
    }
    // Return address balance in bitcoin
    async balance(address) {
        return (await this.getBalance(address)) / 10e8;
    }
    // Process an individual send request
    async _processSendRequest(request) {
        var _a, _b, _c, _d;
        if (this.networkPrefix && this.privateKey) {
            // get input
            if (!this.cashaddr) {
                throw Error("attempted to send without a cashaddr");
            }
            let utxos = await ((_a = this.client) === null || _a === void 0 ? void 0 : _a.getAddressUtxos({
                address: this.cashaddr,
                includeMempool: true,
            }));
            let bestHeight = (_d = (_c = (await ((_b = this.client) === null || _b === void 0 ? void 0 : _b.getBlockchainInfo()))) === null || _c === void 0 ? void 0 : _c.getBestHeight()) !== null && _d !== void 0 ? _d : 0;
            let spendAmount = request.amount.inSatoshi();
            // TODO refactor this
            if (utxos && typeof spendAmount === 'number') {
                let outputList = (utxos === null || utxos === void 0 ? void 0 : utxos.getOutputsList()) || [];
                let draftUtxos = await Wif_1.getSuitableUtxos(outputList, spendAmount, bestHeight);
                // build transaction
                if (draftUtxos) {
                    // Build the transaction to get the approximate size
                    let draftTransaction = await this._buildEncodedTransaction(draftUtxos, request, this.privateKey, 10);
                    let fee = (draftTransaction.length * 2) + randomInt_1.getRandomInt(1000);
                    let fundingUtxos = await Wif_1.getSuitableUtxos(outputList, spendAmount + fee, bestHeight);
                    if (fundingUtxos) {
                        let encodedTransaction = await this._buildEncodedTransaction(fundingUtxos, request, this.privateKey, fee);
                        return await this._submitTransaction(encodedTransaction);
                    }
                    else {
                        throw Error("The available inputs couldn't satisfy the request with fees");
                    }
                }
                else {
                    throw Error("The available inputs in the wallet cannot satisfy this send request");
                }
            }
            else {
                throw Error("There were no Unspent Outputs or the send amount could not be parsed");
            }
        }
        else {
            throw Error(`Wallet ${this.name} hasn't is missing either a network or private key`);
        }
    }
    // Build encoded transaction 
    async _buildEncodedTransaction(fundingUtxos, request, privateKey, fee = 0) {
        let txn = await Wif_1.buildP2pkhNonHdTransaction(fundingUtxos, request, privateKey, fee);
        // submit transaction
        if (txn.success) {
            return libauth_2.encodeTransaction(txn.transaction);
        }
        else {
            throw Error("Error building transaction with fee");
        }
    }
    // Submit a raw transaction
    async _submitTransaction(transaction) {
        if (this.client) {
            const res = await this.client.submitTransaction({ txn: transaction });
            return res.getHash_asU8();
        }
        else {
            throw Error("Wallet node client was not initialized");
        }
    }
}
exports.WifWallet = WifWallet;
class Wallet extends WifWallet {
    constructor(name = "") {
        throw Error("This wallet is in active development");
        super(name, libauth_2.CashAddressNetworkPrefix.mainnet);
    }
}
exports.Wallet = Wallet;
class TestnetWallet extends WifWallet {
    constructor(name = "") {
        super(name, libauth_2.CashAddressNetworkPrefix.testnet);
    }
}
exports.TestnetWallet = TestnetWallet;
class RegTestWallet extends WifWallet {
    constructor(name = "") {
        super(name, libauth_2.CashAddressNetworkPrefix.regtest);
    }
}
exports.RegTestWallet = RegTestWallet;


/***/ }),

/***/ "?8465":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/index.ts");
/******/ })()
;
});
//# sourceMappingURL=mainnet-0.0.9-rc.js.map