openapi: 3.0.1
info:
  contact:
    email: hello@mainnet.cash
  description: |
    A developer friendly bitcoin cash wallet api

    This API is currently in active development, breaking changes may 
    be made prior to official release of version 1.
    
    **Important:** modifying this library to prematurely operate on mainnet
    may result in loss of funds
  license:
    name: MIT Licence
    url: https://github.com/mainnet-cash/mainnet-js/blob/master/LICENSE
  termsOfService: https://mainnet.cash/terms/
  title: Mainnet Cash
  version: 0.0.1
externalDocs:
  description: Find out more about mainnet-js
  url: https://mainnet.cash
servers:
  - url: http://localhost:3000/v1
tags:
  - description: Create a wallet
    externalDocs:
      description: Find out more
      url: http://mainnet.cash/docs#wallet
    name: wallet
  - description: Send bitcoin cash
    name: send
  - description: Get wallet information
    name: info    
paths:
  /wallet:
    post:
      operationId: createWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WalletRequest"
        description: Request a new new random wallet
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletResponse"
          description: successful operation
        "405":
          content: {}
          description: Invalid input
      summary: create a new wallet
      tags:
        - wallet
  /wallet/deposit_address:
    post:
      operationId: depositAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SerializedWallet"
        description: |
          Request for a deposit address given a wallet
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositAddressResponse"
          description: successful operation
      summary: Get a deposit address in cash address format
      tags: 
        - info
  /wallet/deposit_qr:
    post:
      operationId: depositQr
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SerializedWallet"
        description: |
          Request for a deposit address as a Quick Response code (qrcode)
        required: true
      responses:
        "200":
          content:
            image/png:
              schema:
                type: string
                format: byte
                example: iVBORw0KGgoAAAANSUhEUgA...  ...Jggg==
          description: |
            A Qr code image data in png format as base64 encoded string.
            Suitable for inclusion in html using:
               - \<img src\=\"data:image/png;base64,**iVBORw0KGgoAAAANSUhEUgA...   ...Jggg==**"\>
      summary: Get receiving address as a qrcode
      tags: 
        - info          
  /wallet/balance:
    post:
      operationId: balance    
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SerializedWallet"
        description: |
          Request for a wallet balance
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceResponse"
          description: sucessful operation   
      summary: Get total balance for wallet
      tags: 
        - info
  /wallet/utxo:
    post:
      operationId: utxos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SerializedWallet"
        description: |
          Request detailed list of unspent transaction outputs
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtxoResponse"
          description: sucessful operation    
      summary: Get detailed information about unspent outputs (utxos)
      tags:
        - info
  /wallet/send:
    post:
      operationId: send    
      requestBody:
        content:
          "application/json":
            schema:
              type: array
              items:
                $ref: "#/components/schemas/SendRequest"
        description: place a send request
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendResponse"
          description: transaction accepted
        "400":
          content: {}
          description: Invalid Request
        "418":
          content: {}
          description: Invalid network for given address
      summary: Send some amount to a given address
      tags: 
        - send
  /wallet/send_max:
    post:
      operationId: sendMax
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendMaxRequest"
        description: Request to spend all available funds
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendResponse"
          description: transaction accepted
        "400":
          content: {}
          description: Invalid Request
      summary: Send all available funds to a given address 
      tags: 
        - send      
  /wallet/max_to_send:
    post:
      operationId: maxToSend
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/SerializedWallet"
        description: get amount that will be spend with a spend max request
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceResponse"
          description: transaction accepted
        "400":
          content: {}
          description: Invalid Request
        "418":
          content: {}
          description: Invalid network for given address
      summary: Send some amount to a given address   
      tags: 
        - info
components:
  schemas:
    Utxo:
      properties:
        index:
          type: number
        amount:
          $ref: "#/components/schemas/Amount" 
      allOf:
        - $ref: "#/components/schemas/TransactionId"
    Network:
      properties:
        network:
          description: network type
          enum:
            - mainnet
            - testnet
            - regtest
            - simtest
          example: testnet
          type: string
    WalletType:
      properties:
        type:
          description:
            Wallet type, either a single wallet with private key (wif)
            or a Hierarchical Deterministic wallet determined from a seed.
          enum:
            - wif
            - hd
          example: wif
          type: string
    Amount:
      properties:
        value: 
          type: number
          example: 100
        unit: 
          description: Demoniation for amount
          type: string
          enum:
            - bch
            - bit
            - satoshi
    TransactionId:
      properties:
        transaction:
          type: string
          example: "1e6442a0d3548bb4f917721184ac1cb163ddf324e2c09f55c46ff0ba521cb89f"
          description: The hash of a transaction
    ToAddress:
      properties:
        toAddress:
           type: string
           example: bchtest:qpalhxhl05mlhms3ys43u76rn0ttdv3qg2usm4nm7t
    Address:
      properties:
        address:
           type: string
           example: bchtest:qpttdv3qg2usm4nm7talhxhl05mlhms3ys43u76rn0           
    SendMaxRequest:
      allOf:
        - $ref: "#/components/schemas/ToAddress" 
        - $ref: "#/components/schemas/SerializedWallet"
      required:
        - toAddress
        - wallet        
    SerializedWallet:
      properties:
        wallet:
          type: string
          format: password
          example: "testnet:wif:cNfsPtqN2bMRS7vH5qd8tR8GMvgXyL5BjnGAKgZ8DYEiCrCCQcP6"
          description: |
            All information necessary to reconstruct a wallet, in serialized string
            format in the form "NETWORK:TYPE:SECRET". Note: NETWORK is 
            not the same as the cash address prefix.
      required:
        - wallet               
    DepositAddressResponse:
      allOf:
        - $ref: "#/components/schemas/Address"
    BalanceResponse:
      allOf:
        - $ref: "#/components/schemas/Amount"
    UtxoResponse:
      properties:
        utxos:
          type: "array"
          items:
            $ref: "#/components/schemas/Utxo"  
    WalletResponse:
      properties:
        name:
          description: User defined string for wallet
          example: username1
          type: string
        cashaddress:
          description: |
            The address in cashaddr format.
          example: bchtest:qpttdv3qg2usm4nm7talhxhl05mlhms3ys43u76rn0
          type: string
        wif:
          description: |
            The wallet in Wallet Import Format (WIF)
          example: cNfsPtqN2bMRS7vH5qd8tR8GMvgXyL5BjnGAKgZ8DYEiCrCCQcP6
          type: string
      allOf:
        - $ref: "#/components/schemas/SerializedWallet"
        - $ref: "#/components/schemas/Network"
      type: object
    WalletRequest:
      example:
        name: username1
        type: wif
        network: testnet
      properties:
        name:
          description: User defined string for wallet
          example: username1
          type: string
      allOf:
        - $ref: "#/components/schemas/Network"
        - $ref: "#/components/schemas/WalletType"
      required:
        - name
        - network
        - type
      type: object
    SendRequest:
      example:
        wallet: regtest:wif:abcd123
        amount:
          value: 1000
          unit: 'satoshi'
        toAddress: regtest:qqewrniower...
      properties:
        amount:
          allOf:
            - $ref: "#/components/schemas/Amount"
      allOf:
        - $ref: "#/components/schemas/SerializedWallet" 
        - $ref: "#/components/schemas/ToAddress" 
      required:
        - value
        - unit
        - address
        - wallet
      type: object
    SendResponse:
      allOf:
        - $ref: "#/components/schemas/TransactionId"
      type: object